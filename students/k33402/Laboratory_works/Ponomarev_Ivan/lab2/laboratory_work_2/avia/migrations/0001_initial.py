# Generated by Django 4.1.5 on 2023-03-10 12:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150)),
                ('second_name', models.CharField(max_length=150)),
                ('passport', models.IntegerField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flight_number', models.CharField(max_length=10, unique=True)),
                ('gate_number', models.CharField(choices=[('A00', 'A00'), ('A01', 'A01'), ('A02', 'A02'), ('A03', 'A03'), ('A04', 'A04'), ('A05', 'A05'), ('A06', 'A06'), ('A07', 'A07'), ('A08', 'A08'), ('A09', 'A09')], max_length=3)),
                ('out_place', models.CharField(choices=[('MOS', 'Moscow'), ('SPB', 'Saint-Petersburg'), ('KG', 'Kaliningrad'), ('SO', 'Sochi'), ('NL', 'Nalchik'), ('GR', 'Grozny'), ('MH', 'Mahachkala'), ('KR', 'Krasnodar'), ('AP', 'Anapa')], max_length=20)),
                ('arrival_place', models.CharField(choices=[('MOS', 'Moscow'), ('SPB', 'Saint-Petersburg'), ('KG', 'Kaliningrad'), ('SO', 'Sochi'), ('NL', 'Nalchik'), ('GR', 'Grozny'), ('MH', 'Mahachkala'), ('KR', 'Krasnodar'), ('AP', 'Anapa')], max_length=20)),
                ('departure_date', models.DateTimeField()),
                ('arrival_date', models.DateTimeField()),
                ('airline', models.CharField(max_length=50)),
                ('type_of_flight', models.CharField(choices=[('in', 'Arrival'), ('out', 'Departure')], max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Plane',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plane_name', models.CharField(max_length=30)),
                ('seats_count', models.IntegerField(max_length=525)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.IntegerField(max_length=30)),
                ('seat', models.CharField(max_length=3)),
                ('flight_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='avia.flight')),
                ('passenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='flight',
            name='plane',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='avia.plane'),
        ),
    ]
