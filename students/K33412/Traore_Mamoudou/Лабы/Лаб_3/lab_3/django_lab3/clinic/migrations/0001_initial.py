# Generated by Django 4.1.3 on 2022-11-21 01:58

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(max_length=20, unique=True)),
                ("middle_name", models.CharField(blank=True, max_length=30, null=True)),
                ("specialty", models.CharField(default="Терапевт", max_length=30)),
                (
                    "education",
                    models.CharField(
                        default="Университет им. Мечникова", max_length=40
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("Мужчина", "Мужчина"), ("Женщина", "Женщина")],
                        default="Мужчина",
                        max_length=7,
                    ),
                ),
                ("date_of_birth", models.DateField(default="2000-01-01")),
                ("start_work_date", models.DateField(auto_now_add=True)),
                ("finish_work_date", models.DateField(blank=True, null=True)),
                ("contract_number", models.IntegerField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("finish_time", models.DateTimeField(blank=True, null=True)),
                ("start_time", models.DateTimeField()),
                ("diagnosis", models.CharField(blank=True, max_length=30, null=True)),
                ("health_status", models.TextField(blank=True, null=True)),
                ("recommendations", models.TextField(blank=True, null=True)),
                ("payed", models.BooleanField(default=False)),
                (
                    "form_of_payment",
                    models.CharField(
                        choices=[
                            ("Банковская карта", "Банковская карта"),
                            ("Наличные", "Наличные"),
                        ],
                        default="Наличные",
                        max_length=16,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AppointmentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        choices=[
                            ("Консультация", "Консультация"),
                            ("Осмотр", "Осмотр"),
                            ("Сдача анализов", "Сдача анализов"),
                        ],
                        max_length=15,
                    ),
                ),
                ("price", models.IntegerField(default=1000)),
            ],
        ),
        migrations.CreateModel(
            name="Cabinet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.IntegerField(unique=True)),
                ("phone_number", models.CharField(max_length=11, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("middle_name", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "sex",
                    models.CharField(
                        choices=[("Мужчина", "Мужчина"), ("Женщина", "Женщина")],
                        default="Мужчина",
                        max_length=7,
                    ),
                ),
                ("date_of_birth", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="Timetable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "week_day",
                    models.CharField(
                        choices=[
                            ("пн", "Понедельник"),
                            ("вт", "Вторник"),
                            ("ср", "Среда"),
                            ("чт", "Четверг"),
                            ("пт", "Пятница"),
                            ("сб", "Суббота"),
                            ("вс", "Воскресенье"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "cabinet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timetable",
                        to="clinic.cabinet",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timetable",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cabinet",
            name="doctors",
            field=models.ManyToManyField(
                related_name="cabinets",
                through="clinic.Timetable",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="cabinet",
            name="patients",
            field=models.ManyToManyField(
                related_name="cabinets",
                through="clinic.Appointment",
                to="clinic.patient",
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="cabinet",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="appointments",
                to="clinic.cabinet",
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="appointments",
                to="clinic.patient",
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="clinic.appointmenttype"
            ),
        ),
    ]
