{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21163 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0410\u044d\u0440\u043e\u043f\u043e\u0440\u0442 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438-\u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u0432\u043e\u0437\u0447\u0438\u043a\u0430. \u0420\u0435\u0439\u0441\u044b \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0431\u043e\u0440\u0442\u0430\u043c\u0438, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u043c\u0438 \u0440\u0430\u0437\u043d\u044b\u043c \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u0432\u043e\u0437\u0447\u0438\u043a\u0430\u043c. \u041e \u043a\u0430\u0436\u0434\u043e\u043c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430, \u0442\u0438\u043f, \u0447\u0438\u0441\u043b\u043e \u043c\u0435\u0441\u0442, \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0435\u0442\u0430, \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f-\u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u0432\u043e\u0437\u0447\u0438\u043a. \u041e\u0434\u0438\u043d \u0442\u0438\u043f \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u043c\u043e\u0436\u0435\u0442 \u043b\u0435\u0442\u0430\u0442\u044c \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430\u0445 \u0438 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0443 \u043c\u043e\u0433\u0443\u0442 \u043b\u0435\u0442\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u043e\u0432. \u041e \u043a\u0430\u0436\u0434\u043e\u043c \u0440\u0435\u0439\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u0439\u0441\u0430, \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043f\u0443\u043d\u043a\u0442 \u0432\u044b\u043b\u0435\u0442\u0430, \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f; \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430, \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u043b\u0435\u0442\u0430, \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u044b\u0435 \u043f\u043e\u0441\u0430\u0434\u043a\u0438 (\u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c), \u043f\u0443\u043d\u043a\u0442\u044b \u043f\u043e\u0441\u0430\u0434\u043a\u0438, \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u044b\u0445 \u043f\u043e\u0441\u0430\u0434\u043e\u043a \u0438 \u0434\u0430\u0442 \u0438 \u0432\u0440\u0435\u043c\u044f \u0438\u0445 \u0432\u044b\u043b\u0435\u0442\u0430, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432. \u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0435\u0439\u0441 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u044d\u043a\u0438\u043f\u0430\u0436\u0435\u043c, \u0432 \u0441\u043e\u0441\u0442\u0430\u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0432\u0445\u043e\u0434\u044f\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0438\u0440 \u043a\u043e\u0440\u0430\u0431\u043b\u044f, \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u0438\u043b\u043e\u0442, \u0448\u0442\u0443\u0440\u043c\u0430\u043d \u0438 \u0441\u0442\u044e\u0430\u0440\u0434\u0435\u0441\u0441\u044b \u0438\u043b\u0438 \u0441\u0442\u044e\u0430\u0440\u0434\u044b. \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043a\u0438\u043f\u0430\u0436 \u043c\u043e\u0436\u0435\u0442 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0440\u0435\u0439\u0441\u044b \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430\u0445. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0434\u043e\u043f\u0443\u0441\u043a\u0435 \u0447\u043b\u0435\u043d\u0430 \u044d\u043a\u0438\u043f\u0430\u0436\u0430 \u043a \u0440\u0435\u0439\u0441\u0443. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438-\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430 \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u0424\u0418\u041e, \u0432\u043e\u0437\u0440\u0430\u0441\u0442, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u0441\u0442\u0430\u0436 \u0440\u0430\u0431\u043e\u0442\u044b, \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u042d\u0442\u0430 \u0436\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430 models.py from django.db import models # Create your models here. from django.contrib.auth.models import AbstractUser class Employee(AbstractUser): id = models.AutoField(unique=True, primary_key=True) passport = models.CharField(max_length=10, verbose_name='\u041f\u0430\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435', unique=True) full_name = models.CharField(max_length=120, null=False, verbose_name='\u0424\u0418\u041e') age = models.IntegerField(verbose_name='\u0412\u043e\u0437\u0440\u0430\u0441\u0442', default=18) education = models.CharField(choices=[('\u0421\u041f\u041e', '\u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0435'), ('\u0412\u041e', '\u0432\u044b\u0441\u0448\u0435\u0435')], max_length=3, verbose_name='\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435') experience = models.IntegerField(verbose_name='\u0421\u0442\u0430\u0436 \u0440\u0430\u0431\u043e\u0442\u044b \u0432 \u0433\u043e\u0434\u0430\u0445') in_crew = models.IntegerField(verbose_name='\u0421\u043e\u0441\u0442\u043e\u0438\u0442 \u0432 \u044d\u043a\u0438\u043f\u0430\u0436\u0435 \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c', default=0) REQUIRED_FIELDS = ['email', 'passport', 'full_name', 'experience'] def __str__(self): return \"{}\".format(self.full_name) class Airplane(models.Model): id = models.AutoField(unique=True, primary_key=True) tail_number = models.CharField(max_length=8, verbose_name=\"\u041d\u043e\u043c\u0435\u0440 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430\", unique=True) type = models.CharField(max_length=20, verbose_name=\"\u0422\u0438\u043f\") seats = models.IntegerField(verbose_name=\"\u0427\u0438\u0441\u043b\u043e \u043c\u0435\u0441\u0442\") velocity = models.IntegerField(verbose_name=\"\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0451\u0442\u0430 (\u043a\u043c/\u0447)\") airline = models.CharField(max_length=30, verbose_name=\"\u0410\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f\") under_maintenance = models.BooleanField(default=False, verbose_name=\"\u0412 \u0440\u0435\u043c\u043e\u043d\u0442\u0435\") def __str__(self): return \"{}\".format(self.tail_number) class FlightAsScheduled(models.Model): number = models.IntegerField(unique=True, primary_key=True, verbose_name=\"\u041d\u043e\u043c\u0435\u0440 \u0440\u0435\u0439\u0441\u0430\") distance = models.IntegerField(verbose_name=\"\u0420\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043a\u043c\") departure = models.CharField(max_length=25, verbose_name=\"\u041f\u0443\u043d\u043a\u0442 \u0432\u044b\u043b\u0435\u0442\u0430\") arrival = models.CharField(max_length=25, verbose_name=\"\u041f\u0443\u043d\u043a\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\") transit = models.ForeignKey('Transit', verbose_name=\"\u0422\u0440\u0430\u043d\u0437\u0438\u0442\", null=True, blank=True, on_delete=models.CASCADE) completed = models.IntegerField(verbose_name=\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u0432\u0435\u0440\u0448\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u0439\u0441\u043e\u0432\") def __str__(self): return \"{}, {} -> {}\".format(self.number, self.departure, self.arrival) class Transit(models.Model): id = models.AutoField(unique=True, primary_key=True) destination = models.CharField(max_length=25, verbose_name=\"\u041f\u0443\u043d\u043a\u0442 \u043f\u0435\u0440\u0435\u0441\u0430\u0434\u043a\u0438\") def __str__(self): return \"{}\".format(self.destination) class Flight(models.Model): id = models.AutoField(unique=True, primary_key=True) number = models.ForeignKey('FlightAsScheduled', verbose_name=\"\u041d\u043e\u043c\u0435\u0440 \u0440\u0435\u0439\u0441\u0430\", on_delete=models.CASCADE) plane_id = models.ForeignKey('Airplane', verbose_name=\"\u0421\u0430\u043c\u043e\u043b\u0451\u0442\", on_delete=models.CASCADE) crew = models.IntegerField(verbose_name=\"\u042d\u043a\u0438\u043f\u0430\u0436 \u043d\u0430 \u0431\u043e\u0440\u0442\u0443\") tickets_sold = models.IntegerField(verbose_name=\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432\") departure_date = models.DateField(verbose_name=\"\u0414\u0430\u0442\u0430 \u0432\u044b\u043b\u0435\u0442\u0430\") departure_time = models.TimeField(verbose_name=\"\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430\") arrival_date = models.DateField(verbose_name=\"\u0414\u0430\u0442\u0430 \u043f\u0440\u0438\u043b\u0435\u0442\u0430\") arrival_time = models.TimeField(verbose_name=\"\u0412\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u043b\u0435\u0442\u0430\") transit_arrival_date = models.DateField(verbose_name=\"\u0414\u0430\u0442\u0430 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u043e\u0439 \u043f\u043e\u0441\u0430\u0434\u043a\u0438\", blank=True, null=True) transit_arrival_time = models.TimeField(verbose_name=\"\u0412\u0440\u0435\u043c\u044f \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u043e\u0439 \u043f\u043e\u0441\u0430\u0434\u043a\u0438\", blank=True, null=True) transit_departure_date = models.DateField(verbose_name=\"\u0414\u0430\u0442\u0430 \u0432\u044b\u043b\u0435\u0442\u0430 \u0438\u0437 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u0430\", blank=True, null=True) transit_departure_time = models.TimeField(verbose_name=\"\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430 \u0438\u0437 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u0430\", blank=True, null=True) def __str__(self): return \"{}-{}\".format(self.number, self.plane_id) class AirlineAdministration(models.Model): employee = models.ForeignKey('Employee', verbose_name=\"\u0424\u0418\u041e \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0430\", on_delete=models.CASCADE) job = models.CharField(max_length=30, verbose_name=\"\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c\") clearance = models.BooleanField(default=True, verbose_name=\"\u0414\u043e\u043f\u0443\u0441\u043a\") views.py from rest_framework import generics from airport_app.serializers import * class EmployeeListView(generics.ListAPIView): queryset = Employee.objects.all() serializer_class = EmployeeSerializer class EmployeeCreateView(generics.CreateAPIView): queryset = Employee.objects.all() serializer_class = EmployeeSerializer class EmployeeModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = Employee.objects.all() serializer_class = EmployeeSerializer class AirplaneListView(generics.ListAPIView): serializer_class = AirplaneSerializer def get_queryset(self): queryset = Airplane.objects.all() maintenance_param = self.request.query_params.get('under_maintenance') if maintenance_param: queryset = queryset.filter(under_maintenance=maintenance_param) return queryset class AirplaneCreateView(generics.CreateAPIView): queryset = Airplane.objects.all() serializer_class = AirplaneSerializer class AirplaneModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = Airplane.objects.all() serializer_class = AirplaneSerializer class ScheduleListView(generics.ListAPIView): queryset = FlightAsScheduled.objects.all() serializer_class = ScheduleSerializer class ScheduleCreateView(generics.CreateAPIView): queryset = FlightAsScheduled.objects.all() serializer_class = ScheduleSerializer class ScheduleModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = FlightAsScheduled.objects.all() serializer_class = ScheduleSerializer class FlightListView(generics.ListAPIView): serializer_class = FlightSerializer def get_queryset(self): queryset = Flight.objects.all() number = self.request.query_params.get('number', None) if number: queryset = queryset.filter(number=number) return queryset class FlightCreateView(generics.CreateAPIView): queryset = Flight.objects.all() serializer_class = FlightSerializer class FlightModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = Flight.objects.all() serializer_class = FlightSerializer class AirlineAdministrationListView(generics.ListAPIView): queryset = AirlineAdministration.objects.all() serializer_class = AirlineAdministrationSerializer class AirlineAdministrationCreateView(generics.CreateAPIView): queryset = AirlineAdministration.objects.all() serializer_class = AirlineAdministrationSerializer class AirlineAdministrationModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = AirlineAdministration.objects.all() serializer_class = AirlineAdministrationSerializer class TransitListView(generics.ListAPIView): queryset = Transit.objects.all() serializer_class = TransitSerializer class TransitCreateView(generics.CreateAPIView): queryset = Transit.objects.all() serializer_class = TransitSerializer class TransitModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = Transit.objects.all() serializer_class = TransitSerializer serializers.py from rest_framework import serializers from .models import * class EmployeeSerializer(serializers.ModelSerializer): class Meta: model = Employee fields = ['passport', 'full_name', 'age', 'education', 'experience', 'in_crew'] class AirplaneSerializer(serializers.ModelSerializer): class Meta: model = Airplane fields = '__all__' class ScheduleSerializer(serializers.ModelSerializer): class Meta: model = FlightAsScheduled fields = '__all__' class FlightSerializer(serializers.ModelSerializer): class Meta: model = Flight fields = '__all__' class AirlineAdministrationSerializer(serializers.ModelSerializer): class Meta: model = AirlineAdministration fields = '__all__' class TransitSerializer(serializers.ModelSerializer): class Meta: model = Transit fields = '__all__' urls.py from django.urls import path from .views import * urlpatterns = [ path('employees/', EmployeeListView.as_view()), path('employees/create/', EmployeeCreateView.as_view()), path('employees/<int:pk>/', EmployeeModifyView.as_view()), path('airplanes/', AirplaneListView.as_view()), path('airplanes/create/', AirplaneCreateView.as_view()), path('airplanes/<int:pk>/', AirplaneModifyView.as_view()), path('schedule/', ScheduleListView.as_view()), path('schedule/create/', ScheduleCreateView.as_view()), path('schedule/<int:pk>/', ScheduleModifyView.as_view()), path('flights/', FlightListView.as_view()), path('flights/create/', FlightCreateView.as_view()), path('flights/<int:pk>/', FlightModifyView.as_view()), path('airline_admin/', AirlineAdministrationListView.as_view()), path('airline_admin/create/', AirlineAdministrationCreateView.as_view()), path('airline_admin/<int:pk>/', AirlineAdministrationModifyView.as_view()), path('transit/', TransitListView.as_view()), path('transit/create/', TransitCreateView.as_view()), path('transit/<int:pk>/', TransitModifyView.as_view()) ] Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21163"},{"location":"#no3","text":"","title":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21163"},{"location":"#_1","text":"\u0410\u044d\u0440\u043e\u043f\u043e\u0440\u0442 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438-\u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u0432\u043e\u0437\u0447\u0438\u043a\u0430. \u0420\u0435\u0439\u0441\u044b \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0431\u043e\u0440\u0442\u0430\u043c\u0438, \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u043c\u0438 \u0440\u0430\u0437\u043d\u044b\u043c \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u0432\u043e\u0437\u0447\u0438\u043a\u0430\u043c. \u041e \u043a\u0430\u0436\u0434\u043e\u043c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430, \u0442\u0438\u043f, \u0447\u0438\u0441\u043b\u043e \u043c\u0435\u0441\u0442, \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0435\u0442\u0430, \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f-\u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u0432\u043e\u0437\u0447\u0438\u043a. \u041e\u0434\u0438\u043d \u0442\u0438\u043f \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u043c\u043e\u0436\u0435\u0442 \u043b\u0435\u0442\u0430\u0442\u044c \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430\u0445 \u0438 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0443 \u043c\u043e\u0433\u0443\u0442 \u043b\u0435\u0442\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u043e\u0432. \u041e \u043a\u0430\u0436\u0434\u043e\u043c \u0440\u0435\u0439\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u0439\u0441\u0430, \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043f\u0443\u043d\u043a\u0442 \u0432\u044b\u043b\u0435\u0442\u0430, \u043f\u0443\u043d\u043a\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f; \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430, \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u043b\u0435\u0442\u0430, \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u044b\u0435 \u043f\u043e\u0441\u0430\u0434\u043a\u0438 (\u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c), \u043f\u0443\u043d\u043a\u0442\u044b \u043f\u043e\u0441\u0430\u0434\u043a\u0438, \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u044b\u0445 \u043f\u043e\u0441\u0430\u0434\u043e\u043a \u0438 \u0434\u0430\u0442 \u0438 \u0432\u0440\u0435\u043c\u044f \u0438\u0445 \u0432\u044b\u043b\u0435\u0442\u0430, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432. \u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0435\u0439\u0441 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u044d\u043a\u0438\u043f\u0430\u0436\u0435\u043c, \u0432 \u0441\u043e\u0441\u0442\u0430\u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0432\u0445\u043e\u0434\u044f\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0438\u0440 \u043a\u043e\u0440\u0430\u0431\u043b\u044f, \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u0438\u043b\u043e\u0442, \u0448\u0442\u0443\u0440\u043c\u0430\u043d \u0438 \u0441\u0442\u044e\u0430\u0440\u0434\u0435\u0441\u0441\u044b \u0438\u043b\u0438 \u0441\u0442\u044e\u0430\u0440\u0434\u044b. \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043a\u0438\u043f\u0430\u0436 \u043c\u043e\u0436\u0435\u0442 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0440\u0435\u0439\u0441\u044b \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430\u0445. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0434\u043e\u043f\u0443\u0441\u043a\u0435 \u0447\u043b\u0435\u043d\u0430 \u044d\u043a\u0438\u043f\u0430\u0436\u0430 \u043a \u0440\u0435\u0439\u0441\u0443. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438-\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430 \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u0424\u0418\u041e, \u0432\u043e\u0437\u0440\u0430\u0441\u0442, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u0441\u0442\u0430\u0436 \u0440\u0430\u0431\u043e\u0442\u044b, \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u042d\u0442\u0430 \u0436\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"},{"location":"#_2","text":"models.py from django.db import models # Create your models here. from django.contrib.auth.models import AbstractUser class Employee(AbstractUser): id = models.AutoField(unique=True, primary_key=True) passport = models.CharField(max_length=10, verbose_name='\u041f\u0430\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435', unique=True) full_name = models.CharField(max_length=120, null=False, verbose_name='\u0424\u0418\u041e') age = models.IntegerField(verbose_name='\u0412\u043e\u0437\u0440\u0430\u0441\u0442', default=18) education = models.CharField(choices=[('\u0421\u041f\u041e', '\u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0435'), ('\u0412\u041e', '\u0432\u044b\u0441\u0448\u0435\u0435')], max_length=3, verbose_name='\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435') experience = models.IntegerField(verbose_name='\u0421\u0442\u0430\u0436 \u0440\u0430\u0431\u043e\u0442\u044b \u0432 \u0433\u043e\u0434\u0430\u0445') in_crew = models.IntegerField(verbose_name='\u0421\u043e\u0441\u0442\u043e\u0438\u0442 \u0432 \u044d\u043a\u0438\u043f\u0430\u0436\u0435 \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c', default=0) REQUIRED_FIELDS = ['email', 'passport', 'full_name', 'experience'] def __str__(self): return \"{}\".format(self.full_name) class Airplane(models.Model): id = models.AutoField(unique=True, primary_key=True) tail_number = models.CharField(max_length=8, verbose_name=\"\u041d\u043e\u043c\u0435\u0440 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430\", unique=True) type = models.CharField(max_length=20, verbose_name=\"\u0422\u0438\u043f\") seats = models.IntegerField(verbose_name=\"\u0427\u0438\u0441\u043b\u043e \u043c\u0435\u0441\u0442\") velocity = models.IntegerField(verbose_name=\"\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0451\u0442\u0430 (\u043a\u043c/\u0447)\") airline = models.CharField(max_length=30, verbose_name=\"\u0410\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f\") under_maintenance = models.BooleanField(default=False, verbose_name=\"\u0412 \u0440\u0435\u043c\u043e\u043d\u0442\u0435\") def __str__(self): return \"{}\".format(self.tail_number) class FlightAsScheduled(models.Model): number = models.IntegerField(unique=True, primary_key=True, verbose_name=\"\u041d\u043e\u043c\u0435\u0440 \u0440\u0435\u0439\u0441\u0430\") distance = models.IntegerField(verbose_name=\"\u0420\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043a\u043c\") departure = models.CharField(max_length=25, verbose_name=\"\u041f\u0443\u043d\u043a\u0442 \u0432\u044b\u043b\u0435\u0442\u0430\") arrival = models.CharField(max_length=25, verbose_name=\"\u041f\u0443\u043d\u043a\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\") transit = models.ForeignKey('Transit', verbose_name=\"\u0422\u0440\u0430\u043d\u0437\u0438\u0442\", null=True, blank=True, on_delete=models.CASCADE) completed = models.IntegerField(verbose_name=\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u0432\u0435\u0440\u0448\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u0439\u0441\u043e\u0432\") def __str__(self): return \"{}, {} -> {}\".format(self.number, self.departure, self.arrival) class Transit(models.Model): id = models.AutoField(unique=True, primary_key=True) destination = models.CharField(max_length=25, verbose_name=\"\u041f\u0443\u043d\u043a\u0442 \u043f\u0435\u0440\u0435\u0441\u0430\u0434\u043a\u0438\") def __str__(self): return \"{}\".format(self.destination) class Flight(models.Model): id = models.AutoField(unique=True, primary_key=True) number = models.ForeignKey('FlightAsScheduled', verbose_name=\"\u041d\u043e\u043c\u0435\u0440 \u0440\u0435\u0439\u0441\u0430\", on_delete=models.CASCADE) plane_id = models.ForeignKey('Airplane', verbose_name=\"\u0421\u0430\u043c\u043e\u043b\u0451\u0442\", on_delete=models.CASCADE) crew = models.IntegerField(verbose_name=\"\u042d\u043a\u0438\u043f\u0430\u0436 \u043d\u0430 \u0431\u043e\u0440\u0442\u0443\") tickets_sold = models.IntegerField(verbose_name=\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432\") departure_date = models.DateField(verbose_name=\"\u0414\u0430\u0442\u0430 \u0432\u044b\u043b\u0435\u0442\u0430\") departure_time = models.TimeField(verbose_name=\"\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430\") arrival_date = models.DateField(verbose_name=\"\u0414\u0430\u0442\u0430 \u043f\u0440\u0438\u043b\u0435\u0442\u0430\") arrival_time = models.TimeField(verbose_name=\"\u0412\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u043b\u0435\u0442\u0430\") transit_arrival_date = models.DateField(verbose_name=\"\u0414\u0430\u0442\u0430 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u043e\u0439 \u043f\u043e\u0441\u0430\u0434\u043a\u0438\", blank=True, null=True) transit_arrival_time = models.TimeField(verbose_name=\"\u0412\u0440\u0435\u043c\u044f \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u043d\u043e\u0439 \u043f\u043e\u0441\u0430\u0434\u043a\u0438\", blank=True, null=True) transit_departure_date = models.DateField(verbose_name=\"\u0414\u0430\u0442\u0430 \u0432\u044b\u043b\u0435\u0442\u0430 \u0438\u0437 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u0430\", blank=True, null=True) transit_departure_time = models.TimeField(verbose_name=\"\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430 \u0438\u0437 \u0442\u0440\u0430\u043d\u0437\u0438\u0442\u0430\", blank=True, null=True) def __str__(self): return \"{}-{}\".format(self.number, self.plane_id) class AirlineAdministration(models.Model): employee = models.ForeignKey('Employee', verbose_name=\"\u0424\u0418\u041e \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0430\", on_delete=models.CASCADE) job = models.CharField(max_length=30, verbose_name=\"\u0414\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u044c\") clearance = models.BooleanField(default=True, verbose_name=\"\u0414\u043e\u043f\u0443\u0441\u043a\") views.py from rest_framework import generics from airport_app.serializers import * class EmployeeListView(generics.ListAPIView): queryset = Employee.objects.all() serializer_class = EmployeeSerializer class EmployeeCreateView(generics.CreateAPIView): queryset = Employee.objects.all() serializer_class = EmployeeSerializer class EmployeeModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = Employee.objects.all() serializer_class = EmployeeSerializer class AirplaneListView(generics.ListAPIView): serializer_class = AirplaneSerializer def get_queryset(self): queryset = Airplane.objects.all() maintenance_param = self.request.query_params.get('under_maintenance') if maintenance_param: queryset = queryset.filter(under_maintenance=maintenance_param) return queryset class AirplaneCreateView(generics.CreateAPIView): queryset = Airplane.objects.all() serializer_class = AirplaneSerializer class AirplaneModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = Airplane.objects.all() serializer_class = AirplaneSerializer class ScheduleListView(generics.ListAPIView): queryset = FlightAsScheduled.objects.all() serializer_class = ScheduleSerializer class ScheduleCreateView(generics.CreateAPIView): queryset = FlightAsScheduled.objects.all() serializer_class = ScheduleSerializer class ScheduleModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = FlightAsScheduled.objects.all() serializer_class = ScheduleSerializer class FlightListView(generics.ListAPIView): serializer_class = FlightSerializer def get_queryset(self): queryset = Flight.objects.all() number = self.request.query_params.get('number', None) if number: queryset = queryset.filter(number=number) return queryset class FlightCreateView(generics.CreateAPIView): queryset = Flight.objects.all() serializer_class = FlightSerializer class FlightModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = Flight.objects.all() serializer_class = FlightSerializer class AirlineAdministrationListView(generics.ListAPIView): queryset = AirlineAdministration.objects.all() serializer_class = AirlineAdministrationSerializer class AirlineAdministrationCreateView(generics.CreateAPIView): queryset = AirlineAdministration.objects.all() serializer_class = AirlineAdministrationSerializer class AirlineAdministrationModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = AirlineAdministration.objects.all() serializer_class = AirlineAdministrationSerializer class TransitListView(generics.ListAPIView): queryset = Transit.objects.all() serializer_class = TransitSerializer class TransitCreateView(generics.CreateAPIView): queryset = Transit.objects.all() serializer_class = TransitSerializer class TransitModifyView(generics.RetrieveUpdateDestroyAPIView): queryset = Transit.objects.all() serializer_class = TransitSerializer serializers.py from rest_framework import serializers from .models import * class EmployeeSerializer(serializers.ModelSerializer): class Meta: model = Employee fields = ['passport', 'full_name', 'age', 'education', 'experience', 'in_crew'] class AirplaneSerializer(serializers.ModelSerializer): class Meta: model = Airplane fields = '__all__' class ScheduleSerializer(serializers.ModelSerializer): class Meta: model = FlightAsScheduled fields = '__all__' class FlightSerializer(serializers.ModelSerializer): class Meta: model = Flight fields = '__all__' class AirlineAdministrationSerializer(serializers.ModelSerializer): class Meta: model = AirlineAdministration fields = '__all__' class TransitSerializer(serializers.ModelSerializer): class Meta: model = Transit fields = '__all__' urls.py from django.urls import path from .views import * urlpatterns = [ path('employees/', EmployeeListView.as_view()), path('employees/create/', EmployeeCreateView.as_view()), path('employees/<int:pk>/', EmployeeModifyView.as_view()), path('airplanes/', AirplaneListView.as_view()), path('airplanes/create/', AirplaneCreateView.as_view()), path('airplanes/<int:pk>/', AirplaneModifyView.as_view()), path('schedule/', ScheduleListView.as_view()), path('schedule/create/', ScheduleCreateView.as_view()), path('schedule/<int:pk>/', ScheduleModifyView.as_view()), path('flights/', FlightListView.as_view()), path('flights/create/', FlightCreateView.as_view()), path('flights/<int:pk>/', FlightModifyView.as_view()), path('airline_admin/', AirlineAdministrationListView.as_view()), path('airline_admin/create/', AirlineAdministrationCreateView.as_view()), path('airline_admin/<int:pk>/', AirlineAdministrationModifyView.as_view()), path('transit/', TransitListView.as_view()), path('transit/create/', TransitCreateView.as_view()), path('transit/<int:pk>/', TransitModifyView.as_view()) ]","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"api/airline_admin/","text":"AIRLINE ADMINISTRATION endpoints List of employees and their jobs URL : airline_admin/ Method : GET Code : 200 OK Content : {[]} { \"id\": 1, \"job\": \"\u0448\u0442\u0443\u0440\u043c\u0430\u043d\", \"clearance\": true, \"employee\": 1 }, { \"id\": 2, \"job\": \"\u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u0438\u043b\u043e\u0442\", \"clearance\": true, \"employee\": 2 } Assign a job to an employee URL : airline_admin/create/ Method : POST Code : 200 OK Content : {[]} { \"job\": \"\", \"clearance\": false, \"employee\": null } Modify (get/update/delete) an existing arrangement URL : airline_admin/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"id\": 1, \"job\": \"\u0428\u0442\u0443\u0440\u043c\u0430\u043d\", \"clearance\": false, \"employee\": 2 }","title":"Airline admin"},{"location":"api/airline_admin/#airline-administration-endpoints","text":"","title":"AIRLINE ADMINISTRATION endpoints"},{"location":"api/airline_admin/#list-of-employees-and-their-jobs","text":"URL : airline_admin/ Method : GET Code : 200 OK Content : {[]} { \"id\": 1, \"job\": \"\u0448\u0442\u0443\u0440\u043c\u0430\u043d\", \"clearance\": true, \"employee\": 1 }, { \"id\": 2, \"job\": \"\u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u0438\u043b\u043e\u0442\", \"clearance\": true, \"employee\": 2 }","title":"List of employees and their jobs"},{"location":"api/airline_admin/#assign-a-job-to-an-employee","text":"URL : airline_admin/create/ Method : POST Code : 200 OK Content : {[]} { \"job\": \"\", \"clearance\": false, \"employee\": null }","title":"Assign a job to an employee"},{"location":"api/airline_admin/#modify-getupdatedelete-an-existing-arrangement","text":"URL : airline_admin/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"id\": 1, \"job\": \"\u0428\u0442\u0443\u0440\u043c\u0430\u043d\", \"clearance\": false, \"employee\": 2 }","title":"Modify (get/update/delete) an existing arrangement"},{"location":"api/airplanes/","text":"AIRPLANE endpoints List of airplanes URL : airplanes/ Method : GET Code : 200 OK Content : {[]} { \"id\": 1, \"tail_number\": \"RP-C3224\", \"type\": \"Airbus\", \"seats\": 150, \"velocity\": 840, \"airline\": \"S7 Airlines\", \"under_maintenance\": false }, { \"id\": 2, \"tail_number\": \"VQ-BOZ\", \"type\": \"Airbus\", \"seats\": 150, \"velocity\": 840, \"airline\": \"Nordwind Airlines\", \"under_maintenance\": false }, { \"id\": 3, \"tail_number\": \"N468AC\", \"type\": \"Boeing\", \"seats\": 168, \"velocity\": 807, \"airline\": \"Nordwind Airlines\", \"under_maintenance\": false }, { \"id\": 4, \"tail_number\": \"N737RD\", \"type\": \"Boeing\", \"seats\": 168, \"velocity\": 807, \"airline\": \"S7 Airlines\", \"under_maintenance\": true } Add a new airplane URL : airplanes/create/ Method : POST Code : 200 OK Content : {[]} { \"tail_number\": \"\", \"type\": \"\", \"seats\": null, \"velocity\": null, \"airline\": \"\", \"under_maintenance\": false } Modify (get/update/delete) an existing airplane URL : airplanes/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"id\": 1, \"tail_number\": \"RP-C3224\", \"type\": \"Airbus\", \"seats\": 150, \"velocity\": 840, \"airline\": \"S7 Airlines\", \"under_maintenance\": false }","title":"Airplanes"},{"location":"api/airplanes/#airplane-endpoints","text":"","title":"AIRPLANE endpoints"},{"location":"api/airplanes/#list-of-airplanes","text":"URL : airplanes/ Method : GET Code : 200 OK Content : {[]} { \"id\": 1, \"tail_number\": \"RP-C3224\", \"type\": \"Airbus\", \"seats\": 150, \"velocity\": 840, \"airline\": \"S7 Airlines\", \"under_maintenance\": false }, { \"id\": 2, \"tail_number\": \"VQ-BOZ\", \"type\": \"Airbus\", \"seats\": 150, \"velocity\": 840, \"airline\": \"Nordwind Airlines\", \"under_maintenance\": false }, { \"id\": 3, \"tail_number\": \"N468AC\", \"type\": \"Boeing\", \"seats\": 168, \"velocity\": 807, \"airline\": \"Nordwind Airlines\", \"under_maintenance\": false }, { \"id\": 4, \"tail_number\": \"N737RD\", \"type\": \"Boeing\", \"seats\": 168, \"velocity\": 807, \"airline\": \"S7 Airlines\", \"under_maintenance\": true }","title":"List of airplanes"},{"location":"api/airplanes/#add-a-new-airplane","text":"URL : airplanes/create/ Method : POST Code : 200 OK Content : {[]} { \"tail_number\": \"\", \"type\": \"\", \"seats\": null, \"velocity\": null, \"airline\": \"\", \"under_maintenance\": false }","title":"Add a new airplane"},{"location":"api/airplanes/#modify-getupdatedelete-an-existing-airplane","text":"URL : airplanes/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"id\": 1, \"tail_number\": \"RP-C3224\", \"type\": \"Airbus\", \"seats\": 150, \"velocity\": 840, \"airline\": \"S7 Airlines\", \"under_maintenance\": false }","title":"Modify (get/update/delete) an existing airplane"},{"location":"api/flights/","text":"FLIGHTS endpoints List of flights URL : flights/ Method : GET Code : 200 OK Content : {[]} { \"id\": 1, \"crew\": 4, \"tickets_sold\": 356, \"departure_date\": \"2023-02-16\", \"departure_time\": \"02:34:00\", \"arrival_date\": \"2023-02-17\", \"arrival_time\": \"17:30:00\", \"transit_arrival_date\": \"2023-02-16\", \"transit_arrival_time\": \"10:30:00\", \"transit_departure_date\": \"2023-02-16\", \"transit_departure_time\": \"16:30:00\", \"number\": 1010, \"plane_id\": 1 }, Add a new flight URL : flights/create/ Method : POST Code : 200 OK Content : {[]} { \"crew\": null, \"tickets_sold\": null, \"departure_date\": null, \"departure_time\": null, \"arrival_date\": null, \"arrival_time\": null, \"transit_arrival_date\": null, \"transit_arrival_time\": null, \"transit_departure_date\": null, \"transit_departure_time\": null, \"number\": null, \"plane_id\": null } Modify (get/update/delete) an existing flight URL : flights/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"id\": 1, \"crew\": 4, \"tickets_sold\": 356, \"departure_date\": \"2023-02-16\", \"departure_time\": \"02:34:00\", \"arrival_date\": \"2023-02-17\", \"arrival_time\": \"17:30:00\", \"transit_arrival_date\": \"2023-02-16\", \"transit_arrival_time\": \"10:30:00\", \"transit_departure_date\": \"2023-02-16\", \"transit_departure_time\": \"16:30:00\", \"number\": 1010, \"plane_id\": 1 }","title":"Flights"},{"location":"api/flights/#flights-endpoints","text":"","title":"FLIGHTS endpoints"},{"location":"api/flights/#list-of-flights","text":"URL : flights/ Method : GET Code : 200 OK Content : {[]} { \"id\": 1, \"crew\": 4, \"tickets_sold\": 356, \"departure_date\": \"2023-02-16\", \"departure_time\": \"02:34:00\", \"arrival_date\": \"2023-02-17\", \"arrival_time\": \"17:30:00\", \"transit_arrival_date\": \"2023-02-16\", \"transit_arrival_time\": \"10:30:00\", \"transit_departure_date\": \"2023-02-16\", \"transit_departure_time\": \"16:30:00\", \"number\": 1010, \"plane_id\": 1 },","title":"List of flights"},{"location":"api/flights/#add-a-new-flight","text":"URL : flights/create/ Method : POST Code : 200 OK Content : {[]} { \"crew\": null, \"tickets_sold\": null, \"departure_date\": null, \"departure_time\": null, \"arrival_date\": null, \"arrival_time\": null, \"transit_arrival_date\": null, \"transit_arrival_time\": null, \"transit_departure_date\": null, \"transit_departure_time\": null, \"number\": null, \"plane_id\": null }","title":"Add a new flight"},{"location":"api/flights/#modify-getupdatedelete-an-existing-flight","text":"URL : flights/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"id\": 1, \"crew\": 4, \"tickets_sold\": 356, \"departure_date\": \"2023-02-16\", \"departure_time\": \"02:34:00\", \"arrival_date\": \"2023-02-17\", \"arrival_time\": \"17:30:00\", \"transit_arrival_date\": \"2023-02-16\", \"transit_arrival_time\": \"10:30:00\", \"transit_departure_date\": \"2023-02-16\", \"transit_departure_time\": \"16:30:00\", \"number\": 1010, \"plane_id\": 1 }","title":"Modify (get/update/delete) an existing flight"},{"location":"api/schedule/","text":"SCHEDULE endpoints List of scheduled flights URL : schedule/ Method : GET Code : 200 OK Content : {[]} { \"number\": 1010, \"distance\": 635, \"departure\": \"\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\", \"arrival\": \"\u041c\u043e\u0441\u043a\u0432\u0430\", \"completed\": 33, \"transit\": null }, { \"number\": 1011, \"distance\": 635, \"departure\": \"\u041c\u043e\u0441\u043a\u0432\u0430\", \"arrival\": \"\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\", \"completed\": 30, \"transit\": null } Add a new scheduled flight URL : schedule/create/ Method : POST Code : 200 OK Content : {[]} { \"number\": null, \"distance\": null, \"departure\": \"\", \"arrival\": \"\", \"completed\": null, \"transit\": null } Modify (get/update/delete) an existing scheduled flight URL : schedule/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"number\": 5103, \"distance\": 3313, \"departure\": \"\u041d\u043e\u0432\u043e\u0441\u0438\u0431\u0438\u0440\u0441\u043a\", \"arrival\": \"\u0421\u043e\u0447\u0438\", \"completed\": 17, \"transit\": null }","title":"Schedule"},{"location":"api/schedule/#schedule-endpoints","text":"","title":"SCHEDULE endpoints"},{"location":"api/schedule/#list-of-scheduled-flights","text":"URL : schedule/ Method : GET Code : 200 OK Content : {[]} { \"number\": 1010, \"distance\": 635, \"departure\": \"\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\", \"arrival\": \"\u041c\u043e\u0441\u043a\u0432\u0430\", \"completed\": 33, \"transit\": null }, { \"number\": 1011, \"distance\": 635, \"departure\": \"\u041c\u043e\u0441\u043a\u0432\u0430\", \"arrival\": \"\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\", \"completed\": 30, \"transit\": null }","title":"List of scheduled flights"},{"location":"api/schedule/#add-a-new-scheduled-flight","text":"URL : schedule/create/ Method : POST Code : 200 OK Content : {[]} { \"number\": null, \"distance\": null, \"departure\": \"\", \"arrival\": \"\", \"completed\": null, \"transit\": null }","title":"Add a new scheduled flight"},{"location":"api/schedule/#modify-getupdatedelete-an-existing-scheduled-flight","text":"URL : schedule/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"number\": 5103, \"distance\": 3313, \"departure\": \"\u041d\u043e\u0432\u043e\u0441\u0438\u0431\u0438\u0440\u0441\u043a\", \"arrival\": \"\u0421\u043e\u0447\u0438\", \"completed\": 17, \"transit\": null }","title":"Modify (get/update/delete) an existing scheduled flight"},{"location":"api/transit/","text":"TRANSIT endpoints List of transit destinations URL : transit/ Method : GET Code : 200 OK Content : {[]} { \"id\": 1, \"destination\": \"\u041d\u043e\u0432\u043e\u0441\u0438\u0431\u0438\u0440\u0441\u043a\" }, { \"id\": 2, \"destination\": \"\u041c\u043e\u0441\u043a\u0432\u0430\" } Add a new transit destination URL : transit/create/ Method : POST Code : 200 OK Content : {[]} { \"destination\": \"\" } Modify (get/update/delete) an existing transit destination URL : transit/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"id\": 1, \"destination\": \"\u041d\u043e\u0432\u043e\u0441\u0438\u0431\u0438\u0440\u0441\u043a\" }","title":"Transit"},{"location":"api/transit/#transit-endpoints","text":"","title":"TRANSIT endpoints"},{"location":"api/transit/#list-of-transit-destinations","text":"URL : transit/ Method : GET Code : 200 OK Content : {[]} { \"id\": 1, \"destination\": \"\u041d\u043e\u0432\u043e\u0441\u0438\u0431\u0438\u0440\u0441\u043a\" }, { \"id\": 2, \"destination\": \"\u041c\u043e\u0441\u043a\u0432\u0430\" }","title":"List of transit destinations"},{"location":"api/transit/#add-a-new-transit-destination","text":"URL : transit/create/ Method : POST Code : 200 OK Content : {[]} { \"destination\": \"\" }","title":"Add a new transit destination"},{"location":"api/transit/#modify-getupdatedelete-an-existing-transit-destination","text":"URL : transit/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"id\": 1, \"destination\": \"\u041d\u043e\u0432\u043e\u0441\u0438\u0431\u0438\u0440\u0441\u043a\" }","title":"Modify (get/update/delete) an existing transit destination"},{"location":"user/employee/","text":"EMPLOYEE endpoints List of employees URL : employees/ Method : GET Code : 200 OK Content : {[]} { \"passport\": \"8042759234\", \"full_name\": \"\u041a\u043e\u043d\u044f\u0435\u0432\u0430 \u041d\u0430\u0434\u0435\u0436\u0434\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u043d\u0430\", \"age\": 46, \"education\": \"\u0412\u041e\", \"experience\": 22, \"in_crew\": 1 }, { \"passport\": \"8085927461\", \"full_name\": \"\u0420\u043e\u0436\u043a\u043e\u0432 \u0412\u0430\u0434\u0438\u043c \u0410\u0440\u0442\u0435\u043c\u043e\u0432\u0438\u0447\", \"age\": 32, \"education\": \"\u0421\u041f\u041e\", \"experience\": 9, \"in_crew\": 2 } Add a new employee URL : employees/create/ Method : POST Code : 200 OK Content : {[]} { \"passport\": \"\", \"full_name\": \"\", \"age\": null, \"education\": null, \"experience\": null, \"in_crew\": null } Modify (get/update/delete) an existing employee URL : employees/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"passport\": \"8042759234\", \"full_name\": \"\u041a\u043e\u043d\u044f\u0435\u0432\u0430 \u041d\u0430\u0434\u0435\u0436\u0434\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u043d\u0430\", \"age\": 46, \"education\": \"\u0412\u041e\", \"experience\": 22, \"in_crew\": 1 }","title":"Employee"},{"location":"user/employee/#employee-endpoints","text":"","title":"EMPLOYEE endpoints"},{"location":"user/employee/#list-of-employees","text":"URL : employees/ Method : GET Code : 200 OK Content : {[]} { \"passport\": \"8042759234\", \"full_name\": \"\u041a\u043e\u043d\u044f\u0435\u0432\u0430 \u041d\u0430\u0434\u0435\u0436\u0434\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u043d\u0430\", \"age\": 46, \"education\": \"\u0412\u041e\", \"experience\": 22, \"in_crew\": 1 }, { \"passport\": \"8085927461\", \"full_name\": \"\u0420\u043e\u0436\u043a\u043e\u0432 \u0412\u0430\u0434\u0438\u043c \u0410\u0440\u0442\u0435\u043c\u043e\u0432\u0438\u0447\", \"age\": 32, \"education\": \"\u0421\u041f\u041e\", \"experience\": 9, \"in_crew\": 2 }","title":"List of employees"},{"location":"user/employee/#add-a-new-employee","text":"URL : employees/create/ Method : POST Code : 200 OK Content : {[]} { \"passport\": \"\", \"full_name\": \"\", \"age\": null, \"education\": null, \"experience\": null, \"in_crew\": null }","title":"Add a new employee"},{"location":"user/employee/#modify-getupdatedelete-an-existing-employee","text":"URL : employees/<int:pk>/ Method : GET , PUT , PATCH , DELETE Code : 200 OK Content : {[]} { \"passport\": \"8042759234\", \"full_name\": \"\u041a\u043e\u043d\u044f\u0435\u0432\u0430 \u041d\u0430\u0434\u0435\u0436\u0434\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u043d\u0430\", \"age\": 46, \"education\": \"\u0412\u041e\", \"experience\": 22, \"in_crew\": 1 }","title":"Modify (get/update/delete) an existing employee"}]}