{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0440\u043e\u0432\u0430\u043d\u0438\u0435 2022 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041a\u043e\u043d\u0434\u0440\u0430\u0442\u044c\u0435\u0432\u0430 \u0410\u043b\u0435\u043a\u0441\u0435\u044f K33412","title":"\u0417\u043d\u0430\u043a\u043e\u043c\u0441\u0442\u0432\u043e"},{"location":"#web-2022","text":"","title":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0440\u043e\u0432\u0430\u043d\u0438\u0435 2022"},{"location":"#k33412","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041a\u043e\u043d\u0434\u0440\u0430\u0442\u044c\u0435\u0432\u0430 \u0410\u043b\u0435\u043a\u0441\u0435\u044f K33412"},{"location":"lr1/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161 \u0417\u0430\u0434\u0430\u0447\u0430 \u21161 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. server.py \u0421\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0436\u0434\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0435\u043c\u0443 \u043f\u0440\u0438\u0432\u0435\u0442 import socket , time sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 9090 )) sock . listen ( 1 ) sock . setblocking ( False ) print ( \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \\n \u0421\u0435\u0440\u0432\u0435\u0440 \u0436\u0434\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\" ) while True : try : clientsocket , address = sock . accept () data = clientsocket . recv ( 16384 ) udata = data . decode ( \"utf-8\" ) print ( udata ) HDRS = 'HTTP/1.1 200 OK \\r\\n Content-Type: text/html; charset=utf-8 \\r\\n\\r\\n ' msg = 'Hello, client' . encode ( 'utf-8' ) clientsocket . send ( HDRS . encode ( 'utf-8' ) + msg ) sock . close () break except socket . error : print ( \"\u0416\u0434\u0443\" ) time . sleep ( 3 ) except KeyboardInterrupt : sock . close () break client.py \u041a\u043b\u0438\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0435\u043c\u0443 \u043f\u0440\u0438\u0432\u0435\u0442 import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 9090 )) sock . send ( b \"Hello, server \\n \" ) data = sock . recv ( 16384 ) res = data . decode ( 'utf-8' ) print ( res ) sock . close () \u0417\u0430\u0434\u0430\u0447\u0430 \u21162 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 server.py \u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043d\u0438\u0445 \u0441\u043e\u0432\u0435\u0440\u0430\u0435\u0448 \u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430\u0437\u0430\u0434 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 import numbers import socket , time sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 9090 )) sock . listen ( 1 ) sock . setblocking ( False ) print ( \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \\n \u0421\u0435\u0440\u0432\u0435\u0440 \u0436\u0434\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\" ) while True : try : clientsocket , address = sock . accept () data = clientsocket . recv ( 16384 ) numbers = data . decode ( \"utf-8\" ) numbers = numbers . split () answer = int ( numbers [ 0 ]) * int ( numbers [ 1 ]) answer = str ( answer ) . encode ( 'utf-8' ) clientsocket . send ( answer ) clientsocket . close () break except socket . error : print ( \"\u0416\u0434\u0443\" ) time . sleep ( 3 ) except KeyboardInterrupt : clientsocket . close () break client.py \u041a\u043b\u0438\u0435\u043d\u0442 \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0430\u043a\u0438\u0445 \u0447\u0438\u0441\u0435\u043b \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043d\u0430\u0448\u0443 \u043f\u043b\u043e\u0449\u0430\u0434\u044c import socket str = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u0438 \u0432\u044b\u0441\u043e\u0442\u0443 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430: \" ) str = str . encode ( 'utf-8' ) sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 9090 )) sock . send ( str ) data = sock . recv ( 16384 ) res = data . decode ( 'utf-8' ) print ( f '\u041f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 { res } ' ) sock . close () \u0417\u0430\u0434\u0430\u0447\u0430 \u21163 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. server.py \u0421\u0435\u0440\u0432\u0435\u0440\u043d\u043e \u0443\u0441\u043b\u043e\u0432\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u043d\u0435\u0433\u043e \u043d\u0430\u0448\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0443 \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043b\u0435\u0436\u0438\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 import socket import time sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) host = '127.0.0.1' port = 9090 sock . bind (( host , port )) sock . setblocking ( False ) print ( \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\" , host , port ) sock . listen ( 3 ) while True : try : clientsocket , ( client_host , client_port ) = sock . accept () print ( 'Got connection from' , client_host , client_port ) data = clientsocket . recv ( 16384 ) HDRS = 'HTTP/1.1 200 OK \\r\\n Content-Type: text/html; charset=utf-8 \\r\\n\\r\\n ' body = \"\"\" <html> <body> <h1>Hello world!</h1> </body> </html> \"\"\" response = HDRS + body clientsocket . send ( response . encode ( 'utf-8' )) clientsocket . close () break except socket . error : print ( \"\u0416\u0434\u0443\" ) time . sleep ( 3 ) except KeyboardInterrupt : clientsocket . close () \u0417\u0430\u0434\u0430\u0447\u0430 \u21164 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. server.py \u0421\u0435\u0440\u0432\u0435\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0433\u0434\u0435 \u043c\u044b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430 \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u043c\u0443 import socket from threading import Thread HOST = \"127.0.0.1\" PORT = 9090 clients = [] sock = socket . socket () sock . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) sock . bind (( HOST , PORT )) sock . listen ( 10 ) print ( f \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d { HOST } : { PORT } \" ) def listen_for_client ( people ): while True : try : message = people . recv ( 1024 ) . decode () except Exception as e : print ( f \"[!] \u041e\u0448\u0438\u0431\u043a\u0430: { e } \" ) clients . pop ( people ) else : message = message . replace ( \" \" , \": \" ) for client in clients : client . send ( message . encode ()) while True : client , ( port , host ) = sock . accept () print ( f \"\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d { port } : { host } .\" ) clients . append ( client ) thread = Thread ( target = listen_for_client , args = ( client ,)) thread . daemon = True thread . start () client.py \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c, \u0433\u0434\u0435 \u043c\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0430 \u043d\u0435\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0443\u0436\u0435 \u0442\u043e\u0442 \u0440\u0430\u0437\u043e\u0441\u043b\u0430\u043b \u0435\u0433\u043e \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c import datetime import socket from threading import Thread HOST = \"127.0.0.1\" PORT = 9090 sock = socket . socket () sock . connect (( HOST , PORT )) print ( f \"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a { HOST } : { PORT } \" ) name = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0451 \u0438\u043c\u044f: \" ) def listen_for_messages (): while True : message = sock . recv ( 1024 ) . decode () print ( \" \\n \" + message ) thread = Thread ( target = listen_for_messages ) thread . daemon = True thread . start () while True : text = input () if text . lower () == 'q' : break date_now = datetime . datetime . now () . strftime ( '%Y-%m- %d %H:%M' ) text = f ' { date_now } { name } { text } ' sock . send ( text . encode ()) sock . close () \u0417\u0430\u0434\u0430\u0447\u0430 \u21165 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. server.py \u0421\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u0443\u044e \"\u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445\", \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u043e\u043a\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0435 \u0435\u0435 \u0432\u044b\u0432\u043e\u0434, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0433 \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u0430\u043a\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0431\u044b\u043b\u0438 \u0443\u0436\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b import socket class MyHTTPServer : def __init__ ( self , host , port ): self . host = host self . port = port def serve_forever ( self ): sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( self . host , self . port )) sock . listen ( 5 ) while True : clientsocket , _ = sock . accept () self . serve_client ( clientsocket ) def serve_client ( self , clientsocket ): data = clientsocket . recv ( 16384 ) data = data . decode ( 'utf-8' ) target , method = self . parse_request ( data ) headers , body = self . parse_headers ( data ) resp = self . handle_request ( target , method , body ) if resp : self . send_response ( clientsocket , resp ) def parse_request ( self , data ): data = data . replace ( ' \\r ' , '' ) lines = data . split ( ' \\n ' ) method , target , protocol = lines [ 0 ] . split () return target , method def parse_headers ( self , data ): data = data . replace ( ' \\r ' , '' ) lines = data . split ( ' \\n ' ) i = lines . index ( '' ) headers = lines [ 1 : i ] body = lines [ - 1 ] return headers , body def handle_request ( self , target , method , body ): if target == \"/\" : if method == \"GET\" : resp = \"HTTP/1.1 200 OK \\n\\n \" with open ( 'index.html' ) as f : resp += f . read () return resp if method == \"POST\" : newbody = body . split ( '&' ) for a in newbody : if a . split ( '=' )[ 0 ] == 'subject' : subjects . append ( a . split ( '=' )[ 1 ]) if a . split ( '=' )[ 0 ] == 'mark' : marks . append ( a . split ( '=' )[ 1 ]) resp = \"HTTP/1.1 200 OK \\n\\n \" resp += \"<html><head><title>Journal</title></head><body>\" for s , m in zip ( subjects , marks ): resp += f \"<p> { s } : { m } </p>\" resp += \"</body></html>\" return resp def send_response ( self , clientsocket , resp ): clientsocket . send ( resp . encode ( 'utf-8' )) if __name__ == '__main__' : host = 'localhost' port = 9090 serv = MyHTTPServer ( host , port ) subjects = [] marks = [] try : serv . serve_forever () except KeyboardInterrupt : pass index.html \u041f\u0440\u043e\u0441\u0442\u043e\u0439 HTML \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u043a\u0430\u043a\u043e\u043c\u0443-\u0442\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0443 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Journal </ title > </ head > < body > < form action = \"/\" method = \"post\" > < div > < label for = \"name\" > Subject: </ label > < input type = \"text\" id = \"name\" name = \"subject\" /> </ div > < div > < label for = \"mail\" > Mark: </ label > < input type = \"number\" id = \"mail\" name = \"mark\" /> </ div > < div > < input type = \"submit\" > </ div > </ body > </ html >","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161"},{"location":"lr1/#no1","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161"},{"location":"lr1/#no1_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. server.py \u0421\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0436\u0434\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0435\u043c\u0443 \u043f\u0440\u0438\u0432\u0435\u0442 import socket , time sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 9090 )) sock . listen ( 1 ) sock . setblocking ( False ) print ( \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \\n \u0421\u0435\u0440\u0432\u0435\u0440 \u0436\u0434\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\" ) while True : try : clientsocket , address = sock . accept () data = clientsocket . recv ( 16384 ) udata = data . decode ( \"utf-8\" ) print ( udata ) HDRS = 'HTTP/1.1 200 OK \\r\\n Content-Type: text/html; charset=utf-8 \\r\\n\\r\\n ' msg = 'Hello, client' . encode ( 'utf-8' ) clientsocket . send ( HDRS . encode ( 'utf-8' ) + msg ) sock . close () break except socket . error : print ( \"\u0416\u0434\u0443\" ) time . sleep ( 3 ) except KeyboardInterrupt : sock . close () break client.py \u041a\u043b\u0438\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0435\u043c\u0443 \u043f\u0440\u0438\u0432\u0435\u0442 import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 9090 )) sock . send ( b \"Hello, server \\n \" ) data = sock . recv ( 16384 ) res = data . decode ( 'utf-8' ) print ( res ) sock . close ()","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21161"},{"location":"lr1/#no2","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 server.py \u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043d\u0438\u0445 \u0441\u043e\u0432\u0435\u0440\u0430\u0435\u0448 \u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430\u0437\u0430\u0434 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 import numbers import socket , time sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 9090 )) sock . listen ( 1 ) sock . setblocking ( False ) print ( \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \\n \u0421\u0435\u0440\u0432\u0435\u0440 \u0436\u0434\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\" ) while True : try : clientsocket , address = sock . accept () data = clientsocket . recv ( 16384 ) numbers = data . decode ( \"utf-8\" ) numbers = numbers . split () answer = int ( numbers [ 0 ]) * int ( numbers [ 1 ]) answer = str ( answer ) . encode ( 'utf-8' ) clientsocket . send ( answer ) clientsocket . close () break except socket . error : print ( \"\u0416\u0434\u0443\" ) time . sleep ( 3 ) except KeyboardInterrupt : clientsocket . close () break client.py \u041a\u043b\u0438\u0435\u043d\u0442 \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0430\u043a\u0438\u0445 \u0447\u0438\u0441\u0435\u043b \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043d\u0430\u0448\u0443 \u043f\u043b\u043e\u0449\u0430\u0434\u044c import socket str = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u0438 \u0432\u044b\u0441\u043e\u0442\u0443 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430: \" ) str = str . encode ( 'utf-8' ) sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 9090 )) sock . send ( str ) data = sock . recv ( 16384 ) res = data . decode ( 'utf-8' ) print ( f '\u041f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 { res } ' ) sock . close ()","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21162"},{"location":"lr1/#no3","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. server.py \u0421\u0435\u0440\u0432\u0435\u0440\u043d\u043e \u0443\u0441\u043b\u043e\u0432\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u043d\u0435\u0433\u043e \u043d\u0430\u0448\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0443 \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043b\u0435\u0436\u0438\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 import socket import time sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) host = '127.0.0.1' port = 9090 sock . bind (( host , port )) sock . setblocking ( False ) print ( \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\" , host , port ) sock . listen ( 3 ) while True : try : clientsocket , ( client_host , client_port ) = sock . accept () print ( 'Got connection from' , client_host , client_port ) data = clientsocket . recv ( 16384 ) HDRS = 'HTTP/1.1 200 OK \\r\\n Content-Type: text/html; charset=utf-8 \\r\\n\\r\\n ' body = \"\"\" <html> <body> <h1>Hello world!</h1> </body> </html> \"\"\" response = HDRS + body clientsocket . send ( response . encode ( 'utf-8' )) clientsocket . close () break except socket . error : print ( \"\u0416\u0434\u0443\" ) time . sleep ( 3 ) except KeyboardInterrupt : clientsocket . close ()","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21163"},{"location":"lr1/#no4","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. server.py \u0421\u0435\u0440\u0432\u0435\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0433\u0434\u0435 \u043c\u044b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430 \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u043c\u0443 import socket from threading import Thread HOST = \"127.0.0.1\" PORT = 9090 clients = [] sock = socket . socket () sock . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) sock . bind (( HOST , PORT )) sock . listen ( 10 ) print ( f \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d { HOST } : { PORT } \" ) def listen_for_client ( people ): while True : try : message = people . recv ( 1024 ) . decode () except Exception as e : print ( f \"[!] \u041e\u0448\u0438\u0431\u043a\u0430: { e } \" ) clients . pop ( people ) else : message = message . replace ( \" \" , \": \" ) for client in clients : client . send ( message . encode ()) while True : client , ( port , host ) = sock . accept () print ( f \"\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d { port } : { host } .\" ) clients . append ( client ) thread = Thread ( target = listen_for_client , args = ( client ,)) thread . daemon = True thread . start () client.py \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c, \u0433\u0434\u0435 \u043c\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0430 \u043d\u0435\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0443\u0436\u0435 \u0442\u043e\u0442 \u0440\u0430\u0437\u043e\u0441\u043b\u0430\u043b \u0435\u0433\u043e \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c import datetime import socket from threading import Thread HOST = \"127.0.0.1\" PORT = 9090 sock = socket . socket () sock . connect (( HOST , PORT )) print ( f \"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a { HOST } : { PORT } \" ) name = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0451 \u0438\u043c\u044f: \" ) def listen_for_messages (): while True : message = sock . recv ( 1024 ) . decode () print ( \" \\n \" + message ) thread = Thread ( target = listen_for_messages ) thread . daemon = True thread . start () while True : text = input () if text . lower () == 'q' : break date_now = datetime . datetime . now () . strftime ( '%Y-%m- %d %H:%M' ) text = f ' { date_now } { name } { text } ' sock . send ( text . encode ()) sock . close ()","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21164"},{"location":"lr1/#no5","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. server.py \u0421\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u0443\u044e \"\u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445\", \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u043e\u043a\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0435 \u0435\u0435 \u0432\u044b\u0432\u043e\u0434, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0433 \u043f\u043e\u043d\u044f\u0442\u044c \u043a\u0430\u043a\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0431\u044b\u043b\u0438 \u0443\u0436\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b import socket class MyHTTPServer : def __init__ ( self , host , port ): self . host = host self . port = port def serve_forever ( self ): sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( self . host , self . port )) sock . listen ( 5 ) while True : clientsocket , _ = sock . accept () self . serve_client ( clientsocket ) def serve_client ( self , clientsocket ): data = clientsocket . recv ( 16384 ) data = data . decode ( 'utf-8' ) target , method = self . parse_request ( data ) headers , body = self . parse_headers ( data ) resp = self . handle_request ( target , method , body ) if resp : self . send_response ( clientsocket , resp ) def parse_request ( self , data ): data = data . replace ( ' \\r ' , '' ) lines = data . split ( ' \\n ' ) method , target , protocol = lines [ 0 ] . split () return target , method def parse_headers ( self , data ): data = data . replace ( ' \\r ' , '' ) lines = data . split ( ' \\n ' ) i = lines . index ( '' ) headers = lines [ 1 : i ] body = lines [ - 1 ] return headers , body def handle_request ( self , target , method , body ): if target == \"/\" : if method == \"GET\" : resp = \"HTTP/1.1 200 OK \\n\\n \" with open ( 'index.html' ) as f : resp += f . read () return resp if method == \"POST\" : newbody = body . split ( '&' ) for a in newbody : if a . split ( '=' )[ 0 ] == 'subject' : subjects . append ( a . split ( '=' )[ 1 ]) if a . split ( '=' )[ 0 ] == 'mark' : marks . append ( a . split ( '=' )[ 1 ]) resp = \"HTTP/1.1 200 OK \\n\\n \" resp += \"<html><head><title>Journal</title></head><body>\" for s , m in zip ( subjects , marks ): resp += f \"<p> { s } : { m } </p>\" resp += \"</body></html>\" return resp def send_response ( self , clientsocket , resp ): clientsocket . send ( resp . encode ( 'utf-8' )) if __name__ == '__main__' : host = 'localhost' port = 9090 serv = MyHTTPServer ( host , port ) subjects = [] marks = [] try : serv . serve_forever () except KeyboardInterrupt : pass index.html \u041f\u0440\u043e\u0441\u0442\u043e\u0439 HTML \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u043a\u0430\u043a\u043e\u043c\u0443-\u0442\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0443 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Journal </ title > </ head > < body > < form action = \"/\" method = \"post\" > < div > < label for = \"name\" > Subject: </ label > < input type = \"text\" id = \"name\" name = \"subject\" /> </ div > < div > < label for = \"mail\" > Mark: </ label > < input type = \"number\" id = \"mail\" name = \"mark\" /> </ div > < div > < input type = \"submit\" > </ div > </ body > </ html >","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21165"},{"location":"lr2/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162 \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0431 \u0441\u0435\u0440\u0432\u0438\u0441, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f account_created.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Notification </ title > < style > body { padding : 20 px ; padding-left : 50 px ; } </ style > </ head > < body > < p > The account created successfully! </ p > < p > Please enter your personal information to start working. </ p > < nav > < a href = {{edit_link}} >< strong > Go! </ strong ></ a > | < a href = \"/profile/\" > Later </ a > </ nav > </ body > </ html > all_tasks.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Tasks </ title > < style > body { padding-left : 50 px ; } ul { list-style-type : none ; margin : 0 ; padding : 0 ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = \"/accounts/{{user.id}}/update/\" > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < div class = \"main\" > < br > < ul > {% for task in task_list %} < li > Deadline: {{task.deadline}} </ li > < li > Subject: {{task.subject}} </ li > < li > Task: {{task.task_text}} </ li > {% if task.id in hw_ids %} {% for answer in answers %} {% if answer.homework_id == task.id %} < p > Mark: {{ answer.mark }} </ p > {% endif %} {% endfor %} {% else %} < p >< a href = \"/profile/all_tasks/answer?task_id={{task.id}}\" > Solve the task </ a >< br ></ p > {% endif %} < hr /> {% empty %} < p > No tasks yet. </ p > {% endfor %} </ ul > </ div > </ body > </ html > class_marks.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Class marks </ title > < style > body { padding-left : 50 px ; } table { border-top : 4 px solid #000 ; border-collapse : collapse ; text-align : center ; } caption { text-align : left ; padding : 10 px ; } thead { border-bottom : 4 px solid #000 ; } tbody td { text-align : left ; padding-left : 5 ; } tbody td : last-child { text-align : center ; } td , th { border : 1 px solid #000 ; padding : 10 px ; vertical-align : middle ; line-height : 1.2 ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = \"/accounts/{{user.id}}/update/\" > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < table > < caption > Class: {{ user.group }} < br > Subject: {{ subject }} </ caption > < thead > < tr > < th > Student </ th > < th > Marks </ th > < th > Average </ th > </ tr > </ thead > < tbody > {% for student in class_students %} < tr > < td > {{student.surname}} {{student.name}} {{student.patronymic}} </ td > {% for mark in marks %} {% if forloop.counter == forloop.parentloop.counter %} < td > {{ mark }} </ td > {% endif %} {% endfor %} {% for grade in average %} {% if forloop.counter == forloop.parentloop.counter %} < td > {{ grade }} </ td > {% endif %} {% endfor %} </ tr > {% endfor %} </ tbody > </ table > < br > < a href = \"/profile/class_marks/subject_select\" > Select another subject </ a > </ body > </ html > profile_page.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Home </ title > < style > body { padding-left : 50 px ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = {{edit_link}} > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > {% if user.name == '' %} < p > Hello, {{ user.username }}! </ p > {% else %} < p > Hello, {{ user.name }}! </ p > {% endif %} </ body > </ html > solution.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Answer </ title > < style > body { padding-left : 50 px ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = \"/accounts/{{user.id}}/update/\" > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < p > Task: {{ task.task_text }} </ p > < form method = \"POST\" enctype = \"multipart/form-data\" > {% csrf_token %} {{ form.as_p }} < input type = \"submit\" value = \"Send solution\" > </ form > </ body > </ html > start_page.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Start page </ title > < style > body { padding : 20 px ; padding-left : 50 px ; } </ style > </ head > < body > < p > Welcome to the Homework Board! </ p > < p > Please login or sign up to get started. </ p > < nav > < a href = \"/accounts/login/\" > Log in </ a > | < a href = \"/admin/login/\" > Log in as a teacher </ a > | < a href = \"/accounts/signup/\" > Sign up </ a > </ nav > </ body > </ html > subject_select.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Subject select </ title > < style > body { padding-left : 50 px ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = \"/accounts/{{user.id}}/update/\" > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < p > Click on the subject below to view class marks for it: </ p > {% for subject in subjects %} < a href = \"/profile/class_marks?subject={{subject}}\" > {{ subject }} </ a >< br > < br > {% endfor %} </ body > </ html > user_update.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > User update </ title > < style > body { padding-left : 50 px ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = {{edit_link}} > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < p > Enter your personal information. </ p > < p > User: {{object.username}} </ p > < form method = \"POST\" > {% csrf_token %} {{ form.as_p }} < input type = \"submit\" value = \"Save\" > </ form > </ body > </ html > settings.py \"\"\" Django settings for homework_board project. Generated by 'django-admin startproject' using Django 4.1.2. For more information on this file, see https://docs.djangoproject.com/en/4.1/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/4.1/ref/settings/ \"\"\" from pathlib import Path # Build paths inside the project like this: BASE_DIR / 'subdir'. BASE_DIR = Path ( __file__ ) . resolve () . parent . parent # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = 'django-insecure-7 %i i_szc&3vfg5($#nij*29(p#%!h!e0stc*7clee%!ja)(1)c' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = [] # Application definition INSTALLED_APPS = [ 'django.contrib.admin' , 'django.contrib.auth' , 'django.contrib.sites' , 'django.contrib.contenttypes' , 'django.contrib.sessions' , 'django.contrib.messages' , 'django.contrib.staticfiles' , 'allauth' , 'allauth.account' , 'allauth.socialaccount' , 'board_app' , ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware' , 'django.contrib.sessions.middleware.SessionMiddleware' , 'django.middleware.common.CommonMiddleware' , 'django.middleware.csrf.CsrfViewMiddleware' , 'django.contrib.auth.middleware.AuthenticationMiddleware' , 'django.contrib.messages.middleware.MessageMiddleware' , 'django.middleware.clickjacking.XFrameOptionsMiddleware' , ] ROOT_URLCONF = 'homework_board.urls' TEMPLATES = [ { 'BACKEND' : 'django.template.backends.django.DjangoTemplates' , 'DIRS' : [ BASE_DIR / 'templates' ], 'APP_DIRS' : True , 'OPTIONS' : { 'context_processors' : [ 'django.template.context_processors.debug' , 'django.template.context_processors.request' , 'django.contrib.auth.context_processors.auth' , 'django.contrib.messages.context_processors.messages' , ], }, }, ] WSGI_APPLICATION = 'homework_board.wsgi.application' # Database # https://docs.djangoproject.com/en/4.1/ref/settings/#databases DATABASES = { 'default' : { 'ENGINE' : 'django.db.backends.sqlite3' , 'NAME' : BASE_DIR / 'db.sqlite3' , } } # Password validation # https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators AUTH_PASSWORD_VALIDATORS = [ { 'NAME' : 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator' , }, { 'NAME' : 'django.contrib.auth.password_validation.MinimumLengthValidator' , }, { 'NAME' : 'django.contrib.auth.password_validation.CommonPasswordValidator' , }, { 'NAME' : 'django.contrib.auth.password_validation.NumericPasswordValidator' , }, ] # Internationalization # https://docs.djangoproject.com/en/4.1/topics/i18n/ LANGUAGE_CODE = 'en-us' TIME_ZONE = 'UTC' USE_I18N = True USE_TZ = True SITE_ID = 1 # Static files (CSS, JavaScript, Images) # https://docs.djangoproject.com/en/4.1/howto/static-files/ STATIC_URL = 'static/' # Default primary key field typex # https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' AUTH_USER_MODEL = 'board_app.User' AUTHENTICATION_BACKENDS = [ # Needed to login by username in Django admin, regardless of `allauth` 'django.contrib.auth.backends.ModelBackend' , # `allauth` specific authentication methods, such as login by e-mail 'allauth.account.auth_backends.AuthenticationBackend' , ] LOGIN_REDIRECT_URL = '/profile/' LOGIN_URL = '/accounts/login/' ACCOUNT_EMAIL_VERIFICATION = 'none' ACCOUNT_SIGNUP_REDIRECT_URL = '/accounts/created/' urls.py \"\"\"homework_board URL Configuration The `urlpatterns` list routes URLs to views. For more information please see: https://docs.djangoproject.com/en/4.1/topics/http/urls/ Examples: Function views 1. Add an import: from my_app import views 2. Add a URL to urlpatterns: path('', views.home, name='home') Class-based views 1. Add an import: from other_app.views import Home 2. Add a URL to urlpatterns: path('', Home.as_view(), name='home') Including another URLconf 1. Import the include() function: from django.urls import include, path 2. Add a URL to urlpatterns: path('blog/', include('blog.urls')) \"\"\" from django.contrib import admin from django.urls import path , include urlpatterns = [ path ( 'admin/' , admin . site . urls ), path ( 'accounts/' , include ( 'allauth.urls' )), path ( '' , include ( 'board_app.urls' )), ] admin.py from django.contrib import admin from .models import Homework , TaskCompletion , User admin . site . register ( Homework ) admin . site . register ( TaskCompletion ) admin . site . register ( User ) apps.py from django.apps import AppConfig class BoardAppConfig ( AppConfig ): default_auto_field = 'django.db.models.BigAutoField' name = 'board_app' forms.py from django import forms from .models import TaskCompletion class SolutionForm ( forms . ModelForm ): class Meta : model = TaskCompletion fields = [ 'answer' ] widgets = { 'answer' : forms . Textarea ( attrs = { 'maxlength' : 500 , 'cols' : 44 , 'required' : 'true' }), } def __init__ ( self , task , user , subject , task_text , * args , ** kwargs ): super ( SolutionForm , self ) . __init__ ( * args , ** kwargs ) self . homework = task self . student = user self . subject = subject self . task_text = task_text def save ( self , commit = True ): instance = super ( SolutionForm , self ) . save ( commit = False ) if not instance . homework_id : instance . homework = self . homework instance . student = self . student instance . subject = self . subject instance . task_text = self . task_text if commit : instance . save () return instance models.py from django.db import models from django.contrib.auth.models import AbstractUser from django.conf import settings CLASSES_LIST = ( ( '1-A' , '1-A' ), ( '1-B' , '1-B' ), ( '2-A' , '2-A' ), ( '2-B' , '2-B' ), ( '3-A' , '3-A' ), ( '3-B' , '3-B' ), ) class User ( AbstractUser ): surname = models . CharField ( max_length = 30 ) name = models . CharField ( max_length = 30 ) patronymic = models . CharField ( max_length = 30 , blank = True ) birthday = models . DateField ( blank = True , null = True ) group = models . CharField ( max_length = 4 , choices = CLASSES_LIST ) class Homework ( models . Model ): subject = models . CharField ( max_length = 20 ) group = models . CharField ( max_length = 4 , choices = CLASSES_LIST , blank = True ) teacher = models . CharField ( max_length = 50 ) start_date = models . DateField () deadline = models . DateField () task_text = models . CharField ( max_length = 100 ) penalty_info = models . CharField ( max_length = 100 ) student = models . ManyToManyField ( settings . AUTH_USER_MODEL , through = 'TaskCompletion' ) class TaskCompletion ( models . Model ): MARKS_LIST = ( ( '-' , '-' ), ( '2' , '2' ), ( '3' , '3' ), ( '4' , '4' ), ( '5' , '5' ), ) student = models . ForeignKey ( settings . AUTH_USER_MODEL , on_delete = models . CASCADE ) homework = models . ForeignKey ( Homework , on_delete = models . CASCADE ) subject = models . CharField ( max_length = 20 , blank = True ) task_text = models . CharField ( max_length = 100 , blank = True ) answer = models . CharField ( max_length = 100 ) mark = models . CharField ( max_length = 1 , choices = MARKS_LIST , blank = False , default = '-' ) urls.py from django.urls import path from . import views urlpatterns = [ path ( '' , views . StartPageView . as_view ()), path ( 'accounts/created/' , views . NotificationView . as_view ()), path ( 'accounts/<int:pk>/update/' , views . StudentUpdate . as_view ()), path ( 'profile/' , views . ProfilePageView . as_view ()), path ( 'profile/all_tasks/' , views . AllTasks . as_view ()), path ( 'profile/all_tasks/answer' , views . solution_create ), path ( 'profile/class_marks/subject_select' , views . subject_select ), path ( 'profile/class_marks' , views . class_marks ), ] views.py from django.shortcuts import render from .models import User , Homework , TaskCompletion , CLASSES_LIST from django.views.generic import TemplateView , ListView , UpdateView from django.contrib.auth.mixins import LoginRequiredMixin from .forms import SolutionForm from django.shortcuts import redirect from django.contrib.auth.decorators import login_required class StartPageView ( TemplateView ): def get ( self , request ): return render ( request , 'board_app/start_page.html' ) class NotificationView ( LoginRequiredMixin , TemplateView ): login_url = '/accounts/login/' def get ( self , request ): context = {} context [ \"edit_link\" ] = f \"/accounts/ { self . request . user . id } /update/\" return render ( request , 'board_app/account_created.html' , context ) class StudentUpdate ( LoginRequiredMixin , UpdateView ): login_url = '/accounts/login/' model = User template_name = 'board_app/user_update.html' fields = [ \"surname\" , \"name\" , \"patronymic\" , \"birthday\" , \"group\" ] success_url = '/profile/' class ProfilePageView ( LoginRequiredMixin , TemplateView ): login_url = '/accounts/login/' def get ( self , request ): context = {} context [ \"edit_link\" ] = f \"/accounts/ { self . request . user . id } /update/\" context [ \"user\" ] = self . request . user return render ( request , 'board_app/profile_page.html' , context ) class AllTasks ( LoginRequiredMixin , ListView ): login_url = '/accounts/login/' def get ( self , request ): user = self . request . user if ( user . group , user . group ) not in CLASSES_LIST : return redirect ( f \"/accounts/ { request . user . id } /update/\" ) context = {} context [ 'user' ] = user context [ 'task_list' ] = Homework . objects . filter ( group = user . group ) answers = TaskCompletion . objects . filter ( student_id = user . id ) context [ 'answers' ] = answers context [ 'hw_ids' ] = [] for answer in answers : context [ 'hw_ids' ] . append ( answer . homework_id ) return render ( request , 'board_app/all_tasks.html' , context ) @login_required def solution_create ( request ): task_id = request . GET . get ( 'task_id' ) task = Homework . objects . get ( pk = task_id ) context = {} context [ \"user\" ] = request . user if request . method == 'POST' : form = SolutionForm ( task , request . user , task . subject , task . task_text , request . POST ) if form . is_valid (): form . save () return redirect ( '/profile/all_tasks/' ) else : form = SolutionForm ( task , request . user , task . subject , task . task_text ) context [ \"form\" ] = form context [ \"task\" ] = Homework . objects . get ( pk = task_id ) return render ( request , 'board_app/solution.html' , context ) @login_required def subject_select ( request ): user = request . user if ( user . group , user . group ) not in CLASSES_LIST : return redirect ( f \"/accounts/ { request . user . id } /update/\" ) context = {} context [ 'user' ] = user hw_list = Homework . objects . filter ( group = user . group ) context [ 'subjects' ] = [] for hw in hw_list : if hw . subject not in context [ 'subjects' ]: context [ 'subjects' ] . append ( hw . subject ) return render ( request , 'board_app/subject_select.html' , context ) @login_required def class_marks ( request ): context = {} user = request . user context [ 'user' ] = user class_students = User . objects . filter ( group = user . group ) class_students = class_students . order_by ( 'surname' , 'name' , 'patronymic' ) context [ 'class_students' ] = class_students subject = request . GET . get ( 'subject' ) context [ 'subject' ] = subject context [ 'marks' ] = [] context [ 'average' ] = [] for student in class_students : tasks_done = TaskCompletion . objects . filter ( student_id = student . id , subject = subject ) marks = '' marks_sum = 0 n = 0 for index , task in enumerate ( tasks_done ): marks += task . mark if index != len ( tasks_done ) - 1 : marks += ', ' if task . mark in '2345' : marks_sum += int ( task . mark ) n += 1 context [ 'marks' ] . append ( marks ) if n != 0 : context [ 'average' ] . append ( round (( marks_sum / n ), 2 )) else : context [ 'average' ] . append ( '' ) return render ( request , 'board_app/class_marks.html' , context )","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162"},{"location":"lr2/#no2-django","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0431 \u0441\u0435\u0440\u0432\u0438\u0441, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f account_created.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Notification </ title > < style > body { padding : 20 px ; padding-left : 50 px ; } </ style > </ head > < body > < p > The account created successfully! </ p > < p > Please enter your personal information to start working. </ p > < nav > < a href = {{edit_link}} >< strong > Go! </ strong ></ a > | < a href = \"/profile/\" > Later </ a > </ nav > </ body > </ html > all_tasks.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Tasks </ title > < style > body { padding-left : 50 px ; } ul { list-style-type : none ; margin : 0 ; padding : 0 ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = \"/accounts/{{user.id}}/update/\" > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < div class = \"main\" > < br > < ul > {% for task in task_list %} < li > Deadline: {{task.deadline}} </ li > < li > Subject: {{task.subject}} </ li > < li > Task: {{task.task_text}} </ li > {% if task.id in hw_ids %} {% for answer in answers %} {% if answer.homework_id == task.id %} < p > Mark: {{ answer.mark }} </ p > {% endif %} {% endfor %} {% else %} < p >< a href = \"/profile/all_tasks/answer?task_id={{task.id}}\" > Solve the task </ a >< br ></ p > {% endif %} < hr /> {% empty %} < p > No tasks yet. </ p > {% endfor %} </ ul > </ div > </ body > </ html > class_marks.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Class marks </ title > < style > body { padding-left : 50 px ; } table { border-top : 4 px solid #000 ; border-collapse : collapse ; text-align : center ; } caption { text-align : left ; padding : 10 px ; } thead { border-bottom : 4 px solid #000 ; } tbody td { text-align : left ; padding-left : 5 ; } tbody td : last-child { text-align : center ; } td , th { border : 1 px solid #000 ; padding : 10 px ; vertical-align : middle ; line-height : 1.2 ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = \"/accounts/{{user.id}}/update/\" > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < table > < caption > Class: {{ user.group }} < br > Subject: {{ subject }} </ caption > < thead > < tr > < th > Student </ th > < th > Marks </ th > < th > Average </ th > </ tr > </ thead > < tbody > {% for student in class_students %} < tr > < td > {{student.surname}} {{student.name}} {{student.patronymic}} </ td > {% for mark in marks %} {% if forloop.counter == forloop.parentloop.counter %} < td > {{ mark }} </ td > {% endif %} {% endfor %} {% for grade in average %} {% if forloop.counter == forloop.parentloop.counter %} < td > {{ grade }} </ td > {% endif %} {% endfor %} </ tr > {% endfor %} </ tbody > </ table > < br > < a href = \"/profile/class_marks/subject_select\" > Select another subject </ a > </ body > </ html > profile_page.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Home </ title > < style > body { padding-left : 50 px ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = {{edit_link}} > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > {% if user.name == '' %} < p > Hello, {{ user.username }}! </ p > {% else %} < p > Hello, {{ user.name }}! </ p > {% endif %} </ body > </ html > solution.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Answer </ title > < style > body { padding-left : 50 px ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = \"/accounts/{{user.id}}/update/\" > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < p > Task: {{ task.task_text }} </ p > < form method = \"POST\" enctype = \"multipart/form-data\" > {% csrf_token %} {{ form.as_p }} < input type = \"submit\" value = \"Send solution\" > </ form > </ body > </ html > start_page.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Start page </ title > < style > body { padding : 20 px ; padding-left : 50 px ; } </ style > </ head > < body > < p > Welcome to the Homework Board! </ p > < p > Please login or sign up to get started. </ p > < nav > < a href = \"/accounts/login/\" > Log in </ a > | < a href = \"/admin/login/\" > Log in as a teacher </ a > | < a href = \"/accounts/signup/\" > Sign up </ a > </ nav > </ body > </ html > subject_select.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Subject select </ title > < style > body { padding-left : 50 px ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = \"/accounts/{{user.id}}/update/\" > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < p > Click on the subject below to view class marks for it: </ p > {% for subject in subjects %} < a href = \"/profile/class_marks?subject={{subject}}\" > {{ subject }} </ a >< br > < br > {% endfor %} </ body > </ html > user_update.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > User update </ title > < style > body { padding-left : 50 px ; } </ style > </ head > < header > < nav class = \"menu\" > < br > < a href = \"/profile/\" > Home </ a > | < a href = \"/profile/all_tasks/\" > Tasks </ a > | < a href = \"/profile/class_marks/subject_select\" > Class marks </ a > | < a href = {{edit_link}} > Edit profile </ a > | < a href = \"/accounts/logout/\" > Log out </ a >< br > < br > </ nav > </ header > < body > < p > Enter your personal information. </ p > < p > User: {{object.username}} </ p > < form method = \"POST\" > {% csrf_token %} {{ form.as_p }} < input type = \"submit\" value = \"Save\" > </ form > </ body > </ html > settings.py \"\"\" Django settings for homework_board project. Generated by 'django-admin startproject' using Django 4.1.2. For more information on this file, see https://docs.djangoproject.com/en/4.1/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/4.1/ref/settings/ \"\"\" from pathlib import Path # Build paths inside the project like this: BASE_DIR / 'subdir'. BASE_DIR = Path ( __file__ ) . resolve () . parent . parent # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = 'django-insecure-7 %i i_szc&3vfg5($#nij*29(p#%!h!e0stc*7clee%!ja)(1)c' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = [] # Application definition INSTALLED_APPS = [ 'django.contrib.admin' , 'django.contrib.auth' , 'django.contrib.sites' , 'django.contrib.contenttypes' , 'django.contrib.sessions' , 'django.contrib.messages' , 'django.contrib.staticfiles' , 'allauth' , 'allauth.account' , 'allauth.socialaccount' , 'board_app' , ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware' , 'django.contrib.sessions.middleware.SessionMiddleware' , 'django.middleware.common.CommonMiddleware' , 'django.middleware.csrf.CsrfViewMiddleware' , 'django.contrib.auth.middleware.AuthenticationMiddleware' , 'django.contrib.messages.middleware.MessageMiddleware' , 'django.middleware.clickjacking.XFrameOptionsMiddleware' , ] ROOT_URLCONF = 'homework_board.urls' TEMPLATES = [ { 'BACKEND' : 'django.template.backends.django.DjangoTemplates' , 'DIRS' : [ BASE_DIR / 'templates' ], 'APP_DIRS' : True , 'OPTIONS' : { 'context_processors' : [ 'django.template.context_processors.debug' , 'django.template.context_processors.request' , 'django.contrib.auth.context_processors.auth' , 'django.contrib.messages.context_processors.messages' , ], }, }, ] WSGI_APPLICATION = 'homework_board.wsgi.application' # Database # https://docs.djangoproject.com/en/4.1/ref/settings/#databases DATABASES = { 'default' : { 'ENGINE' : 'django.db.backends.sqlite3' , 'NAME' : BASE_DIR / 'db.sqlite3' , } } # Password validation # https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators AUTH_PASSWORD_VALIDATORS = [ { 'NAME' : 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator' , }, { 'NAME' : 'django.contrib.auth.password_validation.MinimumLengthValidator' , }, { 'NAME' : 'django.contrib.auth.password_validation.CommonPasswordValidator' , }, { 'NAME' : 'django.contrib.auth.password_validation.NumericPasswordValidator' , }, ] # Internationalization # https://docs.djangoproject.com/en/4.1/topics/i18n/ LANGUAGE_CODE = 'en-us' TIME_ZONE = 'UTC' USE_I18N = True USE_TZ = True SITE_ID = 1 # Static files (CSS, JavaScript, Images) # https://docs.djangoproject.com/en/4.1/howto/static-files/ STATIC_URL = 'static/' # Default primary key field typex # https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' AUTH_USER_MODEL = 'board_app.User' AUTHENTICATION_BACKENDS = [ # Needed to login by username in Django admin, regardless of `allauth` 'django.contrib.auth.backends.ModelBackend' , # `allauth` specific authentication methods, such as login by e-mail 'allauth.account.auth_backends.AuthenticationBackend' , ] LOGIN_REDIRECT_URL = '/profile/' LOGIN_URL = '/accounts/login/' ACCOUNT_EMAIL_VERIFICATION = 'none' ACCOUNT_SIGNUP_REDIRECT_URL = '/accounts/created/' urls.py \"\"\"homework_board URL Configuration The `urlpatterns` list routes URLs to views. For more information please see: https://docs.djangoproject.com/en/4.1/topics/http/urls/ Examples: Function views 1. Add an import: from my_app import views 2. Add a URL to urlpatterns: path('', views.home, name='home') Class-based views 1. Add an import: from other_app.views import Home 2. Add a URL to urlpatterns: path('', Home.as_view(), name='home') Including another URLconf 1. Import the include() function: from django.urls import include, path 2. Add a URL to urlpatterns: path('blog/', include('blog.urls')) \"\"\" from django.contrib import admin from django.urls import path , include urlpatterns = [ path ( 'admin/' , admin . site . urls ), path ( 'accounts/' , include ( 'allauth.urls' )), path ( '' , include ( 'board_app.urls' )), ] admin.py from django.contrib import admin from .models import Homework , TaskCompletion , User admin . site . register ( Homework ) admin . site . register ( TaskCompletion ) admin . site . register ( User ) apps.py from django.apps import AppConfig class BoardAppConfig ( AppConfig ): default_auto_field = 'django.db.models.BigAutoField' name = 'board_app' forms.py from django import forms from .models import TaskCompletion class SolutionForm ( forms . ModelForm ): class Meta : model = TaskCompletion fields = [ 'answer' ] widgets = { 'answer' : forms . Textarea ( attrs = { 'maxlength' : 500 , 'cols' : 44 , 'required' : 'true' }), } def __init__ ( self , task , user , subject , task_text , * args , ** kwargs ): super ( SolutionForm , self ) . __init__ ( * args , ** kwargs ) self . homework = task self . student = user self . subject = subject self . task_text = task_text def save ( self , commit = True ): instance = super ( SolutionForm , self ) . save ( commit = False ) if not instance . homework_id : instance . homework = self . homework instance . student = self . student instance . subject = self . subject instance . task_text = self . task_text if commit : instance . save () return instance models.py from django.db import models from django.contrib.auth.models import AbstractUser from django.conf import settings CLASSES_LIST = ( ( '1-A' , '1-A' ), ( '1-B' , '1-B' ), ( '2-A' , '2-A' ), ( '2-B' , '2-B' ), ( '3-A' , '3-A' ), ( '3-B' , '3-B' ), ) class User ( AbstractUser ): surname = models . CharField ( max_length = 30 ) name = models . CharField ( max_length = 30 ) patronymic = models . CharField ( max_length = 30 , blank = True ) birthday = models . DateField ( blank = True , null = True ) group = models . CharField ( max_length = 4 , choices = CLASSES_LIST ) class Homework ( models . Model ): subject = models . CharField ( max_length = 20 ) group = models . CharField ( max_length = 4 , choices = CLASSES_LIST , blank = True ) teacher = models . CharField ( max_length = 50 ) start_date = models . DateField () deadline = models . DateField () task_text = models . CharField ( max_length = 100 ) penalty_info = models . CharField ( max_length = 100 ) student = models . ManyToManyField ( settings . AUTH_USER_MODEL , through = 'TaskCompletion' ) class TaskCompletion ( models . Model ): MARKS_LIST = ( ( '-' , '-' ), ( '2' , '2' ), ( '3' , '3' ), ( '4' , '4' ), ( '5' , '5' ), ) student = models . ForeignKey ( settings . AUTH_USER_MODEL , on_delete = models . CASCADE ) homework = models . ForeignKey ( Homework , on_delete = models . CASCADE ) subject = models . CharField ( max_length = 20 , blank = True ) task_text = models . CharField ( max_length = 100 , blank = True ) answer = models . CharField ( max_length = 100 ) mark = models . CharField ( max_length = 1 , choices = MARKS_LIST , blank = False , default = '-' ) urls.py from django.urls import path from . import views urlpatterns = [ path ( '' , views . StartPageView . as_view ()), path ( 'accounts/created/' , views . NotificationView . as_view ()), path ( 'accounts/<int:pk>/update/' , views . StudentUpdate . as_view ()), path ( 'profile/' , views . ProfilePageView . as_view ()), path ( 'profile/all_tasks/' , views . AllTasks . as_view ()), path ( 'profile/all_tasks/answer' , views . solution_create ), path ( 'profile/class_marks/subject_select' , views . subject_select ), path ( 'profile/class_marks' , views . class_marks ), ] views.py from django.shortcuts import render from .models import User , Homework , TaskCompletion , CLASSES_LIST from django.views.generic import TemplateView , ListView , UpdateView from django.contrib.auth.mixins import LoginRequiredMixin from .forms import SolutionForm from django.shortcuts import redirect from django.contrib.auth.decorators import login_required class StartPageView ( TemplateView ): def get ( self , request ): return render ( request , 'board_app/start_page.html' ) class NotificationView ( LoginRequiredMixin , TemplateView ): login_url = '/accounts/login/' def get ( self , request ): context = {} context [ \"edit_link\" ] = f \"/accounts/ { self . request . user . id } /update/\" return render ( request , 'board_app/account_created.html' , context ) class StudentUpdate ( LoginRequiredMixin , UpdateView ): login_url = '/accounts/login/' model = User template_name = 'board_app/user_update.html' fields = [ \"surname\" , \"name\" , \"patronymic\" , \"birthday\" , \"group\" ] success_url = '/profile/' class ProfilePageView ( LoginRequiredMixin , TemplateView ): login_url = '/accounts/login/' def get ( self , request ): context = {} context [ \"edit_link\" ] = f \"/accounts/ { self . request . user . id } /update/\" context [ \"user\" ] = self . request . user return render ( request , 'board_app/profile_page.html' , context ) class AllTasks ( LoginRequiredMixin , ListView ): login_url = '/accounts/login/' def get ( self , request ): user = self . request . user if ( user . group , user . group ) not in CLASSES_LIST : return redirect ( f \"/accounts/ { request . user . id } /update/\" ) context = {} context [ 'user' ] = user context [ 'task_list' ] = Homework . objects . filter ( group = user . group ) answers = TaskCompletion . objects . filter ( student_id = user . id ) context [ 'answers' ] = answers context [ 'hw_ids' ] = [] for answer in answers : context [ 'hw_ids' ] . append ( answer . homework_id ) return render ( request , 'board_app/all_tasks.html' , context ) @login_required def solution_create ( request ): task_id = request . GET . get ( 'task_id' ) task = Homework . objects . get ( pk = task_id ) context = {} context [ \"user\" ] = request . user if request . method == 'POST' : form = SolutionForm ( task , request . user , task . subject , task . task_text , request . POST ) if form . is_valid (): form . save () return redirect ( '/profile/all_tasks/' ) else : form = SolutionForm ( task , request . user , task . subject , task . task_text ) context [ \"form\" ] = form context [ \"task\" ] = Homework . objects . get ( pk = task_id ) return render ( request , 'board_app/solution.html' , context ) @login_required def subject_select ( request ): user = request . user if ( user . group , user . group ) not in CLASSES_LIST : return redirect ( f \"/accounts/ { request . user . id } /update/\" ) context = {} context [ 'user' ] = user hw_list = Homework . objects . filter ( group = user . group ) context [ 'subjects' ] = [] for hw in hw_list : if hw . subject not in context [ 'subjects' ]: context [ 'subjects' ] . append ( hw . subject ) return render ( request , 'board_app/subject_select.html' , context ) @login_required def class_marks ( request ): context = {} user = request . user context [ 'user' ] = user class_students = User . objects . filter ( group = user . group ) class_students = class_students . order_by ( 'surname' , 'name' , 'patronymic' ) context [ 'class_students' ] = class_students subject = request . GET . get ( 'subject' ) context [ 'subject' ] = subject context [ 'marks' ] = [] context [ 'average' ] = [] for student in class_students : tasks_done = TaskCompletion . objects . filter ( student_id = student . id , subject = subject ) marks = '' marks_sum = 0 n = 0 for index , task in enumerate ( tasks_done ): marks += task . mark if index != len ( tasks_done ) - 1 : marks += ', ' if task . mark in '2345' : marks_sum += int ( task . mark ) n += 1 context [ 'marks' ] . append ( marks ) if n != 0 : context [ 'average' ] . append ( round (( marks_sum / n ), 2 )) else : context [ 'average' ] . append ( '' ) return render ( request , 'board_app/class_marks.html' , context )","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162 \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django."},{"location":"lr3/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0417\u0430\u0434\u0430\u043d\u0438\u0435 2. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438. \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u043a\u043d\u0438\u0433\u0430\u0445, \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0438 \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043b\u0430\u0445. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u0432 \u0411\u0414 \u0434\u043e\u043b\u0436\u043d\u044b \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438, \u0430\u0432\u0442\u043e\u0440 (\u044b), \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e, \u0433\u043e\u0434 \u0438\u0437\u0434\u0430\u043d\u0438\u044f, \u0440\u0430\u0437\u0434\u0435\u043b, \u0447\u0438\u0441\u043b\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u044d\u0442\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0437\u0430\u043b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0448\u0438\u0444\u0440 \u043a\u043d\u0438\u0433\u0438 \u0438 \u0434\u0430\u0442\u0430 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c. \u041a\u043d\u0438\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u0437\u0430\u043b\u0435. \u0421\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430, \u0424\u0418\u041e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f, \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0434\u0430\u0442\u0443 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u0430\u0434\u0440\u0435\u0441, \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u0447\u0435\u043d\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438. \u0427\u0438\u0442\u0430\u0442\u0435\u043b\u0438 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0437\u0430\u043b\u043e\u043c, \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0430\u043b \u0438 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0432\u044b\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u044e\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u043e\u043c, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c\u044e, \u0442\u043e \u0435\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432 \u0437\u0430\u043b\u0435. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043a\u043d\u0438\u0433\u0438 \u0438 \u0441\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u044b\u0435. \u0428\u0438\u0444\u0440 \u043a\u043d\u0438\u0433\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c\u0441\u044f \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0430 \u043d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0435\u0440\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c models.py - \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0431\u0430\u0437\u044b from django.db import models from django.contrib.auth.models import AbstractUser from django.db.models.deletion import CASCADE class User ( AbstractUser ): tel = models . CharField ( verbose_name = '\u0422\u0435\u043b\u0435\u0444\u043e\u043d' , max_length = 15 , null = True , blank = True ) REQUIRED_FIELDS = [ 'first_name' , 'last_name' , 'tel' ] def __str__ ( self ): return self . username class Instance ( models . Model ): id_instance = models . AutoField ( \"ID_\u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430\" , primary_key = True ) section = models . CharField ( max_length = 20 , verbose_name = '\u0420\u0430\u0437\u0434\u0435\u043b' ) code = models . CharField ( max_length = 20 , verbose_name = '\u0410\u0440\u0442\u0438\u043a\u0443\u043b' ) year = models . IntegerField ( verbose_name = '\u0413\u043e\u0434 \u0438\u0437\u0434\u0430\u043d\u0438\u044f' ) conditions = ( ( '\u0445' , '\u0445\u043e\u0440\u043e\u0448\u0435\u0435' ), ( '\u0443' , '\u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435' ), ( '\u0441' , '\u0441\u0442\u0430\u0440\u043e\u0435' ), ) condition = models . CharField ( max_length = 1 , choices = conditions , verbose_name = '\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430' ) book = models . ForeignKey ( 'Book' , verbose_name = '\u041a\u043d\u0438\u0433\u0430' , on_delete = CASCADE ) def __str__ ( self ): return self . code class Book ( models . Model ): id_book = models . AutoField ( \"ID_\u043a\u043d\u0438\u0433\u0438\" , primary_key = True ) name = models . CharField ( max_length = 50 , verbose_name = '\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435' ) author = models . CharField ( max_length = 70 , verbose_name = \"\u0424\u0418\u041e \u0430\u0432\u0442\u043e\u0440\u0430\" ) publisher = models . CharField ( max_length = 30 , verbose_name = '\u0418\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e' ) def __str__ ( self ): return self . name class Reader ( models . Model ): ticket = models . CharField ( max_length = 20 , verbose_name = '\u041d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430' ) name = models . CharField ( max_length = 70 , verbose_name = \"\u0424\u0418\u041e\" ) passport = models . CharField ( max_length = 20 , verbose_name = '\u041d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430' ) birth_date = models . DateField ( verbose_name = '\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f' ) address = models . CharField ( max_length = 100 , verbose_name = '\u0410\u0434\u0440\u0435\u0441' ) phone_number = models . CharField ( max_length = 20 , verbose_name = '\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430' ) educations = ( ( '\u043d' , '\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435' ), ( '\u0441' , '\u0441\u0440\u0435\u0434\u043d\u0435\u0435' ), ( '\u0432' , '\u0432\u044b\u0441\u0448\u0435\u0435' ), ) education = models . CharField ( max_length = 1 , choices = educations , verbose_name = '\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435' ) degree = models . BooleanField ( default = False , verbose_name = '\u041d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u0447\u0435\u043d\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438' ) registration_date = models . DateField ( verbose_name = '\u0414\u0430\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438' ) instances = models . ManyToManyField ( 'Instance' , verbose_name = '\u0412\u0437\u044f\u0442\u044b\u0435 \u043a\u043d\u0438\u0433\u0438' , through = 'ReaderBook' , related_name = 'reader_book' ) room = models . ForeignKey ( 'Room' , verbose_name = '\u0417\u0430\u043b, \u0437\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c' , on_delete = CASCADE , null = True ) def __str__ ( self ): return self . name class ReaderRoom ( models . Model ): reader = models . ForeignKey ( 'Reader' , verbose_name = '\u0427\u0438\u0442\u0430\u0442\u0435\u043b\u044c' , on_delete = CASCADE ) room = models . ForeignKey ( 'Room' , verbose_name = '\u0417\u0430\u043b' , on_delete = CASCADE ) date = models . DateField ( verbose_name = '\u0414\u0430\u0442\u0430 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u043b\u0430' , null = True ) class BookInst ( models . Model ): inst = models . ForeignKey ( 'Instance' , verbose_name = '\u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440' , on_delete = CASCADE ) book = models . ForeignKey ( 'Book' , verbose_name = '\u041a\u043d\u0438\u0433\u0430' , on_delete = CASCADE ) class ReaderBook ( models . Model ): reader = models . ForeignKey ( 'Reader' , verbose_name = '\u0427\u0438\u0442\u0430\u0442\u0435\u043b\u044c' , on_delete = CASCADE ) book = models . ForeignKey ( 'Instance' , verbose_name = '\u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440' , on_delete = CASCADE ) date = models . DateField ( verbose_name = '\u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043d\u0438\u0433\u0438' , null = True ) class BookRoom ( models . Model ): book = models . ForeignKey ( 'Instance' , verbose_name = '\u041a\u043d\u0438\u0433\u0430' , on_delete = CASCADE ) room = models . ForeignKey ( 'Room' , verbose_name = '\u0417\u0430\u043b' , on_delete = CASCADE ) class Room ( models . Model ): name = models . CharField ( max_length = 20 , verbose_name = '\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435' ) capacity = models . IntegerField ( verbose_name = '\u0412\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c' ) books = models . ManyToManyField ( 'Instance' , verbose_name = '\u041a\u043d\u0438\u0433\u0438' , through = 'BookRoom' , related_name = 'book_room' ) def __str__ ( self ): return self . name views.py - \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b from django.db.models.query import QuerySet from django.shortcuts import render from django.utils import timezone from .models import * from .serializers import * from datetime import datetime , timedelta from rest_framework.generics import CreateAPIView , ListAPIView , RetrieveUpdateDestroyAPIView , RetrieveAPIView from rest_framework import generics from rest_framework.views import APIView , Response from datetime import date # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 class ReaderListAPIView ( ListAPIView ): serializer_class = ReaderSerializer queryset = Reader . objects . all () # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f class CreateReader ( CreateAPIView ): serializer_class = ReaderSerializer queryset = Reader . objects . all () # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 class BookListAPIView ( ListAPIView ): serializer_class = BookSerializer queryset = Book . objects . all () # \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 class CreateBook ( CreateAPIView ): serializer_class = BookSerializer queryset = Book . objects . all () # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439 class InstanceListAPIView ( ListAPIView ): serializer_class = InstanceSerializer queryset = Instance . objects . all () class CreateInstance ( CreateAPIView ): serializer_class = InstanceSerializer queryset = Instance . objects . all () # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439 class OneBook ( RetrieveUpdateDestroyAPIView ): serializer_class = BookSerializer queryset = Book . objects . all () # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 class OneInstance ( RetrieveUpdateDestroyAPIView ): serializer_class = InstanceSerializer queryset = Instance . objects . all () # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 class OneReader ( RetrieveUpdateDestroyAPIView ): serializer_class = ReaderSerializer queryset = Instance . objects . all () # \u0431\u0440\u043e\u043d\u044c \u043a\u043d\u0438\u0433\u0438 class BookReaders ( CreateAPIView ): serializer_class = ReaderBookSerializer queryset = ReaderBook . objects . all () # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043c\u043d\u0430\u0442 class RoomListAPIView ( ListAPIView ): serializer_class = RoomSerializer queryset = Room . objects . all () # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043d\u0430\u0442 class RoomCreateAPIView ( CreateAPIView ): serializer_class = RoomSerializer queryset = Room . objects . all () # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043d\u0430\u0442 class OneRoom ( RetrieveUpdateDestroyAPIView ): serializer_class = RoomSerializer queryset = Room . objects . all () # \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u043a\u043e\u043c\u043d\u0430\u0442\u043e\u0439 class RoomBook ( CreateAPIView ): serializer_class = BookRoomSerializer queryset = BookRoom . objects . all () # \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f \u0437\u0430 \u043a\u043e\u043c\u043d\u0430\u0442\u043e\u0439 class RoomReader ( CreateAPIView ): serializer_class = ReaderRoomSerializer queryset = ReaderRoom . objects . all () class BookInst ( CreateAPIView ): serializer_class = BookInstSerializer queryset = BookInst . objects . all () class ReadersInst ( generics . RetrieveAPIView ): serializer_class = ReaderInstsSerializer queryset = Reader . objects . all () class RecentlyBookDate ( ListAPIView ): # serializer_class = RecentlyBookDateSerializer # queryset = ReaderBook.objects.all() def get ( self , request ): today = date . today () reader = ReaderBook . objects . filter ( date__lte = today ) content = { \"reader\" : reader } return Response ( content ) serializers.py - \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0411\u0414 \u0432 \u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 Python from django.utils import timezone from rest_framework import serializers from .models import * class ReaderSerializer ( serializers . ModelSerializer ): books = serializers . SlugRelatedField ( read_only = True , many = True , slug_field = 'books' ) class Meta : model = Reader fields = \"__all__\" class BookSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = \"__all__\" class InstanceSerializer ( serializers . ModelSerializer ): class Meta : model = Instance fields = \"__all__\" class ReaderBookSerializer ( serializers . ModelSerializer ): class Meta : model = ReaderBook fields = \"__all__\" class RoomSerializer ( serializers . ModelSerializer ): books = serializers . SlugRelatedField ( read_only = True , many = True , slug_field = 'name' ) class Meta : model = Room fields = \"__all__\" class BookRoomSerializer ( serializers . ModelSerializer ): class Meta : model = BookRoom fields = \"__all__\" class ReaderRoomSerializer ( serializers . ModelSerializer ): class Meta : model = ReaderRoom fields = \"__all__\" class BookInstSerializer ( serializers . ModelSerializer ): class Meta : model = BookInst fields = \"__all__\" class ReaderInstsSerializer ( serializers . ModelSerializer ): class Meta : model = Reader fields = [ \"instances\" ] class RecentlyBookDateSerializer ( serializers . ModelSerializer ): class Meta : model = ReaderBook fields = [ \"reader\" ] urls.py - \u044e\u0440\u043b\u044b \u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u043d\u0430\u0448\u0435\u0433\u043e \u0441\u0430\u0439\u0442\u0430 from django.urls import path from .views import * urlpatterns = [ path ( 'readers/list/' , ReaderListAPIView . as_view ()), path ( 'readers/create/' , CreateReader . as_view ()), path ( 'readers/<int:pk>/' , OneReader . as_view ()), path ( 'books/list/' , BookListAPIView . as_view ()), path ( 'books/create/' , CreateBook . as_view ()), path ( 'books/<int:pk>/' , OneBook . as_view ()), path ( 'inst/list/' , InstanceListAPIView . as_view ()), path ( 'inst/create/' , CreateInstance . as_view ()), path ( 'inst/<int:pk>/' , OneInstance . as_view ()), path ( 'rooms/list/' , RoomListAPIView . as_view ()), path ( 'rooms/create/' , RoomCreateAPIView . as_view ()), path ( 'rooms/<int:pk>/' , OneRoom . as_view ()), path ( 'book/readers/' , BookReaders . as_view ()), path ( 'book/room/' , RoomBook . as_view ()), path ( 'room/readers/' , RoomReader . as_view ()), path ( 'book/inst/' , BookInst . as_view ()), path ( 'readers/inst/<int:pk>' , ReadersInst . as_view ()), ] \u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 - \u043f\u043e \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438 \u043a\u043d\u0438\u0433\u0438 \u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e ** URL ** : ` / library / book / readers ` ** Method ** : ` POST ` ** Auth required ** : YES ** Permissions required ** : None ** Body ** : { reader : 2 book : 2 date : '2022-01-01' } ** Headers ** : { 'Content-Type' : 'application/json' } ** Data constraints ** : ` { } ` ** Code ** : ` 200 OK ` ** Content ** : ` {[]} ` '''json '''","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163"},{"location":"lr3/#no3","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0417\u0430\u0434\u0430\u043d\u0438\u0435 2. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438. \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u043a\u043d\u0438\u0433\u0430\u0445, \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0438 \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043b\u0430\u0445. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u0432 \u0411\u0414 \u0434\u043e\u043b\u0436\u043d\u044b \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438, \u0430\u0432\u0442\u043e\u0440 (\u044b), \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e, \u0433\u043e\u0434 \u0438\u0437\u0434\u0430\u043d\u0438\u044f, \u0440\u0430\u0437\u0434\u0435\u043b, \u0447\u0438\u0441\u043b\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u044d\u0442\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0437\u0430\u043b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0448\u0438\u0444\u0440 \u043a\u043d\u0438\u0433\u0438 \u0438 \u0434\u0430\u0442\u0430 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c. \u041a\u043d\u0438\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u0437\u0430\u043b\u0435. \u0421\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430, \u0424\u0418\u041e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f, \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0434\u0430\u0442\u0443 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u0430\u0434\u0440\u0435\u0441, \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u0447\u0435\u043d\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438. \u0427\u0438\u0442\u0430\u0442\u0435\u043b\u0438 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0437\u0430\u043b\u043e\u043c, \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0430\u043b \u0438 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0432\u044b\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u044e\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u043e\u043c, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c\u044e, \u0442\u043e \u0435\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432 \u0437\u0430\u043b\u0435. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043a\u043d\u0438\u0433\u0438 \u0438 \u0441\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u044b\u0435. \u0428\u0438\u0444\u0440 \u043a\u043d\u0438\u0433\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c\u0441\u044f \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0430 \u043d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0435\u0440\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438.","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163"},{"location":"lr3/#_1","text":"models.py - \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0431\u0430\u0437\u044b from django.db import models from django.contrib.auth.models import AbstractUser from django.db.models.deletion import CASCADE class User ( AbstractUser ): tel = models . CharField ( verbose_name = '\u0422\u0435\u043b\u0435\u0444\u043e\u043d' , max_length = 15 , null = True , blank = True ) REQUIRED_FIELDS = [ 'first_name' , 'last_name' , 'tel' ] def __str__ ( self ): return self . username class Instance ( models . Model ): id_instance = models . AutoField ( \"ID_\u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430\" , primary_key = True ) section = models . CharField ( max_length = 20 , verbose_name = '\u0420\u0430\u0437\u0434\u0435\u043b' ) code = models . CharField ( max_length = 20 , verbose_name = '\u0410\u0440\u0442\u0438\u043a\u0443\u043b' ) year = models . IntegerField ( verbose_name = '\u0413\u043e\u0434 \u0438\u0437\u0434\u0430\u043d\u0438\u044f' ) conditions = ( ( '\u0445' , '\u0445\u043e\u0440\u043e\u0448\u0435\u0435' ), ( '\u0443' , '\u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435' ), ( '\u0441' , '\u0441\u0442\u0430\u0440\u043e\u0435' ), ) condition = models . CharField ( max_length = 1 , choices = conditions , verbose_name = '\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430' ) book = models . ForeignKey ( 'Book' , verbose_name = '\u041a\u043d\u0438\u0433\u0430' , on_delete = CASCADE ) def __str__ ( self ): return self . code class Book ( models . Model ): id_book = models . AutoField ( \"ID_\u043a\u043d\u0438\u0433\u0438\" , primary_key = True ) name = models . CharField ( max_length = 50 , verbose_name = '\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435' ) author = models . CharField ( max_length = 70 , verbose_name = \"\u0424\u0418\u041e \u0430\u0432\u0442\u043e\u0440\u0430\" ) publisher = models . CharField ( max_length = 30 , verbose_name = '\u0418\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e' ) def __str__ ( self ): return self . name class Reader ( models . Model ): ticket = models . CharField ( max_length = 20 , verbose_name = '\u041d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430' ) name = models . CharField ( max_length = 70 , verbose_name = \"\u0424\u0418\u041e\" ) passport = models . CharField ( max_length = 20 , verbose_name = '\u041d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430' ) birth_date = models . DateField ( verbose_name = '\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f' ) address = models . CharField ( max_length = 100 , verbose_name = '\u0410\u0434\u0440\u0435\u0441' ) phone_number = models . CharField ( max_length = 20 , verbose_name = '\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430' ) educations = ( ( '\u043d' , '\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435' ), ( '\u0441' , '\u0441\u0440\u0435\u0434\u043d\u0435\u0435' ), ( '\u0432' , '\u0432\u044b\u0441\u0448\u0435\u0435' ), ) education = models . CharField ( max_length = 1 , choices = educations , verbose_name = '\u041e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435' ) degree = models . BooleanField ( default = False , verbose_name = '\u041d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u0447\u0435\u043d\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438' ) registration_date = models . DateField ( verbose_name = '\u0414\u0430\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438' ) instances = models . ManyToManyField ( 'Instance' , verbose_name = '\u0412\u0437\u044f\u0442\u044b\u0435 \u043a\u043d\u0438\u0433\u0438' , through = 'ReaderBook' , related_name = 'reader_book' ) room = models . ForeignKey ( 'Room' , verbose_name = '\u0417\u0430\u043b, \u0437\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c' , on_delete = CASCADE , null = True ) def __str__ ( self ): return self . name class ReaderRoom ( models . Model ): reader = models . ForeignKey ( 'Reader' , verbose_name = '\u0427\u0438\u0442\u0430\u0442\u0435\u043b\u044c' , on_delete = CASCADE ) room = models . ForeignKey ( 'Room' , verbose_name = '\u0417\u0430\u043b' , on_delete = CASCADE ) date = models . DateField ( verbose_name = '\u0414\u0430\u0442\u0430 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u043b\u0430' , null = True ) class BookInst ( models . Model ): inst = models . ForeignKey ( 'Instance' , verbose_name = '\u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440' , on_delete = CASCADE ) book = models . ForeignKey ( 'Book' , verbose_name = '\u041a\u043d\u0438\u0433\u0430' , on_delete = CASCADE ) class ReaderBook ( models . Model ): reader = models . ForeignKey ( 'Reader' , verbose_name = '\u0427\u0438\u0442\u0430\u0442\u0435\u043b\u044c' , on_delete = CASCADE ) book = models . ForeignKey ( 'Instance' , verbose_name = '\u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440' , on_delete = CASCADE ) date = models . DateField ( verbose_name = '\u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043d\u0438\u0433\u0438' , null = True ) class BookRoom ( models . Model ): book = models . ForeignKey ( 'Instance' , verbose_name = '\u041a\u043d\u0438\u0433\u0430' , on_delete = CASCADE ) room = models . ForeignKey ( 'Room' , verbose_name = '\u0417\u0430\u043b' , on_delete = CASCADE ) class Room ( models . Model ): name = models . CharField ( max_length = 20 , verbose_name = '\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435' ) capacity = models . IntegerField ( verbose_name = '\u0412\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c' ) books = models . ManyToManyField ( 'Instance' , verbose_name = '\u041a\u043d\u0438\u0433\u0438' , through = 'BookRoom' , related_name = 'book_room' ) def __str__ ( self ): return self . name views.py - \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b from django.db.models.query import QuerySet from django.shortcuts import render from django.utils import timezone from .models import * from .serializers import * from datetime import datetime , timedelta from rest_framework.generics import CreateAPIView , ListAPIView , RetrieveUpdateDestroyAPIView , RetrieveAPIView from rest_framework import generics from rest_framework.views import APIView , Response from datetime import date # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 class ReaderListAPIView ( ListAPIView ): serializer_class = ReaderSerializer queryset = Reader . objects . all () # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f class CreateReader ( CreateAPIView ): serializer_class = ReaderSerializer queryset = Reader . objects . all () # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 class BookListAPIView ( ListAPIView ): serializer_class = BookSerializer queryset = Book . objects . all () # \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 class CreateBook ( CreateAPIView ): serializer_class = BookSerializer queryset = Book . objects . all () # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439 class InstanceListAPIView ( ListAPIView ): serializer_class = InstanceSerializer queryset = Instance . objects . all () class CreateInstance ( CreateAPIView ): serializer_class = InstanceSerializer queryset = Instance . objects . all () # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439 class OneBook ( RetrieveUpdateDestroyAPIView ): serializer_class = BookSerializer queryset = Book . objects . all () # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 class OneInstance ( RetrieveUpdateDestroyAPIView ): serializer_class = InstanceSerializer queryset = Instance . objects . all () # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 class OneReader ( RetrieveUpdateDestroyAPIView ): serializer_class = ReaderSerializer queryset = Instance . objects . all () # \u0431\u0440\u043e\u043d\u044c \u043a\u043d\u0438\u0433\u0438 class BookReaders ( CreateAPIView ): serializer_class = ReaderBookSerializer queryset = ReaderBook . objects . all () # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043c\u043d\u0430\u0442 class RoomListAPIView ( ListAPIView ): serializer_class = RoomSerializer queryset = Room . objects . all () # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043d\u0430\u0442 class RoomCreateAPIView ( CreateAPIView ): serializer_class = RoomSerializer queryset = Room . objects . all () # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043d\u0430\u0442 class OneRoom ( RetrieveUpdateDestroyAPIView ): serializer_class = RoomSerializer queryset = Room . objects . all () # \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u043a\u043e\u043c\u043d\u0430\u0442\u043e\u0439 class RoomBook ( CreateAPIView ): serializer_class = BookRoomSerializer queryset = BookRoom . objects . all () # \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f \u0437\u0430 \u043a\u043e\u043c\u043d\u0430\u0442\u043e\u0439 class RoomReader ( CreateAPIView ): serializer_class = ReaderRoomSerializer queryset = ReaderRoom . objects . all () class BookInst ( CreateAPIView ): serializer_class = BookInstSerializer queryset = BookInst . objects . all () class ReadersInst ( generics . RetrieveAPIView ): serializer_class = ReaderInstsSerializer queryset = Reader . objects . all () class RecentlyBookDate ( ListAPIView ): # serializer_class = RecentlyBookDateSerializer # queryset = ReaderBook.objects.all() def get ( self , request ): today = date . today () reader = ReaderBook . objects . filter ( date__lte = today ) content = { \"reader\" : reader } return Response ( content ) serializers.py - \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0411\u0414 \u0432 \u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 Python from django.utils import timezone from rest_framework import serializers from .models import * class ReaderSerializer ( serializers . ModelSerializer ): books = serializers . SlugRelatedField ( read_only = True , many = True , slug_field = 'books' ) class Meta : model = Reader fields = \"__all__\" class BookSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = \"__all__\" class InstanceSerializer ( serializers . ModelSerializer ): class Meta : model = Instance fields = \"__all__\" class ReaderBookSerializer ( serializers . ModelSerializer ): class Meta : model = ReaderBook fields = \"__all__\" class RoomSerializer ( serializers . ModelSerializer ): books = serializers . SlugRelatedField ( read_only = True , many = True , slug_field = 'name' ) class Meta : model = Room fields = \"__all__\" class BookRoomSerializer ( serializers . ModelSerializer ): class Meta : model = BookRoom fields = \"__all__\" class ReaderRoomSerializer ( serializers . ModelSerializer ): class Meta : model = ReaderRoom fields = \"__all__\" class BookInstSerializer ( serializers . ModelSerializer ): class Meta : model = BookInst fields = \"__all__\" class ReaderInstsSerializer ( serializers . ModelSerializer ): class Meta : model = Reader fields = [ \"instances\" ] class RecentlyBookDateSerializer ( serializers . ModelSerializer ): class Meta : model = ReaderBook fields = [ \"reader\" ] urls.py - \u044e\u0440\u043b\u044b \u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u043d\u0430\u0448\u0435\u0433\u043e \u0441\u0430\u0439\u0442\u0430 from django.urls import path from .views import * urlpatterns = [ path ( 'readers/list/' , ReaderListAPIView . as_view ()), path ( 'readers/create/' , CreateReader . as_view ()), path ( 'readers/<int:pk>/' , OneReader . as_view ()), path ( 'books/list/' , BookListAPIView . as_view ()), path ( 'books/create/' , CreateBook . as_view ()), path ( 'books/<int:pk>/' , OneBook . as_view ()), path ( 'inst/list/' , InstanceListAPIView . as_view ()), path ( 'inst/create/' , CreateInstance . as_view ()), path ( 'inst/<int:pk>/' , OneInstance . as_view ()), path ( 'rooms/list/' , RoomListAPIView . as_view ()), path ( 'rooms/create/' , RoomCreateAPIView . as_view ()), path ( 'rooms/<int:pk>/' , OneRoom . as_view ()), path ( 'book/readers/' , BookReaders . as_view ()), path ( 'book/room/' , RoomBook . as_view ()), path ( 'room/readers/' , RoomReader . as_view ()), path ( 'book/inst/' , BookInst . as_view ()), path ( 'readers/inst/<int:pk>' , ReadersInst . as_view ()), ] \u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 - \u043f\u043e \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438 \u043a\u043d\u0438\u0433\u0438 \u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e ** URL ** : ` / library / book / readers ` ** Method ** : ` POST ` ** Auth required ** : YES ** Permissions required ** : None ** Body ** : { reader : 2 book : 2 date : '2022-01-01' } ** Headers ** : { 'Content-Type' : 'application/json' } ** Data constraints ** : ` { } ` ** Code ** : ` 200 OK ` ** Content ** : ` {[]} ` '''json '''","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c"},{"location":"lr4/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043a\u0443\u0440\u0441\u0430 \u043f\u043e \u0424\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u041c\u0438\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u043d\u0435\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u0441\u0430\u0439\u0442 \u043d\u0430 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Vue.JS. \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: 1 \u0414\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0451\u043d \u0440\u043e\u0443\u0442\u0435\u0440 2 \u0414\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0432\u043d\u0435\u0448\u043d\u0438\u043c API 3 \u0420\u0430\u0437\u0443\u043c\u043d\u043e\u0435 \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b router/index.js \u0420\u043e\u0443\u0442\u0435\u0440 \u0438 \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043d\u0430\u043c url\u044b \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0439\u0442\u0438 import { createRouter , createWebHistory } from 'vue-router' import MainView from '@/views/MainView.vue' import CalendarView from '@/views/CalendarView.vue' import PersonalView from '@/views/PersonalView.vue' import EntryView from '@/views/EntryView.vue' import RegistrationView from '@/views/RegistrationView.vue' import EventView from '@/views/EventView.vue' const router = createRouter ({ history : createWebHistory ( import . meta . env . BASE_URL ), routes : [ { path : '/' , name : 'home' , component : MainView }, { path : '/calendar/' , name : 'calendar' , component : CalendarView }, { path : '/personal/' , name : 'personal' , component : PersonalView }, { path : '/entry/' , name : 'entry' , component : EntryView }, { path : '/registration/' , name : 'registration' , component : RegistrationView }, { path : '/event/' , name : 'event' , component : EventView }, ] }) export default router \u0414\u0430\u043b\u044c\u0448\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0441\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u043d\u0430\u0448\u0435\u0433\u043e \u0441\u0430\u0439\u0442\u0430 Card.vue \u0428\u0430\u0431\u043b\u043e\u043d \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0438 \u0432 mainPage <template> <img :src=\"src\" class=\"card-img-top\" width=\"262\" :alt=\"description\" style=\"height: 11rem;\"> <div class=\"card-body\"> <h3 class=\"card-title\">{{ title }}</h3> <p class=\"card-text\">{{ description }}</p> <p class=\"card-data\">{{ date }}</p> <a href=\"./event.html\" class=\"btn btn-primary\">\u041d\u0430 \u0441\u0430\u0439\u0442 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</a> <form action=\"\" @submit.prevent=\"subscribe(id)\"> <button type=\"submit\" class=\"btn btn-primary mt-3\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"> <svg class=\"icon-main\"><use xlink:href=\"#register-icon\"></use></svg> \u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f </button> </form> </div> </template> <script> import { mapActions, mapState } from \"pinia\"; import useUserEventsStore from \"@/stores/userEvents.js\" export default { name: 'CardNote', computed: { ...mapState(useUserEventsStore, ['userEvents']), }, props: { title: { type: String, required: true }, description: { type: String, required: true }, date: { type: String, required: true }, src: { type: String, required: true }, id: { type: Number, required: true }, }, methods: { ...mapActions(useUserEventsStore, ['addUserEvents']), async subscribe(id) { const userEvents = { \"userId\": JSON.parse(localStorage.user).id, \"eventId\": id } console.log(userEvents) const response = await this.addUserEvents(userEvents); console.log(response) } } } </script> PersonalCard.vue \u0428\u0430\u0431\u043b\u043e\u043d \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0434\u043b\u044f \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 <template> <img :src=\"src\" class=\"card-img-top\" width=\"262\" :alt=\"description\" style=\"height: 11rem;\"> <div class=\"card-body\"> <h3 class=\"card-title\">{{ title }}</h3> <p class=\"card-text\">{{ description }}</p> <p class=\"card-data\">{{ date }}</p> <form action=\"\" @submit.prevent=\"deleteCard(primaryId)\"> <button type=\"submit\" class=\"btn btn-danger mt-3\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"> \u041e\u0442\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f </button> </form> </div> </template> <script> import { mapActions, mapState } from \"pinia\"; import useUserEventsStore from \"@/stores/userEvents.js\" export default { name: 'PersonalCard', computed: { ...mapState(useUserEventsStore, ['userEvents']), }, methods: { ...mapActions(useUserEventsStore, ['addUserEvents', 'deleteCardById']), async deleteCard(id) { this.deleteCardById(id) location.reload() } }, props: { title: { type: String, required: true }, description: { type: String, required: true }, date: { type: String, required: true }, src: { type: String, required: true }, primaryId: { type: Number, required: true }, }, } </script> Entry.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u0432\u0445\u043e\u0434\u0430 <template> <main class=\"container-xl p-5 mb-5\"> <form class=\"d-flex-column\" @submit.prevent=\"login\"> <h1 class=\"row mb-5 justify-content-center\">\u0412\u0445\u043e\u0434</h1> <div class=\"row mb-3 justify-content-center\"> <label for=\"email\" class=\"col-sm-1 col-form-label\">\u041f\u043e\u0447\u0442\u0430</label> <div class=\"col-sm-3 col-md-4\"> <input type=\"text\" class=\"form-control\" v-model=\"form.email\" name=\"email\" id=\"email\"> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"password\" class=\"col-sm-1 col-form-label\">\u041f\u0430\u0440\u043e\u043b\u044c</label> <div class=\"col-sm-3 col-md-4\"> <input type=\"password\" class=\"form-control\" v-model=\"form.password\" name=\"password\" id=\"password\"> </div> </div> <div class=\"row justify-content-center\"> <div class=\"col-sm-4 col-md-5\"> <button type=\"submit\" class=\"btn btn-primary\" :to=\"{ path: '/' }\">\u0412\u043e\u0439\u0442\u0438</button> <a class=\"btn btn-primary\" href=\"./reqistration.html\" role=\"button\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</a> </div> </div> </form> </main> </template> <script> import { mapActions, mapState } from 'pinia' import router from '@/router' import useLoginStore from '../stores/login' export default { name: 'EntryBlock', data() { return { form: { email: \"\", password: \"\" } }; }, methods: { ...mapActions(useLoginStore, ['userLogin']), async login() { const response = await this.userLogin(this.form); const { accessToken, user } = response.data localStorage.accessToken = accessToken localStorage.user = JSON.stringify(user) localStorage.accessToken ? router.push('/') : router.push('') } } } </script> Registration.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 <template> <main class=\"container-xl p-5\"> <form class=\"d-flex-column\" @submit.prevent=\"register\"> <h1 class=\"row mb-5 justify-content-center\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</h1> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputName3\" class=\"col-sm-1 col-form-label\">\u0418\u043c\u044f</label> <div class=\"col-sm-3\"> <input type=\"text\" class=\"form-control\" v-model=\"form.firstname\" name=\"firstname\" id=\"inputName3\" placeholder=\"\u0410\u043b\u0435\u043a\u0441\u0435\u0439\" required> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputSurname3\" class=\"col-sm-1 col-form-label\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f</label> <div class=\"col-sm-3\"> <input type=\"text\" class=\"form-control\" v-model=\"form.lastname\" name=\"lastname\" id=\"inputSurname3\" placeholder=\"\u041a\u043e\u043d\u0434\u0440\u0430\u0442\u044c\u0435\u0432\" required> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputEmail3\" class=\"col-sm-1 col-form-label\">\u041f\u043e\u0447\u0442\u0430</label> <div class=\"col-sm-3\"> <input type=\"email\" class=\"form-control\" v-model=\"form.email\" name=\"email\" id=\"inputEmail3\" placeholder=\"example@email.com\" required> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputLogin3\" class=\"col-sm-1 col-form-label\">\u041b\u043e\u0433\u0438\u043d</label> <div class=\"col-sm-3\"> <input type=\"text\" class=\"form-control\" v-model=\"form.login\" name=\"login\" id=\"inputLogin3\" placeholder=\"9Anpanman\" required> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputPassword3\" class=\"col-sm-1 col-form-label\">\u041f\u0430\u0440\u043e\u043b\u044c</label> <div class=\"col-sm-3\"> <input type=\"password\" class=\"form-control\" v-model=\"form.password\" name=\"password\" id=\"inputPassword3\" required> </div> </div> <div class=\"row justify-content-center\"> <div class=\"col-sm-4\"> <button type=\"submit\" class=\"btn btn-primary\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</button> </div> </div> </form> </main> </template> <script> import { mapActions, mapState } from 'pinia' import router from '@/router' import useRegisterStore from '../stores/register' export default { name: 'RegistrationBlock', data() { return { form: { firstname: \"\", lastname: \"\", email: \"\", password: \"\", login: \"\" } }; }, methods: { ...mapActions(useRegisterStore, ['userRegister']), async register() { const response = await this.userRegister(this.form); const { accessToken, user } = response.data localStorage.accessToken = accessToken localStorage.user = JSON.stringify(user) localStorage.accessToken ? router.push('/') : router.push('') } } } </script> Header.vue \u0425\u0435\u0434\u0435\u0440 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0438 <template> <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" display=\"none\"> <symbol id=\"personal-area\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"> <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-5 6s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zM11 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5zm.5 2.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1h-4zm2 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2zm0 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2z\"/> </symbol> <symbol id=\"calendar\" viewBox=\"0 0 16 16\"> <path d=\"M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z\"/> <path d=\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z\"/> </symbol> <symbol id=\"exit-door\" viewBox=\"0 0 16 16\"> <path fill-rule=\"evenodd\" d=\"M6 12.5a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-1 0v-2A1.5 1.5 0 0 1 6.5 2h8A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-8A1.5 1.5 0 0 1 5 12.5v-2a.5.5 0 0 1 1 0v2z\"/> <path fill-rule=\"evenodd\" d=\"M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3z\"/> </symbol> <symbol id=\"entry-door\" viewBox=\"0 0 16 16\"> <path fill-rule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z\"/> <path fill-rule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"/> </symbol> <symbol id=\"main-icon\" viewBox=\"0 0 16 16\"> <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\"/> </symbol> <symbol id=\"register-icon\" viewBox=\"0 0 16 16\"> <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"/> </symbol> </svg> <header class=\"container-fluid colors\"> <nav class=\"navbar navbar-expand-md d-flex justify-content-between\"> <div> <a class=\"colors navbar-brand text-color fs-4 p-2\" href=\"#\" @click=\"$router.push('/')\">\u0413\u043b\u0430\u0432\u043d\u0430\u044f <svg class=\"icon-main\"><use xlink:href=\"#main-icon\"></use></svg></a> <a class=\"colors navbar-brand text-color fs-6 p-2\" href=\"#\" @click=\"$router.push('/calendar/')\">\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c <svg class=\"icon-main\"><use xlink:href=\"#calendar\"></use></svg></a> </div> <div> <button class=\"colors navbar-brand text-color fs-6\" id=\"entry\" @click=\"$router.push('/entry/')\">\u0412\u0445\u043e\u0434 <svg class=\"icon-main\"><use xlink:href=\"#entry-door\"></use></svg></button> <button class=\"colors navbar-brand text-color fs-6 button-logout\" id=\"exit\" @click=\"logout\">\u0412\u044b\u0445\u043e\u0434 <svg class=\"icon-main\"><use xlink:href=\"#exit-door\"></use></svg></button> <button class=\"colors navbar-brand text-color fs-6\" id=\"register\" @click=\"$router.push('/registration/')\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f <svg class=\"icon-main\"><use xlink:href=\"#register-icon\"></use></svg></button> <button class=\"colors navbar-brand text-color fs-5 p-2\" id=\"lc\" @click=\"$router.push('/personal/')\"> \u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 <svg class=\"icon-main\"> <use class=\"icon-main\" xlink:href=\"#personal-area\"></use> </svg> </button> </div> </nav> </header> </template> <script> export default { name: 'HeaderBlock', methods: { check() { const entryButton = document.querySelector('#entry'); const registerButton = document.querySelector('#register'); const exitButton = document.querySelector('#exit'); if (localStorage.accessToken) { entryButton.classList.add('d-none'); registerButton.classList.add('d-none'); exitButton.classList.remove('d-none'); } else { entryButton.classList.remove('d-none'); registerButton.classList.remove('d-none'); exitButton.classList.add('d-none'); } }, logout() { localStorage.clear(); document.querySelector('#entry').classList.remove('d-none'); document.querySelector('#register').classList.remove('d-none'); document.querySelector('#exit').classList.add('d-none'); } }, mounted() { this.check() } } </script> Footer.vue \u0424\u0443\u0442\u0435\u0440 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b <template> <footer class=\"container-fluid pt-5 colors\"> <div class=\"row justify-content-between p-2\"> <div class=\"col-2 text-color\"> <h3>\u0412\u0430\u0448 \u0430\u043a\u043a\u0430\u0443\u043d\u0442</h3> <ul class=\"nav flex-column\"> <li class=\"nav-item mb-2\"><a href=\"./personal-area.html\" class=\"nav-link p-0 text-color\">\u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442</a></li> <li class=\"nav-item mb-2\"><a href=\"./entry.html\" class=\"nav-link p-0 text-color\">\u0412\u0445\u043e\u0434</a></li> <li class=\"nav-item mb-2\"><a href=\"./reqistration.html\" class=\"nav-link p-0 text-color\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a></li> </ul> </div> <div class=\"col-2 text-color\"> <h3>\u041d\u0430\u0439\u0442\u0438</h3> <ul class=\"nav flex-column\"> <li class=\"nav-item mb-2\"><a href=\"./calendar.html\" class=\"nav-link p-0 text-color\">\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c</a></li> <li class=\"nav-item mb-2\"><a href=\"#\" class=\"nav-link p-0 text-color\">\u041f\u043e\u0438\u0441\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439</a></li> </ul> </div> <div class=\"col-2 text-color\"> <h3>\u041e \u043d\u0430\u0441</h3> <ul class=\"nav flex-column\"> <li class=\"nav-item mb-2\"><a href=\"#\" class=\"nav-link p-0 text-color\">\u0412\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u0435</a></li> <li class=\"nav-item mb-2\"><a href=\"#\" class=\"nav-link p-0 text-color\">\u0422\u0435\u043b\u0435\u0433\u0440\u0430\u043c</a></li> </ul> </div> <div class=\"col-4 offset-1\"> <form> <h3 class=\"text-color\">\u041f\u043e\u0434\u043f\u0438\u0448\u0438\u0441\u044c \u043d\u0430 \u043d\u0430\u0441, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u0438\u0447\u0435\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e\u0433\u043e</h3> <div class=\"d-flex w-100 gap-2\"> <label for=\"newsletter1\" class=\"visually-hidden\">\u0412\u0430\u0448\u0430 \u043f\u043e\u0447\u0442\u0430</label> <input id=\"newsletter1\" type=\"text\" class=\"form-control\" placeholder=\"example@email.com\"> <button class=\"btn btn-primary\" type=\"button\">\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f</button> </div> </form> </div> </div> <div class=\"d-flex justify-content-between py-4 my-4 mb-0 border-top text-color\"> <p>&copy 2022, \u041a\u043e\u043d\u0434\u0440\u0430\u0442\u044c\u0435\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439</p> </div> </footer> </template> <script> export default{ name: 'FooterBlock', } </script> Main.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b <template> <svg display=\"none\"> <symbol id=\"search-icon\" viewBox=\"0 0 16 16\"> <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/> </symbol> </svg> <main class=\"container-fluid background-main\"> <section class=\"row row-cols-2 pt-5\"> <div class=\"d-flex flex-column justify-content-center align-items-end col-5\"> <h1 class=\"w-75 h1 pb-3 text-color\">\u0421\u043e\u0431\u044b\u0442\u0438\u044f \u043e\u0431\u044c\u0435\u0434\u0438\u043d\u044f\u044e\u0442</h1> <p class=\"w-75 pt-6 text-color\">\u041f\u043e\u0441\u0435\u0449\u0430\u0439\u0442\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438 \u0438 \u043b\u0435\u043a\u0446\u0438\u0438, \u0445\u043e\u0434\u0438\u0442\u0435 \u043d\u0430 \u0432\u044b\u0441\u0442\u0430\u0432\u043a\u0438 \u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u044b, \u0437\u0430\u043d\u0438\u043c\u0430\u0439\u0442\u0435\u0441\u044c \u0441\u0430\u043c\u043e\u0440\u0430\u0437\u0432\u0438\u0442\u0438\u0435\u043c \u0438 \u0438\u0449\u0438\u0442\u0435 \u0435\u0434\u0438\u043d\u043e\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a\u043e\u0432</p> </div> <img class=\"w-50\" src=\"../assets/image/people.png\" alt=\"\u0420\u0430\u0434\u0443\u044e\u0449\u0438\u0435\u0441\u044f \u043b\u044e\u0434\u0438\"> </section> <section class=\"d-flex flex-column align-items-center pt-5\"> <h2 class=\"h2 mb-4 text-color\">\u0410\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</h2> <div class=\"d-flex justify-content-center m-0\"> <p class=\"fs-5 pe-3 text-color\">\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</p> <div class=\"dropdown me-3\"> <select class=\"form-select-sm event-type\" aria-label=\".form-select-lg example\"> <option value=\"ALL\">\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435, \u0447\u0435\u043c \u0445\u043e\u0442\u0438\u0442\u0435 \u0437\u0430\u043d\u044f\u0442\u044c\u0441\u044f</option> <option value=\"\u0421\u043f\u043e\u0440\u0442\">\u0421\u043f\u043e\u0440\u0442</option> <option value=\"\u041c\u0443\u0437\u044b\u043a\u0430\">\u041c\u0443\u0437\u044b\u043a\u0430</option> </select> </div> <div class=\"dropdown me-3\"> <select class=\"form-select-sm city-type\" aria-label=\".form-select-lg example\"> <option value=\"ALL\">\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0433\u043e\u0440\u043e\u0434</option> <option value=\"\u041c\u043e\u0441\u043a\u0432\u0430\">\u041c\u043e\u0441\u043a\u0432\u0430</option> <option value=\"\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433\">\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433</option> </select> </div> <form class=\"search-form d-flex justify-content-end col-12 col-sm-2 col-lg-4 col-xl-6\" @submit.prevent=\"filter\"> <button type=\"submit\" id=\"search\" class=\"btn btn-info btn-sm\" style=\"background-color:#d2cb60; border: 1px solid #d2cb60;\"> \u041f\u043e\u0438\u0441\u043a <svg class=\"icon-main\"><use xlink:href=\"#search-icon\"></use></svg> </button> </form> </div> <div class=\"row justify-content-center pt-5\"> <div class=\"card me-4 card-colors background text-color mb-3\" style=\"width: 18rem;\" data-event-id=\"{{ id }}\" v-for=\"card in filteredCards\" :key=\"card.id\"> <card-note :title=\"card.title\" :src=\"card.src\" :description=\"card.description\" :date=\"card.date\" :id=\"card.id\"></card-note> </div> </div> </section> <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h3 class=\"modal-title\" id=\"exampleModalLabel\">\u0412\u044b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b</h3> <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div class=\"modal-body\"> \u0416\u0434\u0435\u043c \u0432\u0430\u0441 \u043d\u0430 \u043d\u0430\u0448\u0435\u043c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u0441 \u0445\u043e\u0440\u043e\u0448\u0438\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435\u043c </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\u0417\u0430\u043a\u0440\u044b\u0442\u044c</button> </div> </div> </div> </div> </main> </template> <script> import { mapActions, mapState } from \"pinia\"; import useCardsStore from \"@/stores/cards.js\" import CardNote from \"@/components/Card.vue\" export default { name: 'MainBlock', components: { CardNote }, computed: { ...mapState(useCardsStore, ['cards']), filteredCards() { if (this.selectedCards.length) { return this.selectedCards; } else { return this.cards } } }, methods: { ...mapActions(useCardsStore, ['loadCards']), async filter() { const eventT = document.querySelector('.event-type') const cityT = document.querySelector('.city-type') this.selectedCards = [] console.log(eventT.value, cityT.value) this.cards.forEach((card) => { if ((eventT.value === card.mero && cityT.value === card.city) || (eventT.value === \"ALL\" && cityT.value === card.city) || (eventT.value === card.mero && cityT.value === \"ALL\")) { this.selectedCards.push(card); } }) } }, data() { return { selectedCards: [] } }, mounted() { this.loadCards(); } } </script> Personal.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 <template> <main class=\"container-fluid background-main\"> <section class=\"pt-5 pb-5\"> <div class=\"d-flex flex-column align-items-center pt-5 pb-5\"> <div class=\"d-flex flex-column align-items-center\"> <h1 class=\"h2 p-0 mb-2 text-color\">\u0412\u0430\u0448 \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442</h1> <p class=\"p-0 m-2 text-color\">\u0412\u0430\u0448\u0438 \u0437\u0430\u043f\u0438\u0441\u0438</p> <div class=\"row justify-content-center pt-5 pb-5\"> <div class=\"card me-4 card-colors background text-color mb-3\" style=\"width: 18rem;\" data-event-id=\"{{ id }}\" v-for=\"card in personalCards\" :key=\"card.id\"> <personal-card :title=\"card.title\" :src=\"card.src\" :description=\"card.description\" :date=\"card.date\" :primaryId=\"card.primaryId\"></personal-card> </div> </div> </div> <div class=\"row justify-content-center\" id=\"container\"> <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"exampleModalLabel\">\u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435</h2> <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div class=\"modal-body\"> \u0412\u044b \u0431\u044b\u043b\u0438 \u043e\u0442\u043f\u0438\u0441\u0430\u043d\u044b \u043e\u0442 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\u0417\u0430\u043a\u0440\u044b\u0442\u044c</button> </div> </div> </div> </div> </div> </div> </section> </main> </template> <script> import { mapActions, mapState } from \"pinia\"; import useCardsStore from \"@/stores/cards.js\" import useUserEventsStore from \"@/stores/userEvents.js\" import PersonalCard from \"@/components/PersonalCard.vue\" export default { name: 'PersonalBlock', components: { PersonalCard }, computed: { ...mapState(useUserEventsStore, ['userEvents']), ...mapState(useCardsStore, ['personalCards']), }, methods: { ...mapActions(useUserEventsStore, ['getUserEventsById']), ...mapActions(useCardsStore, ['loadCardById', 'doClear']), async loadPage() { const response = await this.getUserEventsById(JSON.parse(localStorage.user).id); const result = Array.from(response.data); this.doClear(); result.forEach((item) => { this.loadCardById(item.eventId, item.id) }) } }, mounted() { this.loadPage(); } } </script> FullCalendar.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f <template> <full-calendar :options=\"calendarOptions\" /> </template> <script> import FullCalendar from '@fullcalendar/vue3' import dayGridPlugin from '@fullcalendar/daygrid' import interactionPlugin from '@fullcalendar/interaction' const DEFAULT_OPTIONS = { plugins: [ dayGridPlugin, interactionPlugin ], initialView: 'dayGridMonth', editable: true } export default { components: { FullCalendar }, props: { options: { type: Object, default: DEFAULT_OPTIONS } }, computed: { calendarOptions() { return { ...DEFAULT_OPTIONS, ...this.options } } } } </script> <style> .fc-day { cursor: pointer; } </style> \u0414\u0430\u043b\u044c\u0448\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0441\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 API \u0432 \u043d\u0430\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 index.js \u0424\u0430\u0439\u043b \u0441 \u043e\u0431\u044c\u044f\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0432\u0441\u0435\u0445 API import instance from \"@/api/instance.js\" import CardApi from \"@/api/cards.js\" import CalendarEventsApi from \"@/api/calendarEvents\" import LoginApi from \"@/api/login\" ; import RegisterApi from \"@/api/register\" ; import UserEventsApi from \"@/api/userEvents\" ; const cardApi = new CardApi ( instance ); const calendarEventsApi = new CalendarEventsApi ( instance ); const loginApi = new LoginApi ( instance ); const registerApi = new RegisterApi ( instance ); const userEventsApi = new UserEventsApi ( instance ); export { cardApi , calendarEventsApi , loginApi , registerApi , userEventsApi } instance.js import axios from 'axios' const apiURL = 'http://localhost:3000' const instance = axios . create ({ baseURL : apiURL }) export default instance cards.js API \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a export default class CardApi { constructor ( instance ) { this . API = instance } getAll = async () => { return this . API ({ url : '/events' }) } getById = async ( id ) => { return this . API ({ url : `/events/ ${ id } ` }) } } calendarEvents.js API \u0434\u043b\u044f \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f class CalendarEventsApi { constructor ( instance ) { this . API = instance } getAll = async () => { return this . API ({ url : '/calendarEvents' }) } getById = async ( id ) => { return this . API ({ url : `/calendarEvents/ ${ id } ` }) } deleteEv = async ( id ) => { return this . API ({ url : `/calendarEvents/ ${ id } ` , method : 'DELETE' }) } create = async ( data ) => { return this . API ({ url : '/calendarEvents' , method : 'POST' , data , headers : { 'Content-Type' : 'application/json' } }) } } export default CalendarEventsApi login.js API \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043d\u0430 export default class LoginApi { constructor ( instance ) { this . API = instance } userLogin = async ( data ) => { return this . API ({ method : 'POST' , url : '/login' , data , headers : { 'Content-Type' : 'application/json' } }) } } register.js API \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 export default class RegisterApi { constructor ( instance ) { this . API = instance } userRegister = async ( data ) => { return this . API ({ method : 'POST' , url : '/register' , data , headers : { 'Content-Type' : 'application/json' } }) } } userEvents.js API \u0434\u043b\u044f userEvents export default class UserEventsApi { constructor ( instance ) { this . API = instance } getAll = async () => { return this . API ({ url : '/userEvents' }) } getById = async ( id ) => { return this . API ({ url : `/userEvents?userId= ${ id } ` }) } deleteById = async ( id ) => { return this . API ({ url : `/userEvents/ ${ id } ` , method : 'DELETE' , headers : { 'Content-Type' : 'application/json' } }) } createUserEvent = async ( data ) => { return this . API ({ url : '/userEvents' , method : 'POST' , data , headers : { 'Content-Type' : 'application/json' } }) } } \u0412\u0441\u0435 stores \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 index.js \u041e\u0431\u0449\u0438\u0439 store \u0441 pinia import { persist } from 'pinia-persists' import { createPinia } from 'pinia' const pinia = createPinia () pinia . use ( persist ()) export default pinia cards.js import { defineStore } from 'pinia' import { cardApi } from '@/api' const useCardsStore = defineStore ( 'cards' , { state : () => ({ cards : [], personalCards : [] }), actions : { async loadCards () { const response = await cardApi . getAll (); this . cards = response . data ; return response ; }, async loadCardById ( eventId , id ) { const response = await cardApi . getById ( eventId ); response . data . primaryId = id ; this . personalCards . push ( response . data ) return response }, async doClear () { this . personalCards = [] } } }) export default useCardsStore login.js store \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043d\u0430 import { defineStore } from 'pinia' import { loginApi } from '@/api' const useLoginStore = defineStore ( 'users' , { state : () => ({ users : [] }), actions : { async userLogin ( data ) { const response = await loginApi . userLogin ( data ) this . users = response . data return response } } }) export default useLoginStore register.js store \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 import { defineStore } from 'pinia' import { registerApi } from '@/api' const useRegisterStore = defineStore ( 'users' , { state : () => ({ users : [] }), actions : { async userRegister ( data ) { const response = await registerApi . userRegister ( data ) this . users = response . data return response } } }) export default useRegisterStore usrEvents.js store \u0434\u043b\u044f userEvents import { defineStore } from 'pinia' import { userEventsApi } from '@/api' const useUserEventsStore = defineStore ( 'userEvents' , { state : () => ({ userEvents : [] }), actions : { async getUserEventsById ( id ) { const response = await userEventsApi . getById ( id ) return response }, async addUserEvents ( data ) { const response = await userEventsApi . createUserEvent ( data ) this . userEvents = response . data return response }, async deleteCardById ( id ) { const response = await userEventsApi . deleteById ( id ); return response } } }) export default useUserEventsStore calendarEvents.js store \u0434\u043b\u044f calendarEvents import { defineStore } from 'pinia' import { calendarEventsApi , cardApi } from '@/api' const useCalendarEventsStore = defineStore ( 'calendarEvents' , { state : () => ({ calendarEvents : [], selectedEvent : { title : '' , date : '' , description : '' , id : \"\" } }), actions : { async loadCalendarEvents () { const response = await calendarEventsApi . getAll (); const response2 = await cardApi . getAll (); const jsonResponse = Array . from ( response2 . data ); this . calendarEvents = response . data response2 . data . forEach (( item ) => { this . calendarEvents . push ( item ) }) console . log ( this . calendarEvents ) return response }, async loadEventById ( id ) { this . selectedEvent = { title : '' , date : '' , description : '' , id : '' } const response = await calendarEventsApi . getById ( id ) // const response = await cardApi.getById(id) this . selectedEvent = response . data return response }, async createEvent ( data ) { const response = await calendarEventsApi . create ( data ) return response }, async deleteEvent ( id ) { const response = await calendarEventsApi . deleteEv ( id ) return response } } }) export default useCalendarEventsStore \u0412\u0441\u0435 \u043d\u0430\u0448\u0438 views, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0438 EntryView.vue \u0421\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 <template> <header-block /> <entry-block /> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import useLoginStore from '../stores/login' import HeaderBlock from '../components/Header.vue' import EntryBlock from '../components/Entry.vue' import FooterBlock from '../components/Footer.vue' export default{ name: 'EntryPage', components: { HeaderBlock, EntryBlock, FooterBlock }, computed: { ...mapState(useLoginStore, ['users']) } } </script> RegistrationView.vue \u0421\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f <template> <header-block /> <registration-block /> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import useRegisterStore from '../stores/register' import HeaderBlock from '../components/Header.vue' import RegistrationBlock from '../components/Registration.vue' import FooterBlock from '../components/Footer.vue' export default{ name: 'RegistrationPage', components: { HeaderBlock, RegistrationBlock, FooterBlock }, computed: { ...mapState(useRegisterStore, ['users']) } } </script> MainView.vue \u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 <template> <header-block /> <main-block /> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import useCardsStore from '@/stores/cards' import HeaderBlock from '@/components/Header.vue' import MainBlock from '@/components/Main.vue' import FooterBlock from '@/components/Footer.vue' export default{ name: 'MainPage', components: { HeaderBlock, MainBlock, FooterBlock }, computed: { ...mapActions(useCardsStore, ['cards']) }, methods: { ...mapActions(useCardsStore, ['loadCards']), }, } </script> PersonalView.vue \u0421\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 <template> <header-block /> <personal-block /> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import HeaderBlock from '../components/Header.vue' import PersonalBlock from '../components/Personal.vue' import FooterBlock from '../components/Footer.vue' export default { name: 'PersonalPage', components: { HeaderBlock, PersonalBlock, FooterBlock } } </script> CalendarView.vue \u0421\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u0441 \u043d\u0430\u0448\u0438\u043c \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435\u043c <template> <header-block /> <base-layout> <h1>\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0441\u043e\u0431\u044b\u0442\u0438\u0439</h1> <full-calendar :options=\"{ events: calendarEvents, eventChange: handleEventChange, dateClick: handleDateClick, eventClick: handleEventClick }\" /> <!-- Modal --> <div class=\"modal fade\" ref=\"detailEvent\" tabindex=\"-1\" aria-labelledby=\"detailEventLabel\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h1 class=\"modal-title fs-5\" id=\"detailEventLabel\">{{ selectedEvent.title }}</h1> <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div class=\"modal-body\"> <p><strong>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:</strong> {{ selectedEvent.description }}</p> <p>{{ selectedEvent.formattedDate() }}</p> </div> <div class=\"modal-footer\"> <form action=\"\" @submit.prevent=\"deleteMero(selectedEvent.id)\"> <button type=\"submit\" class=\"btn btn-danger\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </form> <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\u0417\u0430\u043a\u0440\u044b\u0442\u044c</button> </div> </div> </div> </div> <div class=\"modal fade\" ref=\"eventCreate\" tabindex=\"-1\" aria-labelledby=\"eventCreateLabel\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h1 class=\"modal-title fs-5\" id=\"eventCreateLabel\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u0431\u044b\u0442\u0438\u0435</h1> <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div class=\"modal-body\"> <form @submit.prevent=\"submitForm\" class=\"d-flex flex-column\" ref=\"eventForm\"> <input type=\"text\" v-model=\"form.title\" class=\"my-1\"> <input type=\"date\" v-model=\"form.date\" class=\"my-1\"> <textarea cols=\"30\" rows=\"10\" v-model=\"form.description\" class=\"my-1\" /> <button type=\"submit\" class=\"btn btn-primary\">\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c</button> </form> </div> </div> </div> </div> </base-layout> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import { Modal } from 'bootstrap' import useCalendarEventsStore from '@/stores/calendarEvents' import BaseLayout from '@/layouts/BaseLayout.vue' import HeaderBlock from '@/components/Header.vue' import FullCalendar from '@/components/FullCalendar.vue' import FooterBlock from '@/components/Footer.vue' export default { name: 'CalendarPage', components: { BaseLayout, FullCalendar, HeaderBlock, FooterBlock}, computed: { ...mapState(useCalendarEventsStore, { calendarEvents: 'calendarEvents', selectedEvent: (state) => { return { ...state.selectedEvent, formattedDate: () => { const date = state.selectedEvent.date return new Date(date).toLocaleDateString('ru-RU') } } } }) }, data() { return { form: { title: '', description: '', date: '' }, eventCreateModal: null } }, methods: { ...mapActions(useCalendarEventsStore, ['loadCalendarEvents', 'loadEventById', 'createEvent', 'deleteEvent']), handleEventChange(payload) { console.log('event change', payload) }, handleDateClick(payload) { console.log('date clicked', payload) const { dateStr } = payload this.form.date = dateStr this.eventCreateModal = new Modal(this.$refs.eventCreate) this.eventCreateModal.show() }, async handleEventClick(payload) { await this.loadEventById(payload.event._def.publicId) const eventModal = new Modal(this.$refs.detailEvent) eventModal.show() }, async submitForm() { await this.createEvent(this.form) this.$refs.eventForm.reset() this.eventCreateModal.hide() await this.loadCalendarEvents() }, async deleteMero(id) { this.deleteEvent(id); location.reload(); } }, mounted() { this.loadCalendarEvents() } } </script> \u0412\u044b\u0432\u043e\u0434 \u041c\u044b \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043b\u0438 \u043d\u0430\u0448 \u0441\u0430\u0439\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 Vue.JS \u0438 \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0438\u043c","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21164"},{"location":"lr4/#4-vuejs","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js."},{"location":"lr4/#_1","text":"\u041c\u0438\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u043d\u0435\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u0441\u0430\u0439\u0442 \u043d\u0430 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Vue.JS. \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: 1 \u0414\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0451\u043d \u0440\u043e\u0443\u0442\u0435\u0440 2 \u0414\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0432\u043d\u0435\u0448\u043d\u0438\u043c API 3 \u0420\u0430\u0437\u0443\u043c\u043d\u043e\u0435 \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b router/index.js \u0420\u043e\u0443\u0442\u0435\u0440 \u0438 \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043d\u0430\u043c url\u044b \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0439\u0442\u0438 import { createRouter , createWebHistory } from 'vue-router' import MainView from '@/views/MainView.vue' import CalendarView from '@/views/CalendarView.vue' import PersonalView from '@/views/PersonalView.vue' import EntryView from '@/views/EntryView.vue' import RegistrationView from '@/views/RegistrationView.vue' import EventView from '@/views/EventView.vue' const router = createRouter ({ history : createWebHistory ( import . meta . env . BASE_URL ), routes : [ { path : '/' , name : 'home' , component : MainView }, { path : '/calendar/' , name : 'calendar' , component : CalendarView }, { path : '/personal/' , name : 'personal' , component : PersonalView }, { path : '/entry/' , name : 'entry' , component : EntryView }, { path : '/registration/' , name : 'registration' , component : RegistrationView }, { path : '/event/' , name : 'event' , component : EventView }, ] }) export default router","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043a\u0443\u0440\u0441\u0430 \u043f\u043e \u0424\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438"},{"location":"lr4/#_2","text":"Card.vue \u0428\u0430\u0431\u043b\u043e\u043d \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0438 \u0432 mainPage <template> <img :src=\"src\" class=\"card-img-top\" width=\"262\" :alt=\"description\" style=\"height: 11rem;\"> <div class=\"card-body\"> <h3 class=\"card-title\">{{ title }}</h3> <p class=\"card-text\">{{ description }}</p> <p class=\"card-data\">{{ date }}</p> <a href=\"./event.html\" class=\"btn btn-primary\">\u041d\u0430 \u0441\u0430\u0439\u0442 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</a> <form action=\"\" @submit.prevent=\"subscribe(id)\"> <button type=\"submit\" class=\"btn btn-primary mt-3\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"> <svg class=\"icon-main\"><use xlink:href=\"#register-icon\"></use></svg> \u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f </button> </form> </div> </template> <script> import { mapActions, mapState } from \"pinia\"; import useUserEventsStore from \"@/stores/userEvents.js\" export default { name: 'CardNote', computed: { ...mapState(useUserEventsStore, ['userEvents']), }, props: { title: { type: String, required: true }, description: { type: String, required: true }, date: { type: String, required: true }, src: { type: String, required: true }, id: { type: Number, required: true }, }, methods: { ...mapActions(useUserEventsStore, ['addUserEvents']), async subscribe(id) { const userEvents = { \"userId\": JSON.parse(localStorage.user).id, \"eventId\": id } console.log(userEvents) const response = await this.addUserEvents(userEvents); console.log(response) } } } </script> PersonalCard.vue \u0428\u0430\u0431\u043b\u043e\u043d \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0434\u043b\u044f \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 <template> <img :src=\"src\" class=\"card-img-top\" width=\"262\" :alt=\"description\" style=\"height: 11rem;\"> <div class=\"card-body\"> <h3 class=\"card-title\">{{ title }}</h3> <p class=\"card-text\">{{ description }}</p> <p class=\"card-data\">{{ date }}</p> <form action=\"\" @submit.prevent=\"deleteCard(primaryId)\"> <button type=\"submit\" class=\"btn btn-danger mt-3\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"> \u041e\u0442\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f </button> </form> </div> </template> <script> import { mapActions, mapState } from \"pinia\"; import useUserEventsStore from \"@/stores/userEvents.js\" export default { name: 'PersonalCard', computed: { ...mapState(useUserEventsStore, ['userEvents']), }, methods: { ...mapActions(useUserEventsStore, ['addUserEvents', 'deleteCardById']), async deleteCard(id) { this.deleteCardById(id) location.reload() } }, props: { title: { type: String, required: true }, description: { type: String, required: true }, date: { type: String, required: true }, src: { type: String, required: true }, primaryId: { type: Number, required: true }, }, } </script> Entry.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u0432\u0445\u043e\u0434\u0430 <template> <main class=\"container-xl p-5 mb-5\"> <form class=\"d-flex-column\" @submit.prevent=\"login\"> <h1 class=\"row mb-5 justify-content-center\">\u0412\u0445\u043e\u0434</h1> <div class=\"row mb-3 justify-content-center\"> <label for=\"email\" class=\"col-sm-1 col-form-label\">\u041f\u043e\u0447\u0442\u0430</label> <div class=\"col-sm-3 col-md-4\"> <input type=\"text\" class=\"form-control\" v-model=\"form.email\" name=\"email\" id=\"email\"> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"password\" class=\"col-sm-1 col-form-label\">\u041f\u0430\u0440\u043e\u043b\u044c</label> <div class=\"col-sm-3 col-md-4\"> <input type=\"password\" class=\"form-control\" v-model=\"form.password\" name=\"password\" id=\"password\"> </div> </div> <div class=\"row justify-content-center\"> <div class=\"col-sm-4 col-md-5\"> <button type=\"submit\" class=\"btn btn-primary\" :to=\"{ path: '/' }\">\u0412\u043e\u0439\u0442\u0438</button> <a class=\"btn btn-primary\" href=\"./reqistration.html\" role=\"button\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</a> </div> </div> </form> </main> </template> <script> import { mapActions, mapState } from 'pinia' import router from '@/router' import useLoginStore from '../stores/login' export default { name: 'EntryBlock', data() { return { form: { email: \"\", password: \"\" } }; }, methods: { ...mapActions(useLoginStore, ['userLogin']), async login() { const response = await this.userLogin(this.form); const { accessToken, user } = response.data localStorage.accessToken = accessToken localStorage.user = JSON.stringify(user) localStorage.accessToken ? router.push('/') : router.push('') } } } </script> Registration.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 <template> <main class=\"container-xl p-5\"> <form class=\"d-flex-column\" @submit.prevent=\"register\"> <h1 class=\"row mb-5 justify-content-center\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</h1> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputName3\" class=\"col-sm-1 col-form-label\">\u0418\u043c\u044f</label> <div class=\"col-sm-3\"> <input type=\"text\" class=\"form-control\" v-model=\"form.firstname\" name=\"firstname\" id=\"inputName3\" placeholder=\"\u0410\u043b\u0435\u043a\u0441\u0435\u0439\" required> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputSurname3\" class=\"col-sm-1 col-form-label\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f</label> <div class=\"col-sm-3\"> <input type=\"text\" class=\"form-control\" v-model=\"form.lastname\" name=\"lastname\" id=\"inputSurname3\" placeholder=\"\u041a\u043e\u043d\u0434\u0440\u0430\u0442\u044c\u0435\u0432\" required> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputEmail3\" class=\"col-sm-1 col-form-label\">\u041f\u043e\u0447\u0442\u0430</label> <div class=\"col-sm-3\"> <input type=\"email\" class=\"form-control\" v-model=\"form.email\" name=\"email\" id=\"inputEmail3\" placeholder=\"example@email.com\" required> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputLogin3\" class=\"col-sm-1 col-form-label\">\u041b\u043e\u0433\u0438\u043d</label> <div class=\"col-sm-3\"> <input type=\"text\" class=\"form-control\" v-model=\"form.login\" name=\"login\" id=\"inputLogin3\" placeholder=\"9Anpanman\" required> </div> </div> <div class=\"row mb-3 justify-content-center\"> <label for=\"inputPassword3\" class=\"col-sm-1 col-form-label\">\u041f\u0430\u0440\u043e\u043b\u044c</label> <div class=\"col-sm-3\"> <input type=\"password\" class=\"form-control\" v-model=\"form.password\" name=\"password\" id=\"inputPassword3\" required> </div> </div> <div class=\"row justify-content-center\"> <div class=\"col-sm-4\"> <button type=\"submit\" class=\"btn btn-primary\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</button> </div> </div> </form> </main> </template> <script> import { mapActions, mapState } from 'pinia' import router from '@/router' import useRegisterStore from '../stores/register' export default { name: 'RegistrationBlock', data() { return { form: { firstname: \"\", lastname: \"\", email: \"\", password: \"\", login: \"\" } }; }, methods: { ...mapActions(useRegisterStore, ['userRegister']), async register() { const response = await this.userRegister(this.form); const { accessToken, user } = response.data localStorage.accessToken = accessToken localStorage.user = JSON.stringify(user) localStorage.accessToken ? router.push('/') : router.push('') } } } </script> Header.vue \u0425\u0435\u0434\u0435\u0440 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0438 <template> <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" display=\"none\"> <symbol id=\"personal-area\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"> <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-5 6s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zM11 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5zm.5 2.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1h-4zm2 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2zm0 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2z\"/> </symbol> <symbol id=\"calendar\" viewBox=\"0 0 16 16\"> <path d=\"M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z\"/> <path d=\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z\"/> </symbol> <symbol id=\"exit-door\" viewBox=\"0 0 16 16\"> <path fill-rule=\"evenodd\" d=\"M6 12.5a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-1 0v-2A1.5 1.5 0 0 1 6.5 2h8A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-8A1.5 1.5 0 0 1 5 12.5v-2a.5.5 0 0 1 1 0v2z\"/> <path fill-rule=\"evenodd\" d=\"M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3z\"/> </symbol> <symbol id=\"entry-door\" viewBox=\"0 0 16 16\"> <path fill-rule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z\"/> <path fill-rule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"/> </symbol> <symbol id=\"main-icon\" viewBox=\"0 0 16 16\"> <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\"/> </symbol> <symbol id=\"register-icon\" viewBox=\"0 0 16 16\"> <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"/> </symbol> </svg> <header class=\"container-fluid colors\"> <nav class=\"navbar navbar-expand-md d-flex justify-content-between\"> <div> <a class=\"colors navbar-brand text-color fs-4 p-2\" href=\"#\" @click=\"$router.push('/')\">\u0413\u043b\u0430\u0432\u043d\u0430\u044f <svg class=\"icon-main\"><use xlink:href=\"#main-icon\"></use></svg></a> <a class=\"colors navbar-brand text-color fs-6 p-2\" href=\"#\" @click=\"$router.push('/calendar/')\">\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c <svg class=\"icon-main\"><use xlink:href=\"#calendar\"></use></svg></a> </div> <div> <button class=\"colors navbar-brand text-color fs-6\" id=\"entry\" @click=\"$router.push('/entry/')\">\u0412\u0445\u043e\u0434 <svg class=\"icon-main\"><use xlink:href=\"#entry-door\"></use></svg></button> <button class=\"colors navbar-brand text-color fs-6 button-logout\" id=\"exit\" @click=\"logout\">\u0412\u044b\u0445\u043e\u0434 <svg class=\"icon-main\"><use xlink:href=\"#exit-door\"></use></svg></button> <button class=\"colors navbar-brand text-color fs-6\" id=\"register\" @click=\"$router.push('/registration/')\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f <svg class=\"icon-main\"><use xlink:href=\"#register-icon\"></use></svg></button> <button class=\"colors navbar-brand text-color fs-5 p-2\" id=\"lc\" @click=\"$router.push('/personal/')\"> \u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 <svg class=\"icon-main\"> <use class=\"icon-main\" xlink:href=\"#personal-area\"></use> </svg> </button> </div> </nav> </header> </template> <script> export default { name: 'HeaderBlock', methods: { check() { const entryButton = document.querySelector('#entry'); const registerButton = document.querySelector('#register'); const exitButton = document.querySelector('#exit'); if (localStorage.accessToken) { entryButton.classList.add('d-none'); registerButton.classList.add('d-none'); exitButton.classList.remove('d-none'); } else { entryButton.classList.remove('d-none'); registerButton.classList.remove('d-none'); exitButton.classList.add('d-none'); } }, logout() { localStorage.clear(); document.querySelector('#entry').classList.remove('d-none'); document.querySelector('#register').classList.remove('d-none'); document.querySelector('#exit').classList.add('d-none'); } }, mounted() { this.check() } } </script> Footer.vue \u0424\u0443\u0442\u0435\u0440 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b <template> <footer class=\"container-fluid pt-5 colors\"> <div class=\"row justify-content-between p-2\"> <div class=\"col-2 text-color\"> <h3>\u0412\u0430\u0448 \u0430\u043a\u043a\u0430\u0443\u043d\u0442</h3> <ul class=\"nav flex-column\"> <li class=\"nav-item mb-2\"><a href=\"./personal-area.html\" class=\"nav-link p-0 text-color\">\u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442</a></li> <li class=\"nav-item mb-2\"><a href=\"./entry.html\" class=\"nav-link p-0 text-color\">\u0412\u0445\u043e\u0434</a></li> <li class=\"nav-item mb-2\"><a href=\"./reqistration.html\" class=\"nav-link p-0 text-color\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a></li> </ul> </div> <div class=\"col-2 text-color\"> <h3>\u041d\u0430\u0439\u0442\u0438</h3> <ul class=\"nav flex-column\"> <li class=\"nav-item mb-2\"><a href=\"./calendar.html\" class=\"nav-link p-0 text-color\">\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c</a></li> <li class=\"nav-item mb-2\"><a href=\"#\" class=\"nav-link p-0 text-color\">\u041f\u043e\u0438\u0441\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439</a></li> </ul> </div> <div class=\"col-2 text-color\"> <h3>\u041e \u043d\u0430\u0441</h3> <ul class=\"nav flex-column\"> <li class=\"nav-item mb-2\"><a href=\"#\" class=\"nav-link p-0 text-color\">\u0412\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u0435</a></li> <li class=\"nav-item mb-2\"><a href=\"#\" class=\"nav-link p-0 text-color\">\u0422\u0435\u043b\u0435\u0433\u0440\u0430\u043c</a></li> </ul> </div> <div class=\"col-4 offset-1\"> <form> <h3 class=\"text-color\">\u041f\u043e\u0434\u043f\u0438\u0448\u0438\u0441\u044c \u043d\u0430 \u043d\u0430\u0441, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u0438\u0447\u0435\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e\u0433\u043e</h3> <div class=\"d-flex w-100 gap-2\"> <label for=\"newsletter1\" class=\"visually-hidden\">\u0412\u0430\u0448\u0430 \u043f\u043e\u0447\u0442\u0430</label> <input id=\"newsletter1\" type=\"text\" class=\"form-control\" placeholder=\"example@email.com\"> <button class=\"btn btn-primary\" type=\"button\">\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f</button> </div> </form> </div> </div> <div class=\"d-flex justify-content-between py-4 my-4 mb-0 border-top text-color\"> <p>&copy 2022, \u041a\u043e\u043d\u0434\u0440\u0430\u0442\u044c\u0435\u0432 \u0410\u043b\u0435\u043a\u0441\u0435\u0439</p> </div> </footer> </template> <script> export default{ name: 'FooterBlock', } </script> Main.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b <template> <svg display=\"none\"> <symbol id=\"search-icon\" viewBox=\"0 0 16 16\"> <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/> </symbol> </svg> <main class=\"container-fluid background-main\"> <section class=\"row row-cols-2 pt-5\"> <div class=\"d-flex flex-column justify-content-center align-items-end col-5\"> <h1 class=\"w-75 h1 pb-3 text-color\">\u0421\u043e\u0431\u044b\u0442\u0438\u044f \u043e\u0431\u044c\u0435\u0434\u0438\u043d\u044f\u044e\u0442</h1> <p class=\"w-75 pt-6 text-color\">\u041f\u043e\u0441\u0435\u0449\u0430\u0439\u0442\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438 \u0438 \u043b\u0435\u043a\u0446\u0438\u0438, \u0445\u043e\u0434\u0438\u0442\u0435 \u043d\u0430 \u0432\u044b\u0441\u0442\u0430\u0432\u043a\u0438 \u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442\u044b, \u0437\u0430\u043d\u0438\u043c\u0430\u0439\u0442\u0435\u0441\u044c \u0441\u0430\u043c\u043e\u0440\u0430\u0437\u0432\u0438\u0442\u0438\u0435\u043c \u0438 \u0438\u0449\u0438\u0442\u0435 \u0435\u0434\u0438\u043d\u043e\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u0438\u043a\u043e\u0432</p> </div> <img class=\"w-50\" src=\"../assets/image/people.png\" alt=\"\u0420\u0430\u0434\u0443\u044e\u0449\u0438\u0435\u0441\u044f \u043b\u044e\u0434\u0438\"> </section> <section class=\"d-flex flex-column align-items-center pt-5\"> <h2 class=\"h2 mb-4 text-color\">\u0410\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</h2> <div class=\"d-flex justify-content-center m-0\"> <p class=\"fs-5 pe-3 text-color\">\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</p> <div class=\"dropdown me-3\"> <select class=\"form-select-sm event-type\" aria-label=\".form-select-lg example\"> <option value=\"ALL\">\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435, \u0447\u0435\u043c \u0445\u043e\u0442\u0438\u0442\u0435 \u0437\u0430\u043d\u044f\u0442\u044c\u0441\u044f</option> <option value=\"\u0421\u043f\u043e\u0440\u0442\">\u0421\u043f\u043e\u0440\u0442</option> <option value=\"\u041c\u0443\u0437\u044b\u043a\u0430\">\u041c\u0443\u0437\u044b\u043a\u0430</option> </select> </div> <div class=\"dropdown me-3\"> <select class=\"form-select-sm city-type\" aria-label=\".form-select-lg example\"> <option value=\"ALL\">\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0433\u043e\u0440\u043e\u0434</option> <option value=\"\u041c\u043e\u0441\u043a\u0432\u0430\">\u041c\u043e\u0441\u043a\u0432\u0430</option> <option value=\"\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433\">\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433</option> </select> </div> <form class=\"search-form d-flex justify-content-end col-12 col-sm-2 col-lg-4 col-xl-6\" @submit.prevent=\"filter\"> <button type=\"submit\" id=\"search\" class=\"btn btn-info btn-sm\" style=\"background-color:#d2cb60; border: 1px solid #d2cb60;\"> \u041f\u043e\u0438\u0441\u043a <svg class=\"icon-main\"><use xlink:href=\"#search-icon\"></use></svg> </button> </form> </div> <div class=\"row justify-content-center pt-5\"> <div class=\"card me-4 card-colors background text-color mb-3\" style=\"width: 18rem;\" data-event-id=\"{{ id }}\" v-for=\"card in filteredCards\" :key=\"card.id\"> <card-note :title=\"card.title\" :src=\"card.src\" :description=\"card.description\" :date=\"card.date\" :id=\"card.id\"></card-note> </div> </div> </section> <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h3 class=\"modal-title\" id=\"exampleModalLabel\">\u0412\u044b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b</h3> <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div class=\"modal-body\"> \u0416\u0434\u0435\u043c \u0432\u0430\u0441 \u043d\u0430 \u043d\u0430\u0448\u0435\u043c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u0441 \u0445\u043e\u0440\u043e\u0448\u0438\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435\u043c </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\u0417\u0430\u043a\u0440\u044b\u0442\u044c</button> </div> </div> </div> </div> </main> </template> <script> import { mapActions, mapState } from \"pinia\"; import useCardsStore from \"@/stores/cards.js\" import CardNote from \"@/components/Card.vue\" export default { name: 'MainBlock', components: { CardNote }, computed: { ...mapState(useCardsStore, ['cards']), filteredCards() { if (this.selectedCards.length) { return this.selectedCards; } else { return this.cards } } }, methods: { ...mapActions(useCardsStore, ['loadCards']), async filter() { const eventT = document.querySelector('.event-type') const cityT = document.querySelector('.city-type') this.selectedCards = [] console.log(eventT.value, cityT.value) this.cards.forEach((card) => { if ((eventT.value === card.mero && cityT.value === card.city) || (eventT.value === \"ALL\" && cityT.value === card.city) || (eventT.value === card.mero && cityT.value === \"ALL\")) { this.selectedCards.push(card); } }) } }, data() { return { selectedCards: [] } }, mounted() { this.loadCards(); } } </script> Personal.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 <template> <main class=\"container-fluid background-main\"> <section class=\"pt-5 pb-5\"> <div class=\"d-flex flex-column align-items-center pt-5 pb-5\"> <div class=\"d-flex flex-column align-items-center\"> <h1 class=\"h2 p-0 mb-2 text-color\">\u0412\u0430\u0448 \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442</h1> <p class=\"p-0 m-2 text-color\">\u0412\u0430\u0448\u0438 \u0437\u0430\u043f\u0438\u0441\u0438</p> <div class=\"row justify-content-center pt-5 pb-5\"> <div class=\"card me-4 card-colors background text-color mb-3\" style=\"width: 18rem;\" data-event-id=\"{{ id }}\" v-for=\"card in personalCards\" :key=\"card.id\"> <personal-card :title=\"card.title\" :src=\"card.src\" :description=\"card.description\" :date=\"card.date\" :primaryId=\"card.primaryId\"></personal-card> </div> </div> </div> <div class=\"row justify-content-center\" id=\"container\"> <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"exampleModalLabel\">\u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435</h2> <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div class=\"modal-body\"> \u0412\u044b \u0431\u044b\u043b\u0438 \u043e\u0442\u043f\u0438\u0441\u0430\u043d\u044b \u043e\u0442 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\u0417\u0430\u043a\u0440\u044b\u0442\u044c</button> </div> </div> </div> </div> </div> </div> </section> </main> </template> <script> import { mapActions, mapState } from \"pinia\"; import useCardsStore from \"@/stores/cards.js\" import useUserEventsStore from \"@/stores/userEvents.js\" import PersonalCard from \"@/components/PersonalCard.vue\" export default { name: 'PersonalBlock', components: { PersonalCard }, computed: { ...mapState(useUserEventsStore, ['userEvents']), ...mapState(useCardsStore, ['personalCards']), }, methods: { ...mapActions(useUserEventsStore, ['getUserEventsById']), ...mapActions(useCardsStore, ['loadCardById', 'doClear']), async loadPage() { const response = await this.getUserEventsById(JSON.parse(localStorage.user).id); const result = Array.from(response.data); this.doClear(); result.forEach((item) => { this.loadCardById(item.eventId, item.id) }) } }, mounted() { this.loadPage(); } } </script> FullCalendar.vue \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f <template> <full-calendar :options=\"calendarOptions\" /> </template> <script> import FullCalendar from '@fullcalendar/vue3' import dayGridPlugin from '@fullcalendar/daygrid' import interactionPlugin from '@fullcalendar/interaction' const DEFAULT_OPTIONS = { plugins: [ dayGridPlugin, interactionPlugin ], initialView: 'dayGridMonth', editable: true } export default { components: { FullCalendar }, props: { options: { type: Object, default: DEFAULT_OPTIONS } }, computed: { calendarOptions() { return { ...DEFAULT_OPTIONS, ...this.options } } } } </script> <style> .fc-day { cursor: pointer; } </style>","title":"\u0414\u0430\u043b\u044c\u0448\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0441\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u043d\u0430\u0448\u0435\u0433\u043e \u0441\u0430\u0439\u0442\u0430"},{"location":"lr4/#api","text":"index.js \u0424\u0430\u0439\u043b \u0441 \u043e\u0431\u044c\u044f\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0432\u0441\u0435\u0445 API import instance from \"@/api/instance.js\" import CardApi from \"@/api/cards.js\" import CalendarEventsApi from \"@/api/calendarEvents\" import LoginApi from \"@/api/login\" ; import RegisterApi from \"@/api/register\" ; import UserEventsApi from \"@/api/userEvents\" ; const cardApi = new CardApi ( instance ); const calendarEventsApi = new CalendarEventsApi ( instance ); const loginApi = new LoginApi ( instance ); const registerApi = new RegisterApi ( instance ); const userEventsApi = new UserEventsApi ( instance ); export { cardApi , calendarEventsApi , loginApi , registerApi , userEventsApi } instance.js import axios from 'axios' const apiURL = 'http://localhost:3000' const instance = axios . create ({ baseURL : apiURL }) export default instance cards.js API \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a export default class CardApi { constructor ( instance ) { this . API = instance } getAll = async () => { return this . API ({ url : '/events' }) } getById = async ( id ) => { return this . API ({ url : `/events/ ${ id } ` }) } } calendarEvents.js API \u0434\u043b\u044f \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f class CalendarEventsApi { constructor ( instance ) { this . API = instance } getAll = async () => { return this . API ({ url : '/calendarEvents' }) } getById = async ( id ) => { return this . API ({ url : `/calendarEvents/ ${ id } ` }) } deleteEv = async ( id ) => { return this . API ({ url : `/calendarEvents/ ${ id } ` , method : 'DELETE' }) } create = async ( data ) => { return this . API ({ url : '/calendarEvents' , method : 'POST' , data , headers : { 'Content-Type' : 'application/json' } }) } } export default CalendarEventsApi login.js API \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043d\u0430 export default class LoginApi { constructor ( instance ) { this . API = instance } userLogin = async ( data ) => { return this . API ({ method : 'POST' , url : '/login' , data , headers : { 'Content-Type' : 'application/json' } }) } } register.js API \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 export default class RegisterApi { constructor ( instance ) { this . API = instance } userRegister = async ( data ) => { return this . API ({ method : 'POST' , url : '/register' , data , headers : { 'Content-Type' : 'application/json' } }) } } userEvents.js API \u0434\u043b\u044f userEvents export default class UserEventsApi { constructor ( instance ) { this . API = instance } getAll = async () => { return this . API ({ url : '/userEvents' }) } getById = async ( id ) => { return this . API ({ url : `/userEvents?userId= ${ id } ` }) } deleteById = async ( id ) => { return this . API ({ url : `/userEvents/ ${ id } ` , method : 'DELETE' , headers : { 'Content-Type' : 'application/json' } }) } createUserEvent = async ( data ) => { return this . API ({ url : '/userEvents' , method : 'POST' , data , headers : { 'Content-Type' : 'application/json' } }) } }","title":"\u0414\u0430\u043b\u044c\u0448\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0441\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 API \u0432 \u043d\u0430\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u0435"},{"location":"lr4/#stores","text":"index.js \u041e\u0431\u0449\u0438\u0439 store \u0441 pinia import { persist } from 'pinia-persists' import { createPinia } from 'pinia' const pinia = createPinia () pinia . use ( persist ()) export default pinia cards.js import { defineStore } from 'pinia' import { cardApi } from '@/api' const useCardsStore = defineStore ( 'cards' , { state : () => ({ cards : [], personalCards : [] }), actions : { async loadCards () { const response = await cardApi . getAll (); this . cards = response . data ; return response ; }, async loadCardById ( eventId , id ) { const response = await cardApi . getById ( eventId ); response . data . primaryId = id ; this . personalCards . push ( response . data ) return response }, async doClear () { this . personalCards = [] } } }) export default useCardsStore login.js store \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043d\u0430 import { defineStore } from 'pinia' import { loginApi } from '@/api' const useLoginStore = defineStore ( 'users' , { state : () => ({ users : [] }), actions : { async userLogin ( data ) { const response = await loginApi . userLogin ( data ) this . users = response . data return response } } }) export default useLoginStore register.js store \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 import { defineStore } from 'pinia' import { registerApi } from '@/api' const useRegisterStore = defineStore ( 'users' , { state : () => ({ users : [] }), actions : { async userRegister ( data ) { const response = await registerApi . userRegister ( data ) this . users = response . data return response } } }) export default useRegisterStore usrEvents.js store \u0434\u043b\u044f userEvents import { defineStore } from 'pinia' import { userEventsApi } from '@/api' const useUserEventsStore = defineStore ( 'userEvents' , { state : () => ({ userEvents : [] }), actions : { async getUserEventsById ( id ) { const response = await userEventsApi . getById ( id ) return response }, async addUserEvents ( data ) { const response = await userEventsApi . createUserEvent ( data ) this . userEvents = response . data return response }, async deleteCardById ( id ) { const response = await userEventsApi . deleteById ( id ); return response } } }) export default useUserEventsStore calendarEvents.js store \u0434\u043b\u044f calendarEvents import { defineStore } from 'pinia' import { calendarEventsApi , cardApi } from '@/api' const useCalendarEventsStore = defineStore ( 'calendarEvents' , { state : () => ({ calendarEvents : [], selectedEvent : { title : '' , date : '' , description : '' , id : \"\" } }), actions : { async loadCalendarEvents () { const response = await calendarEventsApi . getAll (); const response2 = await cardApi . getAll (); const jsonResponse = Array . from ( response2 . data ); this . calendarEvents = response . data response2 . data . forEach (( item ) => { this . calendarEvents . push ( item ) }) console . log ( this . calendarEvents ) return response }, async loadEventById ( id ) { this . selectedEvent = { title : '' , date : '' , description : '' , id : '' } const response = await calendarEventsApi . getById ( id ) // const response = await cardApi.getById(id) this . selectedEvent = response . data return response }, async createEvent ( data ) { const response = await calendarEventsApi . create ( data ) return response }, async deleteEvent ( id ) { const response = await calendarEventsApi . deleteEv ( id ) return response } } }) export default useCalendarEventsStore","title":"\u0412\u0441\u0435 stores \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435"},{"location":"lr4/#views","text":"EntryView.vue \u0421\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 <template> <header-block /> <entry-block /> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import useLoginStore from '../stores/login' import HeaderBlock from '../components/Header.vue' import EntryBlock from '../components/Entry.vue' import FooterBlock from '../components/Footer.vue' export default{ name: 'EntryPage', components: { HeaderBlock, EntryBlock, FooterBlock }, computed: { ...mapState(useLoginStore, ['users']) } } </script> RegistrationView.vue \u0421\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f <template> <header-block /> <registration-block /> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import useRegisterStore from '../stores/register' import HeaderBlock from '../components/Header.vue' import RegistrationBlock from '../components/Registration.vue' import FooterBlock from '../components/Footer.vue' export default{ name: 'RegistrationPage', components: { HeaderBlock, RegistrationBlock, FooterBlock }, computed: { ...mapState(useRegisterStore, ['users']) } } </script> MainView.vue \u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 <template> <header-block /> <main-block /> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import useCardsStore from '@/stores/cards' import HeaderBlock from '@/components/Header.vue' import MainBlock from '@/components/Main.vue' import FooterBlock from '@/components/Footer.vue' export default{ name: 'MainPage', components: { HeaderBlock, MainBlock, FooterBlock }, computed: { ...mapActions(useCardsStore, ['cards']) }, methods: { ...mapActions(useCardsStore, ['loadCards']), }, } </script> PersonalView.vue \u0421\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 <template> <header-block /> <personal-block /> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import HeaderBlock from '../components/Header.vue' import PersonalBlock from '../components/Personal.vue' import FooterBlock from '../components/Footer.vue' export default { name: 'PersonalPage', components: { HeaderBlock, PersonalBlock, FooterBlock } } </script> CalendarView.vue \u0421\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430 \u0441 \u043d\u0430\u0448\u0438\u043c \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435\u043c <template> <header-block /> <base-layout> <h1>\u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0441\u043e\u0431\u044b\u0442\u0438\u0439</h1> <full-calendar :options=\"{ events: calendarEvents, eventChange: handleEventChange, dateClick: handleDateClick, eventClick: handleEventClick }\" /> <!-- Modal --> <div class=\"modal fade\" ref=\"detailEvent\" tabindex=\"-1\" aria-labelledby=\"detailEventLabel\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h1 class=\"modal-title fs-5\" id=\"detailEventLabel\">{{ selectedEvent.title }}</h1> <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div class=\"modal-body\"> <p><strong>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:</strong> {{ selectedEvent.description }}</p> <p>{{ selectedEvent.formattedDate() }}</p> </div> <div class=\"modal-footer\"> <form action=\"\" @submit.prevent=\"deleteMero(selectedEvent.id)\"> <button type=\"submit\" class=\"btn btn-danger\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </form> <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\u0417\u0430\u043a\u0440\u044b\u0442\u044c</button> </div> </div> </div> </div> <div class=\"modal fade\" ref=\"eventCreate\" tabindex=\"-1\" aria-labelledby=\"eventCreateLabel\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h1 class=\"modal-title fs-5\" id=\"eventCreateLabel\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u0431\u044b\u0442\u0438\u0435</h1> <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div class=\"modal-body\"> <form @submit.prevent=\"submitForm\" class=\"d-flex flex-column\" ref=\"eventForm\"> <input type=\"text\" v-model=\"form.title\" class=\"my-1\"> <input type=\"date\" v-model=\"form.date\" class=\"my-1\"> <textarea cols=\"30\" rows=\"10\" v-model=\"form.description\" class=\"my-1\" /> <button type=\"submit\" class=\"btn btn-primary\">\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c</button> </form> </div> </div> </div> </div> </base-layout> <footer-block /> </template> <script> import { mapActions, mapState } from 'pinia' import { Modal } from 'bootstrap' import useCalendarEventsStore from '@/stores/calendarEvents' import BaseLayout from '@/layouts/BaseLayout.vue' import HeaderBlock from '@/components/Header.vue' import FullCalendar from '@/components/FullCalendar.vue' import FooterBlock from '@/components/Footer.vue' export default { name: 'CalendarPage', components: { BaseLayout, FullCalendar, HeaderBlock, FooterBlock}, computed: { ...mapState(useCalendarEventsStore, { calendarEvents: 'calendarEvents', selectedEvent: (state) => { return { ...state.selectedEvent, formattedDate: () => { const date = state.selectedEvent.date return new Date(date).toLocaleDateString('ru-RU') } } } }) }, data() { return { form: { title: '', description: '', date: '' }, eventCreateModal: null } }, methods: { ...mapActions(useCalendarEventsStore, ['loadCalendarEvents', 'loadEventById', 'createEvent', 'deleteEvent']), handleEventChange(payload) { console.log('event change', payload) }, handleDateClick(payload) { console.log('date clicked', payload) const { dateStr } = payload this.form.date = dateStr this.eventCreateModal = new Modal(this.$refs.eventCreate) this.eventCreateModal.show() }, async handleEventClick(payload) { await this.loadEventById(payload.event._def.publicId) const eventModal = new Modal(this.$refs.detailEvent) eventModal.show() }, async submitForm() { await this.createEvent(this.form) this.$refs.eventForm.reset() this.eventCreateModal.hide() await this.loadCalendarEvents() }, async deleteMero(id) { this.deleteEvent(id); location.reload(); } }, mounted() { this.loadCalendarEvents() } } </script>","title":"\u0412\u0441\u0435 \u043d\u0430\u0448\u0438 views, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0438"},{"location":"lr4/#_3","text":"\u041c\u044b \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043b\u0438 \u043d\u0430\u0448 \u0441\u0430\u0439\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 Vue.JS \u0438 \u043d\u0430\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043d\u0438\u043c","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"pr3_1/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1 Django \u0437\u0430\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.1 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. models.py - \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 from django.db import models from django.contrib.auth.models import AbstractUser from django.db import models # Create your models here. class CarOwner ( models . Model ): id_owner = models . IntegerField ( primary_key = True ) last_name = models . CharField ( max_length = 30 , null = False ) first_name = models . CharField ( max_length = 30 , null = False ) birth_day = models . DateField ( null = True ) class Car ( models . Model ): id_car = models . IntegerField ( primary_key = True ) state_number = models . CharField ( max_length = 15 , null = False ) mark_car = models . CharField ( max_length = 20 , null = False ) model_car = models . CharField ( max_length = 20 , null = False ) color = models . CharField ( max_length = 30 , null = False ) class Ownership ( models . Model ): id_owner_car = models . IntegerField ( primary_key = True ) id_owner = models . ForeignKey ( CarOwner , on_delete = models . CASCADE , related_name = 'owner' ) id_car = models . ForeignKey ( Car , on_delete = models . CASCADE , related_name = 'car' ) start_date = models . DateField () end_date = models . DateField ( null = True ) class DriverLicense ( models . Model ): id_license = models . IntegerField ( primary_key = True ) id_owner = models . ForeignKey ( CarOwner , on_delete = models . CASCADE , related_name = 'car_owner' ) license_number = models . CharField ( max_length = 10 , null = False ) type = models . CharField ( max_length = 10 , null = False ) date_of_license = models . DateField () \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u0438\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0438\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 \u0421\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c \u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.2 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435): \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430): \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435): \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.3 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435: \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438: \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1"},{"location":"pr3_1/#no31","text":"Django \u0437\u0430\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435.","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1"},{"location":"pr3_1/#311","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. models.py - \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 from django.db import models from django.contrib.auth.models import AbstractUser from django.db import models # Create your models here. class CarOwner ( models . Model ): id_owner = models . IntegerField ( primary_key = True ) last_name = models . CharField ( max_length = 30 , null = False ) first_name = models . CharField ( max_length = 30 , null = False ) birth_day = models . DateField ( null = True ) class Car ( models . Model ): id_car = models . IntegerField ( primary_key = True ) state_number = models . CharField ( max_length = 15 , null = False ) mark_car = models . CharField ( max_length = 20 , null = False ) model_car = models . CharField ( max_length = 20 , null = False ) color = models . CharField ( max_length = 30 , null = False ) class Ownership ( models . Model ): id_owner_car = models . IntegerField ( primary_key = True ) id_owner = models . ForeignKey ( CarOwner , on_delete = models . CASCADE , related_name = 'owner' ) id_car = models . ForeignKey ( Car , on_delete = models . CASCADE , related_name = 'car' ) start_date = models . DateField () end_date = models . DateField ( null = True ) class DriverLicense ( models . Model ): id_license = models . IntegerField ( primary_key = True ) id_owner = models . ForeignKey ( CarOwner , on_delete = models . CASCADE , related_name = 'car_owner' ) license_number = models . CharField ( max_length = 10 , null = False ) type = models . CharField ( max_length = 10 , null = False ) date_of_license = models . DateField ()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.1"},{"location":"pr3_1/#_1","text":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u0438\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0438\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 \u0421\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c \u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439"},{"location":"pr3_1/#312","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435): \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430): \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435):","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.2"},{"location":"pr3_1/#313","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435: \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438: \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.3"},{"location":"warrior/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0441\u0435\u0445 \u0432\u043e\u0438\u043d\u043e\u0432 URL : /api/warriors/ Method : GET Auth required : YES Permissions required : None Data constraints : {} Success Responses Code : 200 OK Content : {[]} { \"Warriors\" : [ { \"id\" : 1 , \"race\" : \"t\" , \"name\" : \"Petr2\" , \"level\" : 0 , \"profession\" : null , \"skill\" : [] }, { \"id\" : 2 , \"race\" : \"t\" , \"name\" : \"Petr\" , \"level\" : 0 , \"profession\" : null , \"skill\" : [] } ] }","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0441\u0435\u0445 \u0432\u043e\u0438\u043d\u043e\u0432"},{"location":"warrior/#_1","text":"URL : /api/warriors/ Method : GET Auth required : YES Permissions required : None Data constraints : {}","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0441\u0435\u0445 \u0432\u043e\u0438\u043d\u043e\u0432"},{"location":"warrior/#success-responses","text":"Code : 200 OK Content : {[]} { \"Warriors\" : [ { \"id\" : 1 , \"race\" : \"t\" , \"name\" : \"Petr2\" , \"level\" : 0 , \"profession\" : null , \"skill\" : [] }, { \"id\" : 2 , \"race\" : \"t\" , \"name\" : \"Petr\" , \"level\" : 0 , \"profession\" : null , \"skill\" : [] } ] }","title":"Success Responses"}]}