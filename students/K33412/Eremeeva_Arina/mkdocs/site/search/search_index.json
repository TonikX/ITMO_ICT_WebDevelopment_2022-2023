{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0440\u043e\u0432\u0430\u043d\u0438\u0435 2022-2023","text":""},{"location":"#k33412","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0415\u0440\u0435\u043c\u0435\u0435\u0432\u043e\u0439 \u0410\u0440\u0438\u043d\u044b, K33412","text":""},{"location":"lr1/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161","text":""},{"location":"lr1/#no1_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161","text":"<ul> <li> <p><code>server.py</code> <pre><code>import socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((\"127.0.0.1\", 14900))\nsock.listen(2)\nwhile True:\ntry: \ncon, addr = sock.accept()\ndata = con.recv(16384)\nudata = data.decode(\"utf-8\")\nprint(udata)\ncon.send(b\"Hello, client\")\nfinally:\nsock.close()\nbreak\n</code></pre></p> </li> <li> <p><code>client.py</code> <pre><code>import socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.connect((\"127.0.0.1\", 14900))\nsock.send(b\"Hello, server \\n\")\ntext=sock.recv(16384)\nudata=text.decode(\"utf-8\")\nprint(udata)\n</code></pre></p> </li> </ul>"},{"location":"lr1/#no2","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162","text":"<ul> <li> <p><code>server.py</code> <pre><code>import socket\nimport math\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((\"127.0.0.1\", 14900))\nsock.listen(2)\nwhile True:\ntry: \ncon, addr = sock.accept()\ns = con.recv(1024)\ns = s.decode(\"utf8\")\ns = s.split()\na = int(s[0])\nb = int(s[1])\nc = int(s[2])\nd = (pow(b, 2) - 4*a*c)\nif d == 0: \nx = (-b/(2*a))\ncon.send(b\"x = \" + str(x).encode(\"utf-8\"))\nelif d &lt; 0:\ncon.send(\"\u041d\u0435\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043a\u043e\u0440\u043d\u0435\u0439\".encode(\"utf-8\"))\nelif d &gt; 0:\nx1 = (- b - math.sqrt(d))/(2*a)\nx2 = (- b + math.sqrt(d))/(2*a)\ncon.send(b\"x1 = \" + str(x1).encode(\"utf-8\") + b\" x2 = \" + str(x2).encode(\"utf-8\"))\nfinally:\nsock.close()\nbreak\n</code></pre></p> </li> <li> <p><code>client.py</code> <pre><code>import socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\na = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 x^2:\")\nb = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 x:\")\nc = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0440\u0435\u0442\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442:\")\ns = a + \" \" + b + \" \" + c\nsock.connect((\"127.0.0.1\", 14900))\nsock.send(s.encode(\"utf-8\"))\ntext=sock.recv(16384)\nudata=text.decode(\"utf-8\")\nprint(udata)\n</code></pre></p> </li> </ul>"},{"location":"lr1/#no3","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163","text":"<ul> <li><code>server.py</code> <pre><code>import socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nhost = '127.0.0.1'\nport = 333\nsock.bind((host, port))\nsock.listen(5)\nwhile True:\nclient, addr = sock.accept()\nprint('\u041f\u043e\u043b\u0443\u0447\u0438\u043b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442:', addr)\nclient.recv(1024)\nresp_type = 'HTTP/1.0 200 OK\\n'\nresp_headers = 'Content-Type: text/html\\n\\n'\nresp_body = \"\"\"\n        &lt;html&gt;\n        &lt;body&gt;\n        &lt;h1&gt;Hello, client! It's a nice day to die&lt;/h1&gt;\n        &lt;/body&gt;\n    &lt;/html&gt;\n    \"\"\"\nresponse = resp_type + resp_headers + resp_body\nclient.send(response.encode('utf-8'))\nclient.close()\nbreak\n</code></pre></li> </ul>"},{"location":"lr1/#no4","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164","text":"<ul> <li> <p><code>server.py</code> <pre><code>import socket\nfrom threading import Thread\nhost = \"127.0.0.1\"\nport = 334\nclients = set()\nsock = socket.socket()\nsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nsock.bind((host, port))\nsock.listen(5)\ndef listen_for_client(cl):\nwhile True:\ntry:\nmessage = cl.recv(1024).decode()\nexcept Exception as e:\nprint(f\"[!] \u041e\u0448\u0438\u0431\u043a\u0430: {e}\")\nclients.remove(cl)\nelse:\nmessage = message.replace(\" \", \": \")\nfor client in clients:\nclient.send(message.encode())\nwhile True:\nclient, address = sock.accept()\nprint(f\"{address} \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d.\")\nclients.add(client)\nthread = Thread(target=listen_for_client, args=(client,))\nthread.daemon = True\nthread.start()\n</code></pre></p> </li> <li> <p><code>client.py</code> <pre><code>import socket\nimport random\nfrom threading import Thread\nhost = \"127.0.0.1\"\nport = 334 \nseparator_token = \" \"\nsock = socket.socket()\nsock.connect((host, port))\nprint(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a {host}:{port}\")\nname = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0451 \u0438\u043c\u044f: \")\ndef listen_for_messages():\nwhile True:\nmessage = sock.recv(1024).decode()\nprint(\"\\n\" + message)\nthread = Thread(target=listen_for_messages)\n#thread.daemon = True\nthread.start()\nwhile True:\ntext = input()\nif text.lower() == 'exit':\nbreak\ntext = f\"{name}{separator_token}{text}\"\nsock.send(text.encode())\nsock.close()\n</code></pre></p> </li> </ul>"},{"location":"lr1/#no5","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165","text":"<ul> <li> <p><code>server.py</code> <pre><code>import socket\nimport sys\nclass MyHTTPServer:\ndef __init__(self, host, port):\nself.host = host\nself.port = port\ndef serve_forever(self):\nconn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nconn.bind((self.host, self.port))\nconn.listen(10)\nwhile True:\nclient, address = conn.accept()\nself.serve_client(client)\ndef serve_client(self, client):\ntext = client.recv(16384)\ntext = text.decode('utf-8') # change\nurl, method, headers, body = self.parse_request(text)\nresp = self.handle_request(url, method, body)\nif resp:\nself.send_response(client, resp)\ndef parse_request(self, text):\ntext = text.replace('\\r', '')\nlines = text.split('\\n')\nmethod, url, protocol = lines[0].split()\ni = lines.index('')\nheaders = lines[1:i]\nbody = lines[-1]\n# exception\nreturn url, method, headers, body\ndef handle_request(self, url, method, body):\nresp = \"HTTP/1.1 200 OK\\n\\n\"\nerror = f\" 400\\n\\nErorr\"\nif method == 'GET' and url == '/':\nwith open('index.html', 'r') as f: #change\nresp += f.read()\nreturn resp\nelif Exception:\nreturn error\nif method == \"POST\" and url == '/':\nnewbody = body.split('&amp;')\nfor i in newbody:\nif i.split('=')[0] == 'subject':\nsubjects.append(i.split('=')[1])\nif i.split('=')[0] == 'mark':\nmarks.append(i.split('=')[1])\nresp += \"&lt;html&gt;&lt;head&gt;&lt;title&gt;Journal&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;table border=1&gt;\"\nfor s, m in zip(subjects, marks):\nresp += f\"&lt;tr&gt;&lt;td&gt;{s}&lt;/td&gt;&lt;td&gt;{m}&lt;/td&gt;&lt;/tr&gt;\"\nresp += \"&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;\"\nreturn resp\nelif Exception:\nreturn error\ndef send_response(self, clientsocket, resp):\nclientsocket.send(resp.encode('utf-8'))\nif __name__ == '__main__':\nhost = '127.0.0.1'\nport = 3000\nserv = MyHTTPServer(host, port)\nsubjects = []\nmarks = []\ntry:\nserv.serve_forever()\nexcept KeyboardInterrupt:\npass\n</code></pre></p> </li> <li> <p><code>index.html</code></p> </li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Journal&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form action=\"/\" method=\"post\"&gt;\n&lt;div&gt;\n&lt;label for=\"name\"&gt;Subject:&lt;/label&gt;\n&lt;input type=\"text\" id=\"name\" name=\"subject\"/&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;label for=\"mail\"&gt;Mark:&lt;/label&gt;\n&lt;input type=\"number\" id=\"mail\" name=\"mark\"/&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;input type=\"submit\"&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"lr1/#no5_1","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u21165:","text":"<ul> <li><code>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043f\u043e\u043b\u044f\u043c\u0438 \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0438 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438</code></li> </ul> <ul> <li><code>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438 \u0432\u0432\u043e\u0434\u0430</code></li> </ul>"},{"location":"lr2/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162","text":""},{"location":"lr2/#_1","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u0442\u0443\u0440\u0430\u0433\u0435\u043d\u0441\u0442\u0432\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u043f\u0435\u0440\u0438\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0442\u0443\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043e\u043f\u043b\u0430\u0442\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b:</p> <ul> <li>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. </li> <li>\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. </li> <li>\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u0442\u0443\u0440\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. </li> <li>\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. </li> <li>\u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c.</li> </ul> <p>\u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0431\u043e\u0442\u044b</p>"},{"location":"lr2/#_2","title":"\u0424\u0430\u0439\u043b\u044b","text":"<ul> <li> <p><code>models.py</code> \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432: \u0442\u0443\u0440\u0438\u0441\u0442, \u0442\u0443\u0440, \u0430\u0433\u0435\u043d\u0441\u0442\u0432\u043e, \u0441\u0442\u0440\u0430\u043d\u0430, \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439; \u0438 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438 <pre><code>from django.db import models\nfrom django.db.models.base import Model\nfrom django.db.models.deletion import CASCADE\nfrom django.contrib.auth.models import AbstractUser\nfrom django.contrib.auth import get_user_model\nclass Tourist(AbstractUser):\nusername = models.CharField(max_length=20, unique=True)\nfirst_name = models.CharField(max_length=20, null=True)\nlast_name = models.CharField(max_length=20, null=True)\npassword = models.CharField(max_length=100, null=True)\ndef __str__(self):\nreturn str(self.first_name)\nTourist = get_user_model()\nclass Agency(models.Model):\nname = models.CharField(max_length=20)\ndef __str__(self):\nreturn str(self.name)\nclass Country(models.Model):\nname = models.CharField(max_length=20)\ndef __str__(self):\nreturn str(self.name)\nclass Tour(models.Model):\nname = models.CharField(max_length=20)\ndescription = models.TextField()\nagency_id = models.ForeignKey(Agency, on_delete=CASCADE)\nbeginning_date = models.DateTimeField()\nending_date = models.DateTimeField()\ncountry = models.ForeignKey(Country, on_delete=CASCADE, null=True)\nprice = models.IntegerField(null=True)\ndef __str__(self):\nreturn str(self.name)\nclass Reservation(models.Model):\ntourist_id = models.ForeignKey(Tourist, on_delete=CASCADE)\ntour_id = models.ForeignKey(Tour, on_delete=CASCADE)\ndef __str__(self):\nreturn str(self.tour_id)\nclass Comment(models.Model):\ntourist_id = models.ForeignKey(Tourist, on_delete=CASCADE)\ntour_id = models.ForeignKey(Tour, on_delete=CASCADE)\ntitle = models.CharField(max_length=50, null=True)\ntext = models.TextField()\nbeginning_date = models.DateField(null=True)\nending_date = models.DateField(null=True)\nrating = (('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'))\nrate = models.CharField(max_length=30, choices=rating)\ndef __str__(self):\nreturn str(self.title)\n</code></pre></p> </li> <li> <p><code>views.py</code> \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 <pre><code>from typing import List\nfrom django.shortcuts import render, redirect\nfrom django.http import Http404, HttpResponse\nfrom django.contrib.auth import authenticate, login, logout\nfrom django.views.generic.list import ListView\nfrom django.views.generic.edit import CreateView, DeleteView, UpdateView\nfrom .models import Country, Tourist, Tour, Reservation, Comment\nfrom .forms import LoginForm, UserRegistrationForm\ndef show_tour(request, tour_id):\ntry:\ntour = Tour.objects.get(pk=tour_id)\ncomments = Comment.objects.filter(tour_id=tour)\nexcept Tour.DoesNotExist:\nraise Http404\nreturn render(request, 'tour.html', {'tour': tour, 'comments': comments})\nclass All_Tours(ListView):\nmodel = Tour\ntemplate_name = 'all_tour.html'\n@staticmethod\ndef all_countries():\nreturn Country.objects.all()\nclass All_Tours_Registered(ListView):\nmodel = Tour\ntemplate_name = 'tour_registered.html'\n@staticmethod\ndef all_countries():\nreturn Country.objects.all()\ndef tours_registered(request, tour_id):\ntry:\ntour = Tour.objects.get(pk=tour_id)\ncomments = Comment.objects.filter(tour_id=tour)\nexcept Tour.DoesNotExist:\nraise Http404\nreturn render(request, 'all_tour_registered.html', {'tour': tour, 'comments': comments})\ndef tour_filter_registered(request, pk):\ntours = Tour.objects.all().filter(country_id=pk)\nreturn render(request, 'filter.html', {'tours': tours})\ndef tour_filter(request, pk):\ntours = Tour.objects.all().filter(country_id=pk)\nreturn render(request, 'filter_nr.html', {'tours': tours})\nclass Tourist_Page(ListView):\nmodel = Tourist\ntemplate_name = 'tourist_page.html'\nclass All_Reservations(ListView):\nmodel = Reservation\ntemplate_name = 'all_reservation.html'\nclass Make_Reservation(CreateView):\nmodel = Reservation\ntemplate_name = 'reservation_create.html'\nfields = ['tourist_id', 'tour_id']\nsuccess_url = '/home/registered'\nclass Edit_Reservation(UpdateView):\nmodel = Reservation\ntemplate_name = 'reservation_edit.html'\nfields = ['tourist_id', 'tour_id']\nsuccess_url = '/home/registered'\nclass Delete_Reservation(DeleteView):\nmodel = Reservation\ntemplate_name = 'reservation_delete.html'\nsuccess_url = '/home/registered'\nclass All_Comments(ListView):\nmodel = Comment\ntemplate_name = 'all_comment.html'\nclass All_Comments_Registered(ListView):\nmodel = Comment\ntemplate_name = 'all_comment_registered.html'\nclass Leave_Comment(CreateView):\nmodel = Comment\ntemplate_name = 'comment.html'\nfields = ['tourist_id', 'tour_id', 'text', 'rate']\nsuccess_url = '/tour/registered'\nclass Home(ListView):\nmodel = Tour\ntemplate_name = 'home.html'\ndef register(request):\nif request.method == 'POST':\nuser_form = UserRegistrationForm(request.POST)\nif user_form.is_valid():\n# Create a new user object but avoid saving it yet\nnew_user = user_form.save(commit=False)\n# Set the chosen password\nnew_user.set_password(user_form.cleaned_data['password'])\n# Save the User object\nnew_user.save()\nreturn render(request, 'account/register_done.html', {'new_user': new_user})\nelse:\nuser_form = UserRegistrationForm()\nreturn render(request, 'account/register.html', {'user_form': user_form})\ndef user_login(request):\nif request.method == 'POST':\nform = LoginForm(request.POST)\nif form.is_valid():\ncd = form.cleaned_data\nuser = authenticate(username=cd['username'], password=cd['password'])\nif user is not None:\nif user.is_active:\nlogin(request, user)\nreturn redirect('/home/registered')\nelse:\nreturn HttpResponse('Disabled account')\nelse:\nreturn HttpResponse('Invalid login')\nelse:\nform = LoginForm()\nreturn render(request, 'account/login.html', {'form': form})\ndef logout_user(request):\nlogout(request)\nreturn redirect('/home/')\n</code></pre></p> </li> <li> <p><code>urls.py</code> \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a <pre><code>from django.urls import path\nfrom . import views\nurlpatterns = [\npath('tour/&lt;int:tour_id&gt;', views.show_tour),\npath('tour/registered/&lt;int:tour_id&gt;', views.tours_registered),\npath('tour/registered', views.All_Tours_Registered.as_view()),\npath('tour/', views.All_Tours.as_view()),\npath('reservation_create/', views.Make_Reservation.as_view()),\npath('tour/&lt;int:tour_id&gt;/new_comment', views.Leave_Comment.as_view()),\npath('reservation/&lt;int:pk&gt;/edit/', views.Edit_Reservation.as_view()),\npath('tour/&lt;int:tour_id&gt;/comments/', views.All_Comments.as_view()),\npath('reservation/&lt;int:pk&gt;/delete/', views.Delete_Reservation.as_view()),\npath('accounts/register/', views.register),\npath('accounts/login/', views.user_login),\npath('home/', views.Home.as_view()),\npath('home/registered/', views.Tourist_Page.as_view()),\npath('home/&lt;int:tourist_id&gt;/reservation', views.All_Reservations.as_view()),\npath('accounts/logout', views.logout_user),\npath('tour/registered/&lt;int:tour_id&gt;/comments/', views.All_Comments_Registered.as_view()),\npath('filter/registered/&lt;int:pk&gt;', views.tour_filter_registered),\npath('filter/&lt;int:pk&gt;', views.tour_filter)\n]\n</code></pre></p> </li> <li> <p><code>forms.py</code> \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u043e\u0440\u043c: \u0432\u0445\u043e\u0434, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0438 \u0437\u0430\u0431\u044b\u0442\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c <pre><code>from django import forms\nfrom .models import Tourist\nclass LoginForm(forms.Form):\nusername = forms.CharField()\npassword = forms.CharField(widget=forms.PasswordInput)\nclass UserRegistrationForm(forms.ModelForm):\npassword = forms.CharField(label='Password', widget=forms.PasswordInput)\npassword2 = forms.CharField(label='Repeat password', widget=forms.PasswordInput)\nclass Meta:\nmodel = Tourist\nfields = ('username', 'first_name', 'email')\ndef clean_password2(self):\ncd = self.cleaned_data\nif cd['password'] != cd['password2']:\nraise forms.ValidationError('Passwords don\\'t match.')\nreturn cd['password2']\n</code></pre></p> </li> </ul>"},{"location":"lr2/#_3","title":"\u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:","text":"<ul> <li><code>\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0434\u043b\u044f \u043d\u0435\u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</code></li> </ul> <ul> <li><code>\u0421\u0442\u0440\u0430\u043d\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438</code></li> </ul> <ul> <li><code>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0432\u0445\u043e\u0434\u0430</code></li> </ul> <ul> <li><code>\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</code></li> </ul> <ul> <li><code>\u0422\u0443\u0440\u044b \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439 \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c</code></li> </ul> <ul> <li><code>\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \"In the Heart of Asia\"</code></li> </ul>"},{"location":"lr3/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162","text":""},{"location":"lr3/#_1","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u0412\u0430\u0440\u0438\u0430\u043d\u0442: \u0432\u044b\u0441\u0442\u0430\u0432\u043a\u0430 \u0441\u043e\u0431\u0430\u043a. </p> <p>\u0417\u0430\u043f\u0440\u043e\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0434\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c: - \u041d\u0430 \u043a\u0430\u043a\u043e\u043c \u0440\u0438\u043d\u0433\u0435 \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u0435\u0442 \u0441\u043e\u0431\u0430\u043a\u0430 - \u041a\u0430\u043a\u0438\u043c\u0438 \u043f\u043e\u0440\u043e\u0434\u0430\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0443\u0431 - \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043e\u0431\u0430\u043a \u0431\u044b\u043b\u0438 \u043e\u0442\u0441\u0440\u0430\u043d\u0435\u043d\u044b \u043e\u0442 \u0443\u0447\u0430\u0441\u0442\u0438\u044f \u0432 \u0432\u044b\u0441\u0442\u0430\u0432\u043a\u0435 - \u041a\u0430\u043a\u0438\u0435 \u044d\u043a\u0441\u043f\u0435\u0440\u0442\u044b \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u044e\u0442 \u043f\u043e\u0440\u043e\u0434\u0443 - \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u0435</p> <ul> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 DjangoORM (\u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430 \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438).</li> <li>\u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0441\u0442\u0443\u0434\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django ORM. </li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u0443 API \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django REST Framework (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434\u044b \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438).</li> </ul> <p>\u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0431\u043e\u0442\u044b</p>"},{"location":"lr3/#_2","title":"\u0424\u0430\u0439\u043b\u044b","text":"<ul> <li> <p><code>models.py</code> \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0438 \u0438\u0445 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439 <pre><code>from django.db import models\nfrom django.contrib.auth.models import AbstractUser\nclass Participant(models.Model):\nname = models.CharField(max_length=100)\nbreed_types = (\n('h', 'haski'),\n('t', 'terrier'),\n('b', 'bulldog'),\n)\nbreed = models.CharField(max_length=1, choices=breed_types)\nage = models.IntegerField()\nfamily = models.CharField(max_length=1000)\nowner_data = models.CharField(max_length=1000)\nclub = models.ForeignKey('Club', on_delete=models.CASCADE,\nnull=True, blank=True\n)\ndef str(self):\nreturn self.name\nclass Show(models.Model):\nyear = models.IntegerField(primary_key=True)\nshow_types = (\n('mono', 'mono-breed'),\n('poly', 'poly-breed')\n)\ntype = models.CharField(max_length=4, choices=show_types)\nparticipants = models.ManyToManyField('Participant',\n# through='Participation',\nrelated_name='show_participants'\n)\ndef str(self):\nreturn str(self.year)\nclass Participation(models.Model):\nparticipant = models.ForeignKey('Participant', on_delete=models.CASCADE)\nmedal_types = (\n('g', 'gold'),\n('s', 'silver'),\n('b', 'bronze'),\n)\nmedal = models.CharField(max_length=1, choices=medal_types, null=True, blank=True)\nrings = models.ManyToManyField('Ring', null=True, blank=True)\nvaccinated = models.DateField()\ndismissed = models.BooleanField()\nfinal_grade = models.IntegerField(blank=True, null=True)\ndef str(self):\nreturn f'{self.participant}'\nclass Expert(models.Model):\nname = models.CharField(max_length=50)\nlast_name = models.CharField(max_length=50)\nclub = models.CharField(max_length=100)\ndef str(self):\nreturn f'{self.name} {self.last_name}'\nclass Club(models.Model):\nname = models.CharField(max_length=100)\nmembers = models.ManyToManyField('Participant',\nrelated_name='club_members'\n)\ndef str(self):\nreturn self.name\nclass Ring(models.Model):\nshow = models.ForeignKey('Show', on_delete=models.CASCADE)\nexperts = models.ManyToManyField('Expert',\n# through='Grade'\nrelated_name='ring_experts',\nnull=True,\nblank=True\n)\nbreed_types = (\n('h', 'haski'),\n('t', 'terrier'),\n('b', 'bulldog'),\n)\nbreed = models.CharField(max_length=1, choices=breed_types)\ndef str(self):\nreturn f'{self.show} {self.breed}'\n</code></pre></p> </li> <li> <p><code>views.py</code> \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 <pre><code>from rest_framework import generics\nfrom rest_framework.views import APIView, Response\nfrom .serializers import *\nfrom .models import *\nfrom django.db.models.aggregates import Count, Sum\nclass ExpertAPIView(generics.RetrieveUpdateDestroyAPIView):\nserializer_class = ExpertSerializer\nqueryset = Expert.objects.all()\nclass ParticipationAPIList(generics.ListCreateAPIView):\nserializer_class = ParticipationSerializer\nqueryset = Participation.objects.all()\nclass ParticipantAPIList(generics.ListCreateAPIView):\nserializer_class = ParticipantSerializer\nqueryset = Participant.objects.all()\nclass RingParticipationRetrieveAPIView(generics.RetrieveAPIView):\nserializer_class = RingParticipationSerializer\nqueryset = Participation.objects.all()\nclass ClubBreedsRetrieveAPIView(generics.RetrieveAPIView):\nserializer_class = ClubBreedsSerializer\nqueryset = Club.objects.all()\nclass DismissedCountAPIView(generics.RetrieveAPIView):\nserializer_class = DismissedCountSerializer\nqueryset = Participation.objects.all()\n# leave name\nclass BreedExpertsAPIView(generics.ListAPIView):\nserializer_class = BreedExpertsSerializer\nqueryset = Ring.objects.all()\nclass BreedCountAPIView(APIView):\ndef get(self, request):\n# breed_count = Participant.objects.filter(breed=breed).count()\nbreed_count = Participant.objects \\\n            .values('breed').annotate(count=Count('breed'))\ncontent = {'breed_count': breed_count}\nreturn Response(content)\nclass BreedCountAPIView(APIView):\ndef get(self, request):\n# breed_count = Participant.objects.filter(breed=breed).count()\nbreed_count = Ring.objects \\\n            .values('breed').annotate(count=Count('breed'))\ncontent = {'breed_count': breed_count}\nreturn Response(content)\n# class BreedCountAPIView(generics.ListAPIView):\n#     serializer_class = ParticipantSerializer\n#     lookup_url_kwarg = \"breed\"\n#\n#     def get_queryset(self):\n#         breed = self.kwargs.get(self.lookup_url_kwarg)\n#         participants = Participant.objects.filter(breed=breed)\n#         print(participants)\n#         return participants\nclass ReportAPIView(APIView):\ndef get(self, request, year):\nparticipants = Show.objects.get(year=year).participants\nparticipant_count = participants.count()\nbreed_count = participants.values('breed').annotate(count=Count('breed'))\nbest_grades = Participation.objects.filter(rings__show__year=year)\\\n            .values('participant')\\\n            .annotate(ex_sum=Sum('final_grade'))\\\n            .order_by()\nmedals = Participation.objects.values('rings__breed')\\\n            .annotate(medals_count=Count('medal'))\ncontent = {'participant_count': participant_count,\n'breeds': breed_count,\n'best_grades': best_grades,\n'medals': medals}\nreturn Response(content)\n</code></pre></p> </li> <li> <p><code>serializers.py</code> <pre><code>from rest_framework import serializers\nfrom .models import *\nclass ExpertSerializer(serializers.ModelSerializer):\nclass Meta:\nmodel = Expert\nfields = \"__all__\"\nclass ParticipationSerializer(serializers.ModelSerializer):\nclass Meta:\nmodel = Participation\nfields = \"__all__\"\nclass ParticipantSerializer(serializers.ModelSerializer):\nclass Meta:\nmodel = Participant\nfields = \"__all__\"\nclass RingParticipationSerializer(serializers.ModelSerializer):\nclass Meta:\nmodel = Participation\nfields = [\"rings\"]\nclass ParticipantBreedsSerializer(serializers.ModelSerializer):\nclass Meta:\nmodel = Participant\nfields = [\"breed\"]\nclass ClubBreedsSerializer(serializers.ModelSerializer):\nmembers = ParticipantBreedsSerializer(many=True)\nclass Meta:\nmodel = Club\nfields = [\"name\", \"members\"]\nclass RingSerializer(serializers.ModelSerializer):\nclass Meta:\nmodel = Ring\nfields = \"__all__\"\nclass DismissedCountSerializer(serializers.ModelSerializer):\ndismissed_count = serializers.SerializerMethodField()\nclass Meta:\nmodel = Participation\nfields = [\"dismissed_count\"]\ndef get_dismissed_count(self, obj):\nreturn Participation.objects.filter(dismissed=True).count()\nclass BreedExpertsSerializer(serializers.ModelSerializer):\nexperts = ExpertSerializer(many=True)\nclass Meta:\nmodel = Ring\nfields = [\"breed\", \"experts\"]\n</code></pre></p> </li> <li> <p><code>urls.py</code> \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a <pre><code>from django.urls import path\nfrom .views import *\napp_name = \"dogsapp\"\nurlpatterns = [\npath('experts/&lt;int:pk&gt;', ExpertAPIView.as_view()),\npath('participation/', ParticipationAPIList.as_view()),\npath('participants/', ParticipantAPIList.as_view()),\npath('participant_ring/&lt;int:pk&gt;', RingParticipationRetrieveAPIView.as_view()),\npath('club_breeds/&lt;int:pk&gt;', ClubBreedsRetrieveAPIView.as_view()),\npath('dismissed_count/&lt;int:pk&gt;', DismissedCountAPIView.as_view()),\npath('breed_experts/', BreedExpertsAPIView.as_view()),\npath('breeds_count/', BreedCountAPIView.as_view()),\npath('report/&lt;int:year&gt;', ReportAPIView.as_view()),\n]\n</code></pre></p> </li> </ul>"},{"location":"lr4/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21164","text":"<ul> <li> <p><code>Reg.vue</code></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f</p> </li> </ul> <p></p> <pre><code>&lt;script&gt;\nimport { mapActions, mapState } from 'pinia' import router from '@/router' import useRegisterStore from '../../src/stores/register'\nexport default {\nname: 'RegBlock', data() { return { form: { firstname: \"\", lastname: \"\", email: \"\", password: \"\", login: \"\" } }; }, methods: { ...mapActions(useRegisterStore, ['userRegister']), async register() { const response = await this.userRegister(this.form); const { accessToken, user } = response.data localStorage.accessToken = accessToken localStorage.user = JSON.stringify(user) localStorage.accessToken ? router.push('/') : router.push('') } } }\n&lt;/script&gt;\n</code></pre> <ul> <li> <p><code>Enter.vue</code></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</p> </li> </ul> <p></p> <pre><code>&lt;script&gt;\nimport { mapActions, mapState } from 'pinia' import router from '@/router' import useLoginStore from '../../src/stores/login'\nexport default {\nname: 'EnterBlock', data() { return { form: { email: \"\", password: \"\" } }; }, methods: { ...mapActions(useLoginStore, ['userLogin']), async login() { const response = await this.userLogin(this.form);\nconst { accessToken, user } = response.data\nlocalStorage.accessToken = accessToken\nlocalStorage.user = JSON.stringify(user)\nlocalStorage.accessToken ? router.push('/') : router.push('/enter')\n}\n}\n}\n&lt;/script&gt;\n</code></pre> <ul> <li> <p><code>Main.vue</code></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b: \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u043f\u043e \u0442\u0438\u043f\u0443 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f (\u043e\u0447\u043d\u043e/\u0434\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u043e\u043d\u043d\u043e) \u0438 \u0433\u043e\u0440\u043e\u0434\u0443 (\u041c\u043e\u0441\u043a\u0432\u0430/\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0440\u0443\u0433/\u0410\u0440\u0445\u0430\u043d\u0433\u0435\u043b\u044c\u0441\u043a), \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 (\u043f\u0440\u0438\u0447\u0435\u043c \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437), \u0432\u044b\u0445\u043e\u0434 \u0438\u0437 \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438</p> </li> <li> <p>\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u043f\u043e \u0442\u0438\u043f\u0443 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f \u0438 \u0433\u043e\u0440\u043e\u0434\u0443 (\u043a\u0430\u0436\u0434\u044b\u0439 \u0444\u0438\u043b\u044c\u0442\u0440 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e)  </p> </li> <li> <p>\u041f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 </p> </li> </ul> <pre><code>&lt;script&gt;\nimport {mapActions, mapState} from 'pinia'\nimport useCardsStore from '@/stores/cards'\nimport NoteBlock from '@/components/note-card.vue'\nexport default {\nname: 'MainBlock',\ncomponents: { NoteBlock },\ncomputed: {\n...mapState(useCardsStore, ['cards']),\nfilteredCards() { if (this.selectedCards.length) { return this.selectedCards; } else { return this.cards } }\n},\nmethods: {\n...mapActions(useCardsStore, ['loadCards']),\nasync filter() { const eventT = document.querySelector('.event-type') const cityT = document.querySelector('.region-type') this.selectedCards = []\nconsole.log(eventT.value, cityT.value) this.cards.forEach((card) =&gt; { if ((eventT.value === card.category &amp;&amp; cityT.value === card.category2) || (eventT.value === \"ALL\" &amp;&amp; cityT.value === card.category2) || (eventT.value === card.category &amp;&amp; cityT.value === \"ALL\")) { this.selectedCards.push(card); }\n}) }\n},\ndata() {\nreturn {\nselectedCards: []\n}\n},\nmounted() {\nthis.loadCards();\n}\n}\n&lt;/script&gt;\n</code></pre> <ul> <li> <p><code>Header.vue</code></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b: \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0432 \u0437\u0430\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0438\u043b\u0438 \u043d\u0435\u0442, \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0432 header), \u0432\u044b\u0445\u043e\u0434 \u0438\u0437 \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438</p> </li> </ul> <p></p> <pre><code>&lt;script&gt;\nexport default {\nname: 'HeaderBlock',\nmethods: {\ncheck() {\nconst idLogOut = document.querySelector('#logout');\nconst idLogIn = document.querySelector('#enter');\nconst enterLK = document.querySelector('#enterlk');\nif (localStorage.accessToken){\nidLogIn.classList.add(\"d-none\");\nidLogOut.classList.remove(\"d-none\");\n} else {\nidLogIn.classList.remove(\"d-none\");\nenterLK.classList.add(\"d-none\");\nidLogOut.classList.add(\"d-none\");\n}\n},\nexit() {\nconst idLogOut = document.querySelector('#logout');\nconst idLogIn = document.querySelector('#enter');\nconst enterLK = document.querySelector('#enterlk');\nlocalStorage.clear();\nidLogIn.classList.remove(\"d-none\");\nenterLK.classList.add(\"d-none\");\nidLogOut.classList.add(\"d-none\");\n}\n},\nmounted() {\nthis.check()\n}\n}\n&lt;/script&gt;\n</code></pre> <ul> <li> <p><code>note-card.vue</code></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b: \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</p> </li> </ul> <pre><code>&lt;script&gt;\nimport {mapActions, mapState} from 'pinia'\nimport useUserEventsStore from '@/stores/userEvents'\nexport default {\nname: 'NoteBlock',\nprops: {\nmero: {\ntype: String,\nrequired: true\n},\ntext: {\ntype: String,\nrequired: true\n},\ntype: {\ntype: String,\nrequired: true\n},\ndata: {\ntype: String,\nrequired: true\n},\naddress: {\ntype: String,\nrequired: true\n},\nid: {\ntype: Number,\nrequired: true\n},\nimg: {\ntype: String,\nrequired: true\n},\n},\ncomputed: {\n...mapState(useUserEventsStore, ['userEvents']),\n},\nmethods: {\n...mapActions(useUserEventsStore, ['addUserEvents', 'getUserEventsById']),\nasync addNote(id) {\nconst userId = JSON.parse(localStorage.user).id\nconst userEvents = await this.getUserEventsById(userId)\nconsole.log(userEvents.data)\nconst isEventExist = userEvents.data.filter(event =&gt; event.eventId == id)\nconsole.log(isEventExist.length)\nif (isEventExist.length) {\nalert(\"Event already exist\")\nreturn\n}\nconst event = {\n\"userId\": userId,\n\"eventId\": id\n}\nconsole.log(event)\nconst response = await this.addUserEvents(event);\nconsole.log(response)\n}\n}\n}\n&lt;/script&gt;\n</code></pre> <ul> <li> <p><code>Lk.vue</code></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430: \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c</p> </li> </ul> <p></p> <pre><code>&lt;section class=\"container row mx-auto\" id=\"container\"&gt;\n&lt;h3 class=\"text h4 custom-colored-h1 mt-5 mb-5 mx-5\"&gt;\u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b:&lt;/h3&gt;\n&lt;div class=\"col-12 col-xl-3 col-md-5 col-lg-5 mb-5 pt-5\" v-for=\"card in personalCards\" :key=\"card.id\"&gt;\n&lt;personal-cards :mero=\"card.mero\" :data=\"card.data\" :address=\"card.address\" :type=\"card.type\" :primaryId=\"card.primaryId\"/&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;script&gt;\nimport {mapActions, mapState} from 'pinia'\nimport useUserEventsStore from '@/stores/userEvents'\nimport useCardsStore from '@/stores/cards'\nimport PersonalCards from '@/components/PersonalCards.vue'\nexport default {\nname: 'LkBlock',\ncomponents: {PersonalCards},\ncomputed: {\n...mapState(useUserEventsStore, ['userEvents']),\n...mapState(useCardsStore, ['personalCards']),\n},\nmethods: {\n...mapActions(useUserEventsStore, ['getUserEventsById']),\n...mapActions(useCardsStore, ['loadCardById', 'doClear']),\nasync loadPage() {\nconst response = await this.getUserEventsById(JSON.parse(localStorage.user).id); const result = Array.from(response.data);\nthis.doClear(); result.forEach((item) =&gt; { this.loadCardById(item.eventId, item.id) }) }\n},\nmounted() {\nthis.loadPage()\n}\n}\n&lt;/script&gt;\n</code></pre> <ul> <li> <p><code>PersonalCards.vue</code></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430: \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u043e\u0442\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</p> </li> </ul> <p></p> <pre><code>&lt;script&gt; import { mapActions, mapState } from \"pinia\"; import useUserEventsStore from \"@/stores/userEvents.js\" export default { name: 'PersonalCards', computed: { ...mapState(useUserEventsStore, ['userEvents']), }, methods: {\n...mapActions(useUserEventsStore, ['addUserEvents', 'deleteCardById']),\nasync deleteCard(id) {\nconsole.log('vbnm')\nthis.deleteCardById(id)\nlocation.reload()\n}\n},\nprops: {\nmero: {\ntype: String,\nrequired: true\n},\nmetro: {\ntype: String,\nrequired: true\n},\ndata: {\ntype: String,\nrequired: true\n},\naddress: {\ntype: String,\nrequired: true\n},\nprimaryId: {\ntype: Number,\nrequired: true\n}\n}\n}\n&lt;/script&gt;\n</code></pre> <ul> <li> <p><code>CalendarView.vue</code></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b: \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 \u0432 \u043b\u0438\u0447\u043d\u043e\u043c \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0432 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c</p> </li> </ul> <p></p> <pre><code>&lt;script&gt; import { mapActions, mapState } from 'pinia' import { Modal } from 'bootstrap' import useCalendarEventsStore from '@/stores/calendarEvents' import BaseLayout from '@/layouts/BaseLayout.vue' import HeaderBlock from '@/components/Header.vue' import FullCalendar from '@/components/FullCalendar.vue' import FooterBlock from '@/components/Footer.vue'\nexport default { name: 'CalendarPage', components: { BaseLayout, FullCalendar, HeaderBlock, FooterBlock}, computed: { ...mapState(useCalendarEventsStore, { calendarEvents: 'calendarEvents', selectedEvent: (state) =&gt; { return { ...state.selectedEvent, formattedDate: () =&gt; { const date = state.selectedEvent.date return new Date(date).toLocaleDateString('ru-RU') } } } }) }, data() { return { form: { title: '', description: '', date: '' }, eventCreateModal: null } }, methods: { ...mapActions(useCalendarEventsStore, ['loadCalendarEvents', 'loadEventById', 'createEvent', 'deleteEvent']), handleEventChange(payload) { console.log('event change', payload) }, handleDateClick(payload) { console.log('date clicked', payload) const { dateStr } = payload this.form.date = dateStr this.eventCreateModal = new Modal(this.$refs.eventCreate) this.eventCreateModal.show() }, async handleEventClick(payload) { await this.loadEventById(payload.event._def.publicId) const eventModal = new Modal(this.$refs.detailEvent) eventModal.show() }, async submitForm() { await this.createEvent(this.form) this.$refs.eventForm.reset() this.eventCreateModal.hide() await this.loadCalendarEvents() }, async deleteMero(id) { this.deleteEvent(id); location.reload(); } }, mounted() { this.loadCalendarEvents() } } &lt;/script&gt;\n</code></pre>"},{"location":"pr3_1/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1","text":"<p>Django \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435.</p>"},{"location":"pr3_1/#311","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.1","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.</p> <ul> <li><code>models.py</code> - \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 <pre><code>class CarOwner(AbstractUser):\nid_owner = models.IntegerField(primary_key = True)\nlast_name = models.CharField(max_length = 30, null = False)\nfirst_name = models.CharField(max_length = 30, null = False)\nbirth_day = models.DateField(null = True)\npassport = models.IntegerField(null=True)\naddress = models.CharField(max_length=50, null=True, blank=True)\nnationality = models.CharField(max_length=20, null=True, blank=True)\nclass Car(models.Model):\nid_car = models.IntegerField(primary_key=True)\nstate_number = models.CharField(max_length=15, null=False)\nmark_car = models.CharField(max_length=20, null=False)\nmodel_car = models.CharField(max_length=20, null=False)\ncolor = models.CharField(max_length=30, null=False)\nclass Ownership(models.Model):\nid_owner_car = models.IntegerField(primary_key=True)\nid_owner = models.ForeignKey(CarOwner, on_delete=models.CASCADE)\nid_car = models.ForeignKey(Car, on_delete=models.CASCADE)\nstart_date = models.DateField()\nend_date = models.DateField(null=True)\nclass DriverLicense(models.Model):\nid_license = models.IntegerField(primary_key=True)\nid_owner = models.ForeignKey(CarOwner, on_delete=models.CASCADE)\nlicense_number = models.CharField(max_length=10, null=False)\ntype = models.CharField(max_length=10, null=False)\ndate_of_license = models.DateField()\n</code></pre></li> </ul>"},{"location":"pr3_1/#_1","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439","text":"<ul> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 </li> </ul> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 </li> </ul> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 </li> </ul> <ul> <li>\u0421\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c \u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c </li> </ul>"},{"location":"pr3_1/#312","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.2","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e:</p> <ul> <li>\u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c):</li> </ul> <p></p> <ul> <li>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435):</li> </ul> <p></p> <ul> <li>\u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430):</li> </ul> <p></p> <ul> <li>\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442):</li> </ul> <p></p> <ul> <li>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435):</li> </ul> <p></p>"},{"location":"pr3_1/#313","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.3","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b:</p> <ul> <li>\u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:</li> </ul> <p></p> <ul> <li>\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435:</li> </ul> <p></p> <ul> <li>\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f:</li> </ul> <p></p> <ul> <li>\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438:</li> </ul> <p></p> <ul> <li>\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:</li> </ul> <p> </p>"}]}