# Generated by Django 4.1.4 on 2022-12-28 16:25

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Reader",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(max_length=30, unique=True)),
                ("password", models.CharField(max_length=30)),
                (
                    "library_pass",
                    models.CharField(max_length=20, verbose_name="Читательский билет"),
                ),
                ("name", models.CharField(max_length=70, verbose_name="ФИО")),
                (
                    "passport",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Паспорт"
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="День рождения"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Адрес"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Телефон"
                    ),
                ),
                (
                    "education_level",
                    models.CharField(
                        choices=[
                            ("e", "elementary"),
                            ("s", "secondary"),
                            ("c", "college"),
                        ],
                        default="e",
                        max_length=1,
                        verbose_name="Образование",
                    ),
                ),
                (
                    "degree",
                    models.BooleanField(
                        default=False, verbose_name="Есть ли уч степент"
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(verbose_name="Дата регистрации"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID книги в базе",
                    ),
                ),
                ("book_name", models.CharField(max_length=50, verbose_name="Название")),
                ("author", models.CharField(max_length=70, verbose_name="Автор")),
                (
                    "section",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Раздел"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Hall",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Имя зала")),
                ("capacity", models.IntegerField(verbose_name="Вместимость")),
            ],
        ),
        migrations.CreateModel(
            name="InstanceBook",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID экземпляра книги",
                    ),
                ),
                ("cypher", models.CharField(max_length=20, verbose_name="Шифр")),
                ("year_published", models.IntegerField(verbose_name="Год издания")),
                ("publisher", models.CharField(max_length=20, verbose_name="Издатель")),
                (
                    "condition",
                    models.CharField(
                        choices=[("g", "good"), ("n", "normal"), ("b", "bad")],
                        max_length=1,
                        verbose_name="Состояние экземпляра",
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library_app.book",
                        verbose_name="Книга",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReaderHall",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата закрепления зала"
                    ),
                ),
                (
                    "hall",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library_app.hall",
                        verbose_name="Зал",
                    ),
                ),
                (
                    "reader",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Читатель",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InstancePlace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library_app.instancebook",
                        verbose_name="Экземпляр книги",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library_app.hall",
                        verbose_name="Зал библиотеки",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="hall",
            name="books",
            field=models.ManyToManyField(
                related_name="instance_place",
                through="library_app.InstancePlace",
                to="library_app.instancebook",
                verbose_name="Книги",
            ),
        ),
        migrations.AddField(
            model_name="hall",
            name="readers",
            field=models.ManyToManyField(
                related_name="reader_place",
                through="library_app.ReaderHall",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Читатели",
            ),
        ),
        migrations.CreateModel(
            name="BooksOnHands",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_register",
                    models.DateField(blank=True, null=True, verbose_name="Дата выдачи"),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library_app.instancebook",
                        verbose_name="Экземпляр книги",
                    ),
                ),
                (
                    "reader",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Читатель",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="reader",
            name="instances_on_hands",
            field=models.ManyToManyField(
                related_name="instance_reader",
                through="library_app.BooksOnHands",
                to="library_app.instancebook",
                verbose_name="Книги на руках",
            ),
        ),
        migrations.AddField(
            model_name="reader",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
