{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0440\u043e\u0432\u0430\u043d\u0438\u0435 2022 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0422\u0440\u0435\u0442\u044c\u044f\u043a\u043e\u0432\u043e\u0439 \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u044b K33422","title":"\u0417\u043d\u0430\u043a\u043e\u043c\u0441\u0442\u0432\u043e"},{"location":"#web-2022","text":"","title":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0440\u043e\u0432\u0430\u043d\u0438\u0435 2022"},{"location":"#k33422","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0422\u0440\u0435\u0442\u044c\u044f\u043a\u043e\u0432\u043e\u0439 \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u044b K33422"},{"location":"lr1/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161 server.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( \"127.0.0.1\" , 14900 )) sock . listen ( 2 ) while True : try : con , addr = sock . accept () data = con . recv ( 16384 ) udata = data . decode ( \"utf-8\" ) print ( udata ) con . send ( b \"Hello, client\" ) finally : sock . close () break client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( \"127.0.0.1\" , 14900 )) sock . send ( b \"Hello, server \\n \" ) text = sock . recv ( 16384 ) udata = text . decode ( \"utf-8\" ) print ( udata ) \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162 server.py import socket import math sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( \"127.0.0.1\" , 14900 )) sock . listen ( 2 ) while True : try : con , addr = sock . accept () s = con . recv ( 1024 ) s = s . decode ( \"utf8\" ) s = s . split () a = int ( s [ 0 ]) b = int ( s [ 1 ]) c = int ( s [ 2 ]) d = ( pow ( b , 2 ) - 4 * a * c ) if d == 0 : x = ( - b / ( 2 * a )) con . send ( b \"x = \" + str ( x ) . encode ( \"utf-8\" )) elif d < 0 : con . send ( \"\u041d\u0435\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043a\u043e\u0440\u043d\u0435\u0439\" . encode ( \"utf-8\" )) elif d > 0 : x1 = ( - b - math . sqrt ( d )) / ( 2 * a ) x2 = ( - b + math . sqrt ( d )) / ( 2 * a ) con . send ( b \"x1 = \" + str ( x1 ) . encode ( \"utf-8\" ) + b \" x2 = \" + str ( x2 ) . encode ( \"utf-8\" )) finally : sock . close () break client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) a = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 x^2:\" ) b = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 x:\" ) c = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0440\u0435\u0442\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442:\" ) s = a + \" \" + b + \" \" + c sock . connect (( \"127.0.0.1\" , 14900 )) sock . send ( s . encode ( \"utf-8\" )) text = sock . recv ( 16384 ) udata = text . decode ( \"utf-8\" ) print ( udata ) \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163 server.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) host = '127.0.0.1' port = 333 sock . bind (( host , port )) sock . listen ( 5 ) while True : client , addr = sock . accept () print ( '\u041f\u043e\u043b\u0443\u0447\u0438\u043b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442:' , addr ) client . recv ( 1024 ) resp_type = 'HTTP/1.0 200 OK \\n ' resp_headers = 'Content-Type: text/html \\n\\n ' resp_body = \"\"\" <html> <body> <h1>Hello, client! It's a nice day to die</h1> </body> </html> \"\"\" response = resp_type + resp_headers + resp_body client . send ( response . encode ( 'utf-8' )) client . close () break \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164 server.py import socket from threading import Thread host = \"127.0.0.1\" port = 334 clients = set () sock = socket . socket () sock . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) sock . bind (( host , port )) sock . listen ( 5 ) def listen_for_client ( cl ): while True : try : message = cl . recv ( 1024 ) . decode () except Exception as e : print ( f \"[!] \u041e\u0448\u0438\u0431\u043a\u0430: { e } \" ) clients . remove ( cl ) else : message = message . replace ( \" \" , \": \" ) for client in clients : client . send ( message . encode ()) while True : client , address = sock . accept () print ( f \" { address } \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d.\" ) clients . add ( client ) thread = Thread ( target = listen_for_client , args = ( client ,)) thread . daemon = True thread . start () client.py import socket import random from threading import Thread host = \"127.0.0.1\" port = 334 separator_token = \" \" sock = socket . socket () sock . connect (( host , port )) print ( f \"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a { host } : { port } \" ) name = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0451 \u0438\u043c\u044f: \" ) def listen_for_messages (): while True : message = sock . recv ( 1024 ) . decode () print ( \" \\n \" + message ) thread = Thread ( target = listen_for_messages ) #thread.daemon = True thread . start () while True : text = input () if text . lower () == 'exit' : break text = f \" { name }{ separator_token }{ text } \" sock . send ( text . encode ()) sock . close () \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165 server.py import socket import sys class MyHTTPServer : def __init__ ( self , host , port ): self . host = host self . port = port def serve_forever ( self ): conn = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) conn . bind (( self . host , self . port )) conn . listen ( 10 ) while True : client , address = conn . accept () self . serve_client ( client ) def serve_client ( self , client ): text = client . recv ( 16384 ) text = text . decode ( 'utf-8' ) # change url , method , headers , body = self . parse_request ( text ) resp = self . handle_request ( url , method , body ) if resp : self . send_response ( client , resp ) def parse_request ( self , text ): text = text . replace ( ' \\r ' , '' ) lines = text . split ( ' \\n ' ) method , url , protocol = lines [ 0 ] . split () i = lines . index ( '' ) headers = lines [ 1 : i ] body = lines [ - 1 ] # exception return url , method , headers , body def handle_request ( self , url , method , body ): resp = \"HTTP/1.1 200 OK \\n\\n \" error = f \" 400 \\n\\n Erorr\" if method == 'GET' and url == '/' : with open ( 'index.html' , 'r' ) as f : #change resp += f . read () return resp elif Exception : return error if method == \"POST\" and url == '/' : newbody = body . split ( '&' ) for i in newbody : if i . split ( '=' )[ 0 ] == 'subject' : subjects . append ( i . split ( '=' )[ 1 ]) if i . split ( '=' )[ 0 ] == 'mark' : marks . append ( i . split ( '=' )[ 1 ]) resp += \"<html><head><title>Journal</title></head><body><table border=1>\" for s , m in zip ( subjects , marks ): resp += f \"<tr><td> { s } </td><td> { m } </td></tr>\" resp += \"</table></body></html>\" return resp elif Exception : return error def send_response ( self , clientsocket , resp ): clientsocket . send ( resp . encode ( 'utf-8' )) if __name__ == '__main__' : host = '127.0.0.1' port = 3000 serv = MyHTTPServer ( host , port ) subjects = [] marks = [] try : serv . serve_forever () except KeyboardInterrupt : pass index.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Journal </ title > </ head > < body > < form action = \"/\" method = \"post\" > < div > < label for = \"name\" > Subject: </ label > < input type = \"text\" id = \"name\" name = \"subject\" /> </ div > < div > < label for = \"mail\" > Mark: </ label > < input type = \"number\" id = \"mail\" name = \"mark\" /> </ div > < div > < input type = \"submit\" > </ div > </ body > </ html >","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161"},{"location":"lr1/#no1","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161"},{"location":"lr1/#no1_1","text":"server.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( \"127.0.0.1\" , 14900 )) sock . listen ( 2 ) while True : try : con , addr = sock . accept () data = con . recv ( 16384 ) udata = data . decode ( \"utf-8\" ) print ( udata ) con . send ( b \"Hello, client\" ) finally : sock . close () break client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( \"127.0.0.1\" , 14900 )) sock . send ( b \"Hello, server \\n \" ) text = sock . recv ( 16384 ) udata = text . decode ( \"utf-8\" ) print ( udata )","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161"},{"location":"lr1/#no2","text":"server.py import socket import math sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( \"127.0.0.1\" , 14900 )) sock . listen ( 2 ) while True : try : con , addr = sock . accept () s = con . recv ( 1024 ) s = s . decode ( \"utf8\" ) s = s . split () a = int ( s [ 0 ]) b = int ( s [ 1 ]) c = int ( s [ 2 ]) d = ( pow ( b , 2 ) - 4 * a * c ) if d == 0 : x = ( - b / ( 2 * a )) con . send ( b \"x = \" + str ( x ) . encode ( \"utf-8\" )) elif d < 0 : con . send ( \"\u041d\u0435\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043a\u043e\u0440\u043d\u0435\u0439\" . encode ( \"utf-8\" )) elif d > 0 : x1 = ( - b - math . sqrt ( d )) / ( 2 * a ) x2 = ( - b + math . sqrt ( d )) / ( 2 * a ) con . send ( b \"x1 = \" + str ( x1 ) . encode ( \"utf-8\" ) + b \" x2 = \" + str ( x2 ) . encode ( \"utf-8\" )) finally : sock . close () break client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) a = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 x^2:\" ) b = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 x:\" ) c = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0440\u0435\u0442\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442:\" ) s = a + \" \" + b + \" \" + c sock . connect (( \"127.0.0.1\" , 14900 )) sock . send ( s . encode ( \"utf-8\" )) text = sock . recv ( 16384 ) udata = text . decode ( \"utf-8\" ) print ( udata )","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162"},{"location":"lr1/#no3","text":"server.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) host = '127.0.0.1' port = 333 sock . bind (( host , port )) sock . listen ( 5 ) while True : client , addr = sock . accept () print ( '\u041f\u043e\u043b\u0443\u0447\u0438\u043b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442:' , addr ) client . recv ( 1024 ) resp_type = 'HTTP/1.0 200 OK \\n ' resp_headers = 'Content-Type: text/html \\n\\n ' resp_body = \"\"\" <html> <body> <h1>Hello, client! It's a nice day to die</h1> </body> </html> \"\"\" response = resp_type + resp_headers + resp_body client . send ( response . encode ( 'utf-8' )) client . close () break","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163"},{"location":"lr1/#no4","text":"server.py import socket from threading import Thread host = \"127.0.0.1\" port = 334 clients = set () sock = socket . socket () sock . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) sock . bind (( host , port )) sock . listen ( 5 ) def listen_for_client ( cl ): while True : try : message = cl . recv ( 1024 ) . decode () except Exception as e : print ( f \"[!] \u041e\u0448\u0438\u0431\u043a\u0430: { e } \" ) clients . remove ( cl ) else : message = message . replace ( \" \" , \": \" ) for client in clients : client . send ( message . encode ()) while True : client , address = sock . accept () print ( f \" { address } \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d.\" ) clients . add ( client ) thread = Thread ( target = listen_for_client , args = ( client ,)) thread . daemon = True thread . start () client.py import socket import random from threading import Thread host = \"127.0.0.1\" port = 334 separator_token = \" \" sock = socket . socket () sock . connect (( host , port )) print ( f \"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a { host } : { port } \" ) name = input ( \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0451 \u0438\u043c\u044f: \" ) def listen_for_messages (): while True : message = sock . recv ( 1024 ) . decode () print ( \" \\n \" + message ) thread = Thread ( target = listen_for_messages ) #thread.daemon = True thread . start () while True : text = input () if text . lower () == 'exit' : break text = f \" { name }{ separator_token }{ text } \" sock . send ( text . encode ()) sock . close ()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164"},{"location":"lr1/#no5","text":"server.py import socket import sys class MyHTTPServer : def __init__ ( self , host , port ): self . host = host self . port = port def serve_forever ( self ): conn = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) conn . bind (( self . host , self . port )) conn . listen ( 10 ) while True : client , address = conn . accept () self . serve_client ( client ) def serve_client ( self , client ): text = client . recv ( 16384 ) text = text . decode ( 'utf-8' ) # change url , method , headers , body = self . parse_request ( text ) resp = self . handle_request ( url , method , body ) if resp : self . send_response ( client , resp ) def parse_request ( self , text ): text = text . replace ( ' \\r ' , '' ) lines = text . split ( ' \\n ' ) method , url , protocol = lines [ 0 ] . split () i = lines . index ( '' ) headers = lines [ 1 : i ] body = lines [ - 1 ] # exception return url , method , headers , body def handle_request ( self , url , method , body ): resp = \"HTTP/1.1 200 OK \\n\\n \" error = f \" 400 \\n\\n Erorr\" if method == 'GET' and url == '/' : with open ( 'index.html' , 'r' ) as f : #change resp += f . read () return resp elif Exception : return error if method == \"POST\" and url == '/' : newbody = body . split ( '&' ) for i in newbody : if i . split ( '=' )[ 0 ] == 'subject' : subjects . append ( i . split ( '=' )[ 1 ]) if i . split ( '=' )[ 0 ] == 'mark' : marks . append ( i . split ( '=' )[ 1 ]) resp += \"<html><head><title>Journal</title></head><body><table border=1>\" for s , m in zip ( subjects , marks ): resp += f \"<tr><td> { s } </td><td> { m } </td></tr>\" resp += \"</table></body></html>\" return resp elif Exception : return error def send_response ( self , clientsocket , resp ): clientsocket . send ( resp . encode ( 'utf-8' )) if __name__ == '__main__' : host = '127.0.0.1' port = 3000 serv = MyHTTPServer ( host , port ) subjects = [] marks = [] try : serv . serve_forever () except KeyboardInterrupt : pass index.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Journal </ title > </ head > < body > < form action = \"/\" method = \"post\" > < div > < label for = \"name\" > Subject: </ label > < input type = \"text\" id = \"name\" name = \"subject\" /> </ div > < div > < label for = \"mail\" > Mark: </ label > < input type = \"number\" id = \"mail\" name = \"mark\" /> </ div > < div > < input type = \"submit\" > </ div > </ body > </ html >","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165"},{"location":"lr2/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u0442\u0443\u0440\u0430\u0433\u0435\u043d\u0441\u0442\u0432\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u043f\u0435\u0440\u0438\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0442\u0443\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043e\u043f\u043b\u0430\u0442\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u0442\u0443\u0440\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c. \u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0431\u043e\u0442\u044b \u0424\u0430\u0439\u043b\u044b models.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432: \u0442\u0443\u0440\u0438\u0441\u0442, \u0442\u0443\u0440, \u0430\u0433\u0435\u043d\u0441\u0442\u0432\u043e, \u0441\u0442\u0440\u0430\u043d\u0430, \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439; \u0438 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438 from django.db import models from django.db.models.base import Model from django.db.models.deletion import CASCADE from django.contrib.auth.models import AbstractUser from django.contrib.auth import get_user_model class Tourist ( AbstractUser ): username = models . CharField ( max_length = 20 , unique = True ) first_name = models . CharField ( max_length = 20 , null = True ) last_name = models . CharField ( max_length = 20 , null = True ) password = models . CharField ( max_length = 100 , null = True ) def __str__ ( self ): return str ( self . first_name ) Tourist = get_user_model () class Agency ( models . Model ): name = models . CharField ( max_length = 20 ) def __str__ ( self ): return str ( self . name ) class Country ( models . Model ): name = models . CharField ( max_length = 20 ) def __str__ ( self ): return str ( self . name ) class Tour ( models . Model ): name = models . CharField ( max_length = 20 ) description = models . TextField () agency_id = models . ForeignKey ( Agency , on_delete = CASCADE ) beginning_date = models . DateTimeField () ending_date = models . DateTimeField () country = models . ForeignKey ( Country , on_delete = CASCADE , null = True ) price = models . IntegerField ( null = True ) def __str__ ( self ): return str ( self . name ) class Reservation ( models . Model ): tourist_id = models . ForeignKey ( Tourist , on_delete = CASCADE ) tour_id = models . ForeignKey ( Tour , on_delete = CASCADE ) def __str__ ( self ): return str ( self . tour_id ) class Comment ( models . Model ): tourist_id = models . ForeignKey ( Tourist , on_delete = CASCADE ) tour_id = models . ForeignKey ( Tour , on_delete = CASCADE ) title = models . CharField ( max_length = 50 , null = True ) text = models . TextField () beginning_date = models . DateField ( null = True ) ending_date = models . DateField ( null = True ) rating = (( '1' , '1' ), ( '2' , '2' ), ( '3' , '3' ), ( '4' , '4' ), ( '5' , '5' ), ( '6' , '6' ), ( '7' , '7' ), ( '8' , '8' ), ( '9' , '9' ), ( '10' , '10' )) rate = models . CharField ( max_length = 30 , choices = rating ) def __str__ ( self ): return str ( self . title ) views.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 from typing import List from django.shortcuts import render , redirect from django.http import Http404 , HttpResponse from django.contrib.auth import authenticate , login , logout from django.views.generic.list import ListView from django.views.generic.edit import CreateView , DeleteView , UpdateView from .models import Country , Tourist , Tour , Reservation , Comment from .forms import LoginForm , UserRegistrationForm def show_tour ( request , tour_id ): try : tour = Tour . objects . get ( pk = tour_id ) comments = Comment . objects . filter ( tour_id = tour ) except Tour . DoesNotExist : raise Http404 return render ( request , 'tour.html' , { 'tour' : tour , 'comments' : comments }) class All_Tours ( ListView ): model = Tour template_name = 'all_tour.html' @staticmethod def all_countries (): return Country . objects . all () class All_Tours_Registered ( ListView ): model = Tour template_name = 'tour_registered.html' @staticmethod def all_countries (): return Country . objects . all () def tours_registered ( request , tour_id ): try : tour = Tour . objects . get ( pk = tour_id ) comments = Comment . objects . filter ( tour_id = tour ) except Tour . DoesNotExist : raise Http404 return render ( request , 'all_tour_registered.html' , { 'tour' : tour , 'comments' : comments }) def tour_filter_registered ( request , pk ): tours = Tour . objects . all () . filter ( country_id = pk ) return render ( request , 'filter.html' , { 'tours' : tours }) def tour_filter ( request , pk ): tours = Tour . objects . all () . filter ( country_id = pk ) return render ( request , 'filter_nr.html' , { 'tours' : tours }) class Tourist_Page ( ListView ): model = Tourist template_name = 'tourist_page.html' class All_Reservations ( ListView ): model = Reservation template_name = 'all_reservation.html' class Make_Reservation ( CreateView ): model = Reservation template_name = 'reservation_create.html' fields = [ 'tourist_id' , 'tour_id' ] success_url = '/home/registered' class Edit_Reservation ( UpdateView ): model = Reservation template_name = 'reservation_edit.html' fields = [ 'tourist_id' , 'tour_id' ] success_url = '/home/registered' class Delete_Reservation ( DeleteView ): model = Reservation template_name = 'reservation_delete.html' success_url = '/home/registered' class All_Comments ( ListView ): model = Comment template_name = 'all_comment.html' class All_Comments_Registered ( ListView ): model = Comment template_name = 'all_comment_registered.html' class Leave_Comment ( CreateView ): model = Comment template_name = 'comment.html' fields = [ 'tourist_id' , 'tour_id' , 'text' , 'rate' ] success_url = '/tour/registered' class Home ( ListView ): model = Tour template_name = 'home.html' def register ( request ): if request . method == 'POST' : user_form = UserRegistrationForm ( request . POST ) if user_form . is_valid (): # Create a new user object but avoid saving it yet new_user = user_form . save ( commit = False ) # Set the chosen password new_user . set_password ( user_form . cleaned_data [ 'password' ]) # Save the User object new_user . save () return render ( request , 'account/register_done.html' , { 'new_user' : new_user }) else : user_form = UserRegistrationForm () return render ( request , 'account/register.html' , { 'user_form' : user_form }) def user_login ( request ): if request . method == 'POST' : form = LoginForm ( request . POST ) if form . is_valid (): cd = form . cleaned_data user = authenticate ( username = cd [ 'username' ], password = cd [ 'password' ]) if user is not None : if user . is_active : login ( request , user ) return redirect ( '/home/registered' ) else : return HttpResponse ( 'Disabled account' ) else : return HttpResponse ( 'Invalid login' ) else : form = LoginForm () return render ( request , 'account/login.html' , { 'form' : form }) def logout_user ( request ): logout ( request ) return redirect ( '/home/' ) urls.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a from django.urls import path from . import views urlpatterns = [ path ( 'tour/<int:tour_id>' , views . show_tour ), path ( 'tour/registered/<int:tour_id>' , views . tours_registered ), path ( 'tour/registered' , views . All_Tours_Registered . as_view ()), path ( 'tour/' , views . All_Tours . as_view ()), path ( 'reservation_create/' , views . Make_Reservation . as_view ()), path ( 'tour/<int:tour_id>/new_comment' , views . Leave_Comment . as_view ()), path ( 'reservation/<int:pk>/edit/' , views . Edit_Reservation . as_view ()), path ( 'tour/<int:tour_id>/comments/' , views . All_Comments . as_view ()), path ( 'reservation/<int:pk>/delete/' , views . Delete_Reservation . as_view ()), path ( 'accounts/register/' , views . register ), path ( 'accounts/login/' , views . user_login ), path ( 'home/' , views . Home . as_view ()), path ( 'home/registered/' , views . Tourist_Page . as_view ()), path ( 'home/<int:tourist_id>/reservation' , views . All_Reservations . as_view ()), path ( 'accounts/logout' , views . logout_user ), path ( 'tour/registered/<int:tour_id>/comments/' , views . All_Comments_Registered . as_view ()), path ( 'filter/registered/<int:pk>' , views . tour_filter_registered ), path ( 'filter/<int:pk>' , views . tour_filter ) ] forms.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u043e\u0440\u043c: \u0432\u0445\u043e\u0434, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0438 \u0437\u0430\u0431\u044b\u0442\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c from django import forms from .models import Tourist class LoginForm ( forms . Form ): username = forms . CharField () password = forms . CharField ( widget = forms . PasswordInput ) class UserRegistrationForm ( forms . ModelForm ): password = forms . CharField ( label = 'Password' , widget = forms . PasswordInput ) password2 = forms . CharField ( label = 'Repeat password' , widget = forms . PasswordInput ) class Meta : model = Tourist fields = ( 'username' , 'first_name' , 'email' ) def clean_password2 ( self ): cd = self . cleaned_data if cd [ 'password' ] != cd [ 'password2' ]: raise forms . ValidationError ( 'Passwords don \\' t match.' ) return cd [ 'password2' ] \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043a\u0440\u0438\u043d\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0412\u0445\u043e\u0434 \u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0422\u0443\u0440\u044b \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162"},{"location":"lr2/#no2","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162"},{"location":"lr2/#_1","text":"\u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u0442\u0443\u0440\u0430\u0433\u0435\u043d\u0441\u0442\u0432\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u043f\u0435\u0440\u0438\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0442\u0443\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043e\u043f\u043b\u0430\u0442\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u0442\u0443\u0440\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c. \u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0431\u043e\u0442\u044b","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lr2/#_2","text":"models.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432: \u0442\u0443\u0440\u0438\u0441\u0442, \u0442\u0443\u0440, \u0430\u0433\u0435\u043d\u0441\u0442\u0432\u043e, \u0441\u0442\u0440\u0430\u043d\u0430, \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439; \u0438 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438 from django.db import models from django.db.models.base import Model from django.db.models.deletion import CASCADE from django.contrib.auth.models import AbstractUser from django.contrib.auth import get_user_model class Tourist ( AbstractUser ): username = models . CharField ( max_length = 20 , unique = True ) first_name = models . CharField ( max_length = 20 , null = True ) last_name = models . CharField ( max_length = 20 , null = True ) password = models . CharField ( max_length = 100 , null = True ) def __str__ ( self ): return str ( self . first_name ) Tourist = get_user_model () class Agency ( models . Model ): name = models . CharField ( max_length = 20 ) def __str__ ( self ): return str ( self . name ) class Country ( models . Model ): name = models . CharField ( max_length = 20 ) def __str__ ( self ): return str ( self . name ) class Tour ( models . Model ): name = models . CharField ( max_length = 20 ) description = models . TextField () agency_id = models . ForeignKey ( Agency , on_delete = CASCADE ) beginning_date = models . DateTimeField () ending_date = models . DateTimeField () country = models . ForeignKey ( Country , on_delete = CASCADE , null = True ) price = models . IntegerField ( null = True ) def __str__ ( self ): return str ( self . name ) class Reservation ( models . Model ): tourist_id = models . ForeignKey ( Tourist , on_delete = CASCADE ) tour_id = models . ForeignKey ( Tour , on_delete = CASCADE ) def __str__ ( self ): return str ( self . tour_id ) class Comment ( models . Model ): tourist_id = models . ForeignKey ( Tourist , on_delete = CASCADE ) tour_id = models . ForeignKey ( Tour , on_delete = CASCADE ) title = models . CharField ( max_length = 50 , null = True ) text = models . TextField () beginning_date = models . DateField ( null = True ) ending_date = models . DateField ( null = True ) rating = (( '1' , '1' ), ( '2' , '2' ), ( '3' , '3' ), ( '4' , '4' ), ( '5' , '5' ), ( '6' , '6' ), ( '7' , '7' ), ( '8' , '8' ), ( '9' , '9' ), ( '10' , '10' )) rate = models . CharField ( max_length = 30 , choices = rating ) def __str__ ( self ): return str ( self . title ) views.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 from typing import List from django.shortcuts import render , redirect from django.http import Http404 , HttpResponse from django.contrib.auth import authenticate , login , logout from django.views.generic.list import ListView from django.views.generic.edit import CreateView , DeleteView , UpdateView from .models import Country , Tourist , Tour , Reservation , Comment from .forms import LoginForm , UserRegistrationForm def show_tour ( request , tour_id ): try : tour = Tour . objects . get ( pk = tour_id ) comments = Comment . objects . filter ( tour_id = tour ) except Tour . DoesNotExist : raise Http404 return render ( request , 'tour.html' , { 'tour' : tour , 'comments' : comments }) class All_Tours ( ListView ): model = Tour template_name = 'all_tour.html' @staticmethod def all_countries (): return Country . objects . all () class All_Tours_Registered ( ListView ): model = Tour template_name = 'tour_registered.html' @staticmethod def all_countries (): return Country . objects . all () def tours_registered ( request , tour_id ): try : tour = Tour . objects . get ( pk = tour_id ) comments = Comment . objects . filter ( tour_id = tour ) except Tour . DoesNotExist : raise Http404 return render ( request , 'all_tour_registered.html' , { 'tour' : tour , 'comments' : comments }) def tour_filter_registered ( request , pk ): tours = Tour . objects . all () . filter ( country_id = pk ) return render ( request , 'filter.html' , { 'tours' : tours }) def tour_filter ( request , pk ): tours = Tour . objects . all () . filter ( country_id = pk ) return render ( request , 'filter_nr.html' , { 'tours' : tours }) class Tourist_Page ( ListView ): model = Tourist template_name = 'tourist_page.html' class All_Reservations ( ListView ): model = Reservation template_name = 'all_reservation.html' class Make_Reservation ( CreateView ): model = Reservation template_name = 'reservation_create.html' fields = [ 'tourist_id' , 'tour_id' ] success_url = '/home/registered' class Edit_Reservation ( UpdateView ): model = Reservation template_name = 'reservation_edit.html' fields = [ 'tourist_id' , 'tour_id' ] success_url = '/home/registered' class Delete_Reservation ( DeleteView ): model = Reservation template_name = 'reservation_delete.html' success_url = '/home/registered' class All_Comments ( ListView ): model = Comment template_name = 'all_comment.html' class All_Comments_Registered ( ListView ): model = Comment template_name = 'all_comment_registered.html' class Leave_Comment ( CreateView ): model = Comment template_name = 'comment.html' fields = [ 'tourist_id' , 'tour_id' , 'text' , 'rate' ] success_url = '/tour/registered' class Home ( ListView ): model = Tour template_name = 'home.html' def register ( request ): if request . method == 'POST' : user_form = UserRegistrationForm ( request . POST ) if user_form . is_valid (): # Create a new user object but avoid saving it yet new_user = user_form . save ( commit = False ) # Set the chosen password new_user . set_password ( user_form . cleaned_data [ 'password' ]) # Save the User object new_user . save () return render ( request , 'account/register_done.html' , { 'new_user' : new_user }) else : user_form = UserRegistrationForm () return render ( request , 'account/register.html' , { 'user_form' : user_form }) def user_login ( request ): if request . method == 'POST' : form = LoginForm ( request . POST ) if form . is_valid (): cd = form . cleaned_data user = authenticate ( username = cd [ 'username' ], password = cd [ 'password' ]) if user is not None : if user . is_active : login ( request , user ) return redirect ( '/home/registered' ) else : return HttpResponse ( 'Disabled account' ) else : return HttpResponse ( 'Invalid login' ) else : form = LoginForm () return render ( request , 'account/login.html' , { 'form' : form }) def logout_user ( request ): logout ( request ) return redirect ( '/home/' ) urls.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a from django.urls import path from . import views urlpatterns = [ path ( 'tour/<int:tour_id>' , views . show_tour ), path ( 'tour/registered/<int:tour_id>' , views . tours_registered ), path ( 'tour/registered' , views . All_Tours_Registered . as_view ()), path ( 'tour/' , views . All_Tours . as_view ()), path ( 'reservation_create/' , views . Make_Reservation . as_view ()), path ( 'tour/<int:tour_id>/new_comment' , views . Leave_Comment . as_view ()), path ( 'reservation/<int:pk>/edit/' , views . Edit_Reservation . as_view ()), path ( 'tour/<int:tour_id>/comments/' , views . All_Comments . as_view ()), path ( 'reservation/<int:pk>/delete/' , views . Delete_Reservation . as_view ()), path ( 'accounts/register/' , views . register ), path ( 'accounts/login/' , views . user_login ), path ( 'home/' , views . Home . as_view ()), path ( 'home/registered/' , views . Tourist_Page . as_view ()), path ( 'home/<int:tourist_id>/reservation' , views . All_Reservations . as_view ()), path ( 'accounts/logout' , views . logout_user ), path ( 'tour/registered/<int:tour_id>/comments/' , views . All_Comments_Registered . as_view ()), path ( 'filter/registered/<int:pk>' , views . tour_filter_registered ), path ( 'filter/<int:pk>' , views . tour_filter ) ] forms.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u043e\u0440\u043c: \u0432\u0445\u043e\u0434, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0438 \u0437\u0430\u0431\u044b\u0442\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c from django import forms from .models import Tourist class LoginForm ( forms . Form ): username = forms . CharField () password = forms . CharField ( widget = forms . PasswordInput ) class UserRegistrationForm ( forms . ModelForm ): password = forms . CharField ( label = 'Password' , widget = forms . PasswordInput ) password2 = forms . CharField ( label = 'Repeat password' , widget = forms . PasswordInput ) class Meta : model = Tourist fields = ( 'username' , 'first_name' , 'email' ) def clean_password2 ( self ): cd = self . cleaned_data if cd [ 'password' ] != cd [ 'password2' ]: raise forms . ValidationError ( 'Passwords don \\' t match.' ) return cd [ 'password2' ]","title":"\u0424\u0430\u0439\u043b\u044b"},{"location":"lr2/#_3","text":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0412\u0445\u043e\u0434 \u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0422\u0443\u0440\u044b \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439 \u043f\u043e \u0433\u043e\u0440\u043e\u0434\u0430\u043c","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043a\u0440\u0438\u043d\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:"},{"location":"lr3/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0440\u043e \u0432\u044b\u0441\u0442\u0430\u0432\u043a\u0443 \u0441\u043e\u0431\u0430\u043a. \u0417\u0430\u043f\u0440\u043e\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0434\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c: - \u041d\u0430 \u043a\u0430\u043a\u043e\u043c \u0440\u0438\u043d\u0433\u0435 \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u0435\u0442 \u0441\u043e\u0431\u0430\u043a\u0430 - \u041a\u0430\u043a\u0438\u043c\u0438 \u043f\u043e\u0440\u043e\u0434\u0430\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0443\u0431 - \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043e\u0431\u0430\u043a \u0431\u044b\u043b\u0438 \u043e\u0442\u0441\u0440\u0430\u043d\u0435\u043d\u044b \u043e\u0442 \u0443\u0447\u0430\u0441\u0442\u0438\u044f \u0432 \u0432\u044b\u0441\u0442\u0430\u0432\u043a\u0435 - \u041a\u0430\u043a\u0438\u0435 \u044d\u043a\u0441\u043f\u0435\u0440\u0442\u044b \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u044e\u0442 \u043f\u043e\u0440\u043e\u0434\u0443 - \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u0435 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 DjangoORM (\u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430 \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438). \u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0441\u0442\u0443\u0434\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django ORM. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u0443 API \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django REST Framework (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434\u044b \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438). \u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0431\u043e\u0442\u044b \u0424\u0430\u0439\u043b\u044b models.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0438 \u0438\u0445 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439 from django.db import models from django.contrib.auth.models import AbstractUser class Participant ( models . Model ): name = models . CharField ( max_length = 100 ) breed_types = ( ( 'h' , 'haski' ), ( 't' , 'terrier' ), ( 'b' , 'bulldog' ), ) breed = models . CharField ( max_length = 1 , choices = breed_types ) age = models . IntegerField () family = models . CharField ( max_length = 1000 ) owner_data = models . CharField ( max_length = 1000 ) club = models . ForeignKey ( 'Club' , on_delete = models . CASCADE , null = True , blank = True ) def str ( self ): return self . name class Show ( models . Model ): year = models . IntegerField ( primary_key = True ) show_types = ( ( 'mono' , 'mono-breed' ), ( 'poly' , 'poly-breed' ) ) type = models . CharField ( max_length = 4 , choices = show_types ) participants = models . ManyToManyField ( 'Participant' , # through='Participation', related_name = 'show_participants' ) def str ( self ): return str ( self . year ) class Participation ( models . Model ): participant = models . ForeignKey ( 'Participant' , on_delete = models . CASCADE ) medal_types = ( ( 'g' , 'gold' ), ( 's' , 'silver' ), ( 'b' , 'bronze' ), ) medal = models . CharField ( max_length = 1 , choices = medal_types , null = True , blank = True ) rings = models . ManyToManyField ( 'Ring' , null = True , blank = True ) vaccinated = models . DateField () dismissed = models . BooleanField () final_grade = models . IntegerField ( blank = True , null = True ) def str ( self ): return f ' { self . participant } ' class Expert ( models . Model ): name = models . CharField ( max_length = 50 ) last_name = models . CharField ( max_length = 50 ) club = models . CharField ( max_length = 100 ) def str ( self ): return f ' { self . name } { self . last_name } ' class Club ( models . Model ): name = models . CharField ( max_length = 100 ) members = models . ManyToManyField ( 'Participant' , related_name = 'club_members' ) def str ( self ): return self . name class Ring ( models . Model ): show = models . ForeignKey ( 'Show' , on_delete = models . CASCADE ) experts = models . ManyToManyField ( 'Expert' , # through='Grade' related_name = 'ring_experts' , null = True , blank = True ) breed_types = ( ( 'h' , 'haski' ), ( 't' , 'terrier' ), ( 'b' , 'bulldog' ), ) breed = models . CharField ( max_length = 1 , choices = breed_types ) def str ( self ): return f ' { self . show } { self . breed } ' views.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 from rest_framework import generics from rest_framework.views import APIView , Response from .serializers import * from .models import * from django.db.models.aggregates import Count , Sum class ExpertAPIView ( generics . RetrieveUpdateDestroyAPIView ): serializer_class = ExpertSerializer queryset = Expert . objects . all () class ParticipationAPIList ( generics . ListCreateAPIView ): serializer_class = ParticipationSerializer queryset = Participation . objects . all () class ParticipantAPIList ( generics . ListCreateAPIView ): serializer_class = ParticipantSerializer queryset = Participant . objects . all () class RingParticipationRetrieveAPIView ( generics . RetrieveAPIView ): serializer_class = RingParticipationSerializer queryset = Participation . objects . all () class ClubBreedsRetrieveAPIView ( generics . RetrieveAPIView ): serializer_class = ClubBreedsSerializer queryset = Club . objects . all () class DismissedCountAPIView ( generics . RetrieveAPIView ): serializer_class = DismissedCountSerializer queryset = Participation . objects . all () # leave name class BreedExpertsAPIView ( generics . ListAPIView ): serializer_class = BreedExpertsSerializer queryset = Ring . objects . all () class BreedCountAPIView ( APIView ): def get ( self , request ): # breed_count = Participant.objects.filter(breed=breed).count() breed_count = Participant . objects \\ . values ( 'breed' ) . annotate ( count = Count ( 'breed' )) content = { 'breed_count' : breed_count } return Response ( content ) class BreedCountAPIView ( APIView ): def get ( self , request ): # breed_count = Participant.objects.filter(breed=breed).count() breed_count = Ring . objects \\ . values ( 'breed' ) . annotate ( count = Count ( 'breed' )) content = { 'breed_count' : breed_count } return Response ( content ) # class BreedCountAPIView(generics.ListAPIView): # serializer_class = ParticipantSerializer # lookup_url_kwarg = \"breed\" # # def get_queryset(self): # breed = self.kwargs.get(self.lookup_url_kwarg) # participants = Participant.objects.filter(breed=breed) # print(participants) # return participants class ReportAPIView ( APIView ): def get ( self , request , year ): participants = Show . objects . get ( year = year ) . participants participant_count = participants . count () breed_count = participants . values ( 'breed' ) . annotate ( count = Count ( 'breed' )) best_grades = Participation . objects . filter ( rings__show__year = year ) \\ . values ( 'participant' ) \\ . annotate ( ex_sum = Sum ( 'final_grade' )) \\ . order_by () medals = Participation . objects . values ( 'rings__breed' ) \\ . annotate ( medals_count = Count ( 'medal' )) content = { 'participant_count' : participant_count , 'breeds' : breed_count , 'best_grades' : best_grades , 'medals' : medals } return Response ( content ) serializers.py from rest_framework import serializers from .models import * class ExpertSerializer ( serializers . ModelSerializer ): class Meta : model = Expert fields = \"__all__\" class ParticipationSerializer ( serializers . ModelSerializer ): class Meta : model = Participation fields = \"__all__\" class ParticipantSerializer ( serializers . ModelSerializer ): class Meta : model = Participant fields = \"__all__\" class RingParticipationSerializer ( serializers . ModelSerializer ): class Meta : model = Participation fields = [ \"rings\" ] class ParticipantBreedsSerializer ( serializers . ModelSerializer ): class Meta : model = Participant fields = [ \"breed\" ] class ClubBreedsSerializer ( serializers . ModelSerializer ): members = ParticipantBreedsSerializer ( many = True ) class Meta : model = Club fields = [ \"name\" , \"members\" ] class RingSerializer ( serializers . ModelSerializer ): class Meta : model = Ring fields = \"__all__\" class DismissedCountSerializer ( serializers . ModelSerializer ): dismissed_count = serializers . SerializerMethodField () class Meta : model = Participation fields = [ \"dismissed_count\" ] def get_dismissed_count ( self , obj ): return Participation . objects . filter ( dismissed = True ) . count () class BreedExpertsSerializer ( serializers . ModelSerializer ): experts = ExpertSerializer ( many = True ) class Meta : model = Ring fields = [ \"breed\" , \"experts\" ] urls.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a from django.urls import path from .views import * app_name = \"dogsapp\" urlpatterns = [ path ( 'experts/<int:pk>' , ExpertAPIView . as_view ()), path ( 'participation/' , ParticipationAPIList . as_view ()), path ( 'participants/' , ParticipantAPIList . as_view ()), path ( 'participant_ring/<int:pk>' , RingParticipationRetrieveAPIView . as_view ()), path ( 'club_breeds/<int:pk>' , ClubBreedsRetrieveAPIView . as_view ()), path ( 'dismissed_count/<int:pk>' , DismissedCountAPIView . as_view ()), path ( 'breed_experts/' , BreedExpertsAPIView . as_view ()), path ( 'breeds_count/' , BreedCountAPIView . as_view ()), path ( 'report/<int:year>' , ReportAPIView . as_view ()), ]","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163"},{"location":"lr3/#no2","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162"},{"location":"lr3/#_1","text":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u043f\u0440\u043e \u0432\u044b\u0441\u0442\u0430\u0432\u043a\u0443 \u0441\u043e\u0431\u0430\u043a. \u0417\u0430\u043f\u0440\u043e\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0434\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c: - \u041d\u0430 \u043a\u0430\u043a\u043e\u043c \u0440\u0438\u043d\u0433\u0435 \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u0435\u0442 \u0441\u043e\u0431\u0430\u043a\u0430 - \u041a\u0430\u043a\u0438\u043c\u0438 \u043f\u043e\u0440\u043e\u0434\u0430\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0443\u0431 - \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043e\u0431\u0430\u043a \u0431\u044b\u043b\u0438 \u043e\u0442\u0441\u0440\u0430\u043d\u0435\u043d\u044b \u043e\u0442 \u0443\u0447\u0430\u0441\u0442\u0438\u044f \u0432 \u0432\u044b\u0441\u0442\u0430\u0432\u043a\u0435 - \u041a\u0430\u043a\u0438\u0435 \u044d\u043a\u0441\u043f\u0435\u0440\u0442\u044b \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u044e\u0442 \u043f\u043e\u0440\u043e\u0434\u0443 - \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u0435 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 DjangoORM (\u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u043d\u0430 \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438). \u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438, \u0441\u0442\u0443\u0434\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django ORM. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u0443 API \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django REST Framework (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434\u044b \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438). \u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0440\u0430\u0431\u043e\u0442\u044b","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lr3/#_2","text":"models.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0438 \u0438\u0445 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439 from django.db import models from django.contrib.auth.models import AbstractUser class Participant ( models . Model ): name = models . CharField ( max_length = 100 ) breed_types = ( ( 'h' , 'haski' ), ( 't' , 'terrier' ), ( 'b' , 'bulldog' ), ) breed = models . CharField ( max_length = 1 , choices = breed_types ) age = models . IntegerField () family = models . CharField ( max_length = 1000 ) owner_data = models . CharField ( max_length = 1000 ) club = models . ForeignKey ( 'Club' , on_delete = models . CASCADE , null = True , blank = True ) def str ( self ): return self . name class Show ( models . Model ): year = models . IntegerField ( primary_key = True ) show_types = ( ( 'mono' , 'mono-breed' ), ( 'poly' , 'poly-breed' ) ) type = models . CharField ( max_length = 4 , choices = show_types ) participants = models . ManyToManyField ( 'Participant' , # through='Participation', related_name = 'show_participants' ) def str ( self ): return str ( self . year ) class Participation ( models . Model ): participant = models . ForeignKey ( 'Participant' , on_delete = models . CASCADE ) medal_types = ( ( 'g' , 'gold' ), ( 's' , 'silver' ), ( 'b' , 'bronze' ), ) medal = models . CharField ( max_length = 1 , choices = medal_types , null = True , blank = True ) rings = models . ManyToManyField ( 'Ring' , null = True , blank = True ) vaccinated = models . DateField () dismissed = models . BooleanField () final_grade = models . IntegerField ( blank = True , null = True ) def str ( self ): return f ' { self . participant } ' class Expert ( models . Model ): name = models . CharField ( max_length = 50 ) last_name = models . CharField ( max_length = 50 ) club = models . CharField ( max_length = 100 ) def str ( self ): return f ' { self . name } { self . last_name } ' class Club ( models . Model ): name = models . CharField ( max_length = 100 ) members = models . ManyToManyField ( 'Participant' , related_name = 'club_members' ) def str ( self ): return self . name class Ring ( models . Model ): show = models . ForeignKey ( 'Show' , on_delete = models . CASCADE ) experts = models . ManyToManyField ( 'Expert' , # through='Grade' related_name = 'ring_experts' , null = True , blank = True ) breed_types = ( ( 'h' , 'haski' ), ( 't' , 'terrier' ), ( 'b' , 'bulldog' ), ) breed = models . CharField ( max_length = 1 , choices = breed_types ) def str ( self ): return f ' { self . show } { self . breed } ' views.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 from rest_framework import generics from rest_framework.views import APIView , Response from .serializers import * from .models import * from django.db.models.aggregates import Count , Sum class ExpertAPIView ( generics . RetrieveUpdateDestroyAPIView ): serializer_class = ExpertSerializer queryset = Expert . objects . all () class ParticipationAPIList ( generics . ListCreateAPIView ): serializer_class = ParticipationSerializer queryset = Participation . objects . all () class ParticipantAPIList ( generics . ListCreateAPIView ): serializer_class = ParticipantSerializer queryset = Participant . objects . all () class RingParticipationRetrieveAPIView ( generics . RetrieveAPIView ): serializer_class = RingParticipationSerializer queryset = Participation . objects . all () class ClubBreedsRetrieveAPIView ( generics . RetrieveAPIView ): serializer_class = ClubBreedsSerializer queryset = Club . objects . all () class DismissedCountAPIView ( generics . RetrieveAPIView ): serializer_class = DismissedCountSerializer queryset = Participation . objects . all () # leave name class BreedExpertsAPIView ( generics . ListAPIView ): serializer_class = BreedExpertsSerializer queryset = Ring . objects . all () class BreedCountAPIView ( APIView ): def get ( self , request ): # breed_count = Participant.objects.filter(breed=breed).count() breed_count = Participant . objects \\ . values ( 'breed' ) . annotate ( count = Count ( 'breed' )) content = { 'breed_count' : breed_count } return Response ( content ) class BreedCountAPIView ( APIView ): def get ( self , request ): # breed_count = Participant.objects.filter(breed=breed).count() breed_count = Ring . objects \\ . values ( 'breed' ) . annotate ( count = Count ( 'breed' )) content = { 'breed_count' : breed_count } return Response ( content ) # class BreedCountAPIView(generics.ListAPIView): # serializer_class = ParticipantSerializer # lookup_url_kwarg = \"breed\" # # def get_queryset(self): # breed = self.kwargs.get(self.lookup_url_kwarg) # participants = Participant.objects.filter(breed=breed) # print(participants) # return participants class ReportAPIView ( APIView ): def get ( self , request , year ): participants = Show . objects . get ( year = year ) . participants participant_count = participants . count () breed_count = participants . values ( 'breed' ) . annotate ( count = Count ( 'breed' )) best_grades = Participation . objects . filter ( rings__show__year = year ) \\ . values ( 'participant' ) \\ . annotate ( ex_sum = Sum ( 'final_grade' )) \\ . order_by () medals = Participation . objects . values ( 'rings__breed' ) \\ . annotate ( medals_count = Count ( 'medal' )) content = { 'participant_count' : participant_count , 'breeds' : breed_count , 'best_grades' : best_grades , 'medals' : medals } return Response ( content ) serializers.py from rest_framework import serializers from .models import * class ExpertSerializer ( serializers . ModelSerializer ): class Meta : model = Expert fields = \"__all__\" class ParticipationSerializer ( serializers . ModelSerializer ): class Meta : model = Participation fields = \"__all__\" class ParticipantSerializer ( serializers . ModelSerializer ): class Meta : model = Participant fields = \"__all__\" class RingParticipationSerializer ( serializers . ModelSerializer ): class Meta : model = Participation fields = [ \"rings\" ] class ParticipantBreedsSerializer ( serializers . ModelSerializer ): class Meta : model = Participant fields = [ \"breed\" ] class ClubBreedsSerializer ( serializers . ModelSerializer ): members = ParticipantBreedsSerializer ( many = True ) class Meta : model = Club fields = [ \"name\" , \"members\" ] class RingSerializer ( serializers . ModelSerializer ): class Meta : model = Ring fields = \"__all__\" class DismissedCountSerializer ( serializers . ModelSerializer ): dismissed_count = serializers . SerializerMethodField () class Meta : model = Participation fields = [ \"dismissed_count\" ] def get_dismissed_count ( self , obj ): return Participation . objects . filter ( dismissed = True ) . count () class BreedExpertsSerializer ( serializers . ModelSerializer ): experts = ExpertSerializer ( many = True ) class Meta : model = Ring fields = [ \"breed\" , \"experts\" ] urls.py \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a from django.urls import path from .views import * app_name = \"dogsapp\" urlpatterns = [ path ( 'experts/<int:pk>' , ExpertAPIView . as_view ()), path ( 'participation/' , ParticipationAPIList . as_view ()), path ( 'participants/' , ParticipantAPIList . as_view ()), path ( 'participant_ring/<int:pk>' , RingParticipationRetrieveAPIView . as_view ()), path ( 'club_breeds/<int:pk>' , ClubBreedsRetrieveAPIView . as_view ()), path ( 'dismissed_count/<int:pk>' , DismissedCountAPIView . as_view ()), path ( 'breed_experts/' , BreedExpertsAPIView . as_view ()), path ( 'breeds_count/' , BreedCountAPIView . as_view ()), path ( 'report/<int:year>' , ReportAPIView . as_view ()), ]","title":"\u0424\u0430\u0439\u043b\u044b"},{"location":"lr4/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c vuetify \u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 MkDocs \u0424\u0430\u0439\u043b\u044b App.vue import Vue from 'vue' ; import VueRouter from 'vue-router' ; import SignIn from '../views/reader/SignIn.vue' import SignUp from '../views/reader/SignUp.vue' import Home from '../views/Home.vue' import Profile from '../views/reader/Profile.vue' import ProfileEdit from '../views/reader/ProfileEdit.vue' import LogOut from '../views/reader/LogOut.vue' import ParticipationView from \"@/components/ParticipationView.vue\" ; import ExpertsView from \"@/components/ExpertsView.vue\" ; import ParticipantsView from \"@/components/ParticipantsView.vue\" ; import DogRegister from \"@/views/reader/DogRegister.vue\" import DogGrade from \"@/views/reader/DogGrade.vue\" Vue . use ( VueRouter ) const routes = [ { path : '/' , name : 'home' , component : Home }, { path : '/show/signup' , name : 'signup' , component : SignUp }, { path : '/show/logout' , name : 'logout' , component : LogOut }, { path : '/show/signin' , name : 'signin' , component : SignIn }, { path : '/show/profile' , name : 'profile' , component : Profile }, { path : '/show/profile/edit' , name : 'profile_edit' , component : ProfileEdit }, { path : '/about' , name : 'about' , // route level code-splitting // this generates a separate chunk (about.[hash].js) for this route // which is lazy-loaded when the route is visited. component : () => import ( /* webpackChunkName: \"about\" */ '../views/AboutView.vue' ) }, { path : '/participation' , // \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 url-\u0430\u0434\u0440\u0435\u0441 component : ParticipationView // \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 }, { path : '/experts' , // \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 url-\u0430\u0434\u0440\u0435\u0441 component : ExpertsView // \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 }, { path : '/participants' , // \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 url-\u0430\u0434\u0440\u0435\u0441 component : ParticipantsView // \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 }, { path : '/show/profile/regdog' , name : 'regdog' , component : DogRegister }, { path : '/show/profile/grading' , name : 'grading' , component : DogGrade } ] const router = new VueRouter ({ mode : 'history' , base : process . env . BASE_URL , routes }) export default router router/index.js < template > < v-app > < v-app-bar app color = \"#8D6E63\" dark > < div class = \"d-flex align-center\" > < v-icon size = \"46\" > mdi-dog </ v-icon > < div class = \"text-h4\" > DogsApp </ div > </ div > < v-spacer ></ v-spacer > </ v-app-bar > < v-main > < router-view /> </ v-main > </ v-app > </ template > < script > //import Home from \"@/views/Home.vue\" export default { name : 'App' , // components: { // Home // }, data : () => ({ // }), }; </ script > Views Home.vue < template > < div > < v-card elevation = \"2\" outlined class = \"my-2\" > < v-card-title > < h2 > \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0448\u043e\u0443 \u0441\u043e\u0431\u0430\u043a! </ h2 > </ v-card-title > < v-card-text > < h2 > < a href = \"/participation\" style = \"text-decoration: none; color: #4E342E\" > \u0423\u0447\u0430\u0441\u0442\u0438\u044f </ a >< br > < a href = \"/experts\" style = \"text-decoration: none; color: #4E342E\" > \u042d\u043a\u0441\u043f\u0435\u0440\u0442\u044b </ a >< br > < a href = \"/participants\" style = \"text-decoration: none; color: #4E342E\" > \u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0438 </ a > < br > < template v-if = \"this.authorized\" > < a @ click = \"goProfile\" style = \"text-decoration: none; color: #4E342E\" > \u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 </ a >< br > < a @ click = \"goLogOut\" style = \"text-decoration: none; color: #4E342E\" > \u0412\u044b\u0439\u0442\u0438 </ a >< br > </ template > < template v-else > < a @ click = \"goSignIn\" style = \"text-decoration: none; color: #4E342E\" > \u0412\u043e\u0439\u0442\u0438 </ a >< br > < router-link to = \"/show/signup\" style = \"text-decoration: none; color: #4E342E\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f </ router-link > </ template > </ h2 > </ v-card-text > </ v-card > </ div > </ template > < script > // @ is an alias to /src /* eslint-disable */ export default { name : 'Home' , data : () => ({ authorized : false }), created () { console . log ( 'hehe' + ' ' + sessionStorage . getItem ( 'auth_token' )) console . log ( 'hehe' + ' ' + sessionStorage . getItem ( 'username' )) if ( sessionStorage . getItem ( 'auth_token' )) { if ( sessionStorage . getItem ( 'auth_token' ) !== '-1' ) { this . authorized = true } } }, methods : { goProfile () { this . $router . push ({ name : 'profile' }) }, goLogOut () { this . $router . push ({ name : 'logout' }) }, goSignIn () { this . $router . push ({ name : 'signin' }) } } } </ script > DogGrade.vue < template > < div class = \"edit\" > < h3 > \u041e\u0446\u0435\u043d\u043a\u0430 \u0441\u043e\u0431\u0430\u043a\u0438 </ h3 > < v-form @ submit . prevent = \"signPart\" ref = \"editFormPart\" class = \"my-2\" > < v-row > < v-col cols = \"5\" class = \"mx-auto\" > < v-select v-model = \"editFormPart.participant\" :items = \"participants\" item-text = \"name\" item-value = \"id\" name = \"participant\" label = \"\u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a\" ></ v-select > < v-select v-model = \"editFormPart.medal\" :items = \"medals\" name = \"medal\" label = \"\u041c\u0435\u0434\u0430\u043b\u044c\" ></ v-select > < v-text-field label = \"\u0414\u0430\u0442\u0430 \u0432\u0430\u043a\u0446\u0438\u043d\u0430\u0446\u0438\u0438\" v-model = \"editFormPart.vaccinated\" name = \"vaccinated\" type = \"date\" /> < v-checkbox v-model = \"editFormPart.dismissed\" :label = \"'\u041f\u0440\u043e\u043f\u0443\u0441\u043a \u0443\u0447\u0430\u0441\u0442\u0438\u044f'\" ></ v-checkbox > < v-text-field label = \"\u041e\u0446\u0435\u043d\u043a\u0430\" v-model = \"editFormPart.final_grade\" type = 'number' name = \"final_grade\" /> < v-btn type = \"submit\" color = \"#4E342E\" dark > \u041e\u0446\u0435\u043d\u0438\u0442\u044c </ v-btn > </ v-col > </ v-row > </ v-form > < v-card > < v-card-text style = \"margin-top:1cm\" > < a @ click . prevent = \"goProfile\" style = \"text-decoration: none; color: #4E342E\" > \u041d\u0430\u0437\u0430\u0434 </ a > </ v-card-text > </ v-card > </ div > </ template > < script > import $ from \"jquery\" ; const array1 = []; import axios from \"axios\" ; export default { name : 'DogGrade' , data : () => ({ editFormPart : { medal : \"\" , vaccinated : \"\" , dismissed : \"\" , final_grade : \"\" , participant : \"\" , }, medals : [ 'g' , 's' , 'b' ], participants : array1 , }), methods : { async signPart () { console . log ( 1 ) $ . ajax ({ type : \"POST\" , data : { medal : this . editFormPart . medal , vaccinated : this . editFormPart . vaccinated , dismissed : this . editFormPart . dismissed , final_grade : this . editFormPart . final_grade , participant : this . editFormPart . participant , }, url : \"http://127.0.0.1:8000/participation/\" }). done ( function () { console . log ( this . data ) alert ( \"\u0413\u043e\u0442\u043e\u0432\u043e\" ) //this.$router.push({ name: 'participants' }) //\u0441\u0434\u0435\u043b\u0430\u0442\u044c Participants.vue }); }, goProfile () { this . $router . push ({ name : 'profile' }) } }, beforeMount : function () { this . $nextTick ( async function () { const response = await axios . get ( 'http://127.0.0.1:8000/participants/?format=json' ) for ( let part of response . data ) { array1 . push ( part ); } }) } } </ script > DogRegister.vue < template > < div class = \"edit\" > < h3 > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0441\u043e\u0431\u0430\u043a\u0438 </ h3 > < v-form @ submit . prevent = \"signDogs\" ref = \"editForm\" class = \"my-2\" > < v-row > < v-col cols = \"5\" class = \"mx-auto\" > < v-text-field label = \"\u041a\u043b\u0438\u0447\u043a\u0430\" v-model = \"editForm.name\" name = \"name\" /> < v-select v-model = \"editForm.breed\" :items = \"options\" name = \"breed\" label = \"\u041f\u043e\u0440\u043e\u0434\u0430\" ></ v-select > < v-text-field label = \"\u0412\u043e\u0437\u0440\u0430\u0441\u0442\" v-model = \"editForm.age\" name = \"age\" type = \"number\" /> < v-text-field label = \"\u0420\u043e\u0434\u043e\u0441\u043b\u043e\u0432\u043d\u0430\u044f\" v-model = \"editForm.family\" name = \"family\" /> < v-text-field label = \"\u0414\u0430\u043d\u043d\u044b\u0435 \u0445\u043e\u0437\u044f\u0438\u043d\u0430\" v-model = \"editForm.owner_data\" name = \"owner_data\" /> < v-btn type = \"submit\" color = \"#3E2723\" dark > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c </ v-btn > </ v-col > </ v-row > </ v-form > < v-card > < v-card-text style = \"margin-top:1cm\" > < a @ click . prevent = \"goProfile\" style = \"text-decoration: none; color: #4E342E\" > \u041d\u0430\u0437\u0430\u0434 </ a > </ v-card-text > </ v-card > </ div > </ template > < script > import $ from \"jquery\" ; export default { name : 'DogRegister' , data : () => ({ editForm : { //participant: Object, name : '' , breed : '' , age : '' , family : '' , owner_data : '' , //club, }, options : [ 'h' , 'b' , 't' ], //participants: }), methods : { async signDogs () { console . log ( 1 ) $ . ajax ({ type : \"POST\" , data : { name : this . editForm . name , breed : this . editForm . breed , age : this . editForm . age , family : this . editForm . family , owner_data : this . editForm . owner_data }, url : \"http://127.0.0.1:8000/participants/\" }). done ( function () { console . log ( this . data ) alert ( \"\u0421\u043e\u0431\u0430\u043a\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430\" ) //this.$router.push({ name: 'participants' }) //\u0441\u0434\u0435\u043b\u0430\u0442\u044c Participants.vue }); }, goProfile () { this . $router . push ({ name : 'profile' }) }, } } </ script > LogOut.vue < script > import axios from 'axios' /* eslint-disable */ //Vue.prototype.$axios = axios //import Vue from 'vue' export default { name : 'LogOut' , methods : { LogOut () { try { const token = sessionStorage . getItem ( 'auth_token' ) if ( token ) { const data = {} console . log ( token ) //this.axios.defaults.headers.common.Authorization = `token ${token}` //console.log(this.axios) sessionStorage . setItem ( 'auth_token' , '-1' ) //console.log('h ' + token) axios . post ( 'http://127.0.0.1:8000/auth/token/logout/' , data , { headers : { 'Authorization' : `token ${ token } ` } }). then ( response => { console . log ( 'SIGN OUT RESPONSE' , response ) // localStorage.removeItem('token') // this.$bus.$emit('logged', 'User logged out') this . $router . push ({ name : 'home' }) }) } } catch ( e ) { console . error ( 'AN API ERROR' , e ) } } }, created () { this . LogOut () } } </ script > < style scoped > </ style > Profile.vue < template > < div class = \"edit\" > < h2 > \u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 </ h2 > < h3 > \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c, {{login ()}} </ h3 > < v-card > < v-card-text style = \"margin-top:1cm\" > < div class = \"text--primary\" > \u0418\u043c\u044f: < b > {{ this.first_name }} </ b > < br > \u0424\u0430\u043c\u0438\u043b\u0438\u044f: < b > {{ this.last_name }} </ b >< br > \u0422\u0435\u043b\u0435\u0444\u043e\u043d: < b > {{ this.tel }} </ b >< br > </ div >< br >< br > < a @ click . prevent = \"goRegister\" style = \"text-decoration: none; color: #4E342E\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0431\u0430\u043a\u0443 </ a > < br > < a @ click . prevent = \"goGrade\" style = \"text-decoration: none; color: #4E342E\" > \u041e\u0446\u0435\u043d\u0438\u0442\u044c \u0441\u043e\u0431\u0430\u043a\u0443 </ a > < br > < a @ click . prevent = \"goEdit\" style = \"text-decoration: none; color: #4E342E\" > \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c </ a > < br > < a @ click . prevent = \"goHome\" style = \"text-decoration: none; color: #4E342E\" > \u041d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e </ a > </ v-card-text > </ v-card > </ div > </ template > < script > /* eslint-disable */ import $ from \"jquery\" ; export default { name : 'Profile' , data () { return { userme : Object , first_name : '' , last_name : '' , tel : '' , } }, created () { this . loadReaderData () }, methods : { async loadReaderData () { const response = await this . axios . get ( 'http://127.0.0.1:8000/auth/users/me/' , { headers : { Authorization : `Token ${ sessionStorage . getItem ( 'auth_token' ) } ` } }) this . first_name = response . data . first_name this . last_name = response . data . last_name this . tel = response . data . tel }, goHome () { this . $router . push ({ name : 'home' }) }, goRegister () { this . $router . push ({ name : 'regdog' }) }, goEdit () { this . $router . push ({ name : 'profile_edit' }) }, goGrade () { this . $router . push ({ name : 'grading' }) }, login () { return ( sessionStorage . getItem ( 'username' )) } } } </ script > < style > </ style > ProfileEdit.vue < template > < div class = \"edit\" > < h2 > \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f </ h2 > < v-form @ submit . prevent = \"saveChanges\" ref = \"changeForm\" class = \"my-2\" > < v-row > < v-col cols = \"5\" class = \"mx-auto\" > < v-text-field label = \"\u0418\u043c\u044f\" v-model = \"changeForm.first_name\" name = \"first_name\" /> < v-text-field label = \"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\" v-model = \"changeForm.last_name\" name = \"last_name\" /> < v-text-field label = \"\u0422\u0435\u043b\u0435\u0444\u043e\u043d\" v-model = \"changeForm.tel\" name = \"tel\" /> < v-btn type = \"submit\" color = \"#3E2723\" dark > \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c </ v-btn > </ v-col > </ v-row > </ v-form > < p class = \"mt-15\" >< router-link to = \"/show/profile\" style = \"text-decoration: none; color: #4E342E\" > \u041d\u0430\u0437\u0430\u0434 </ router-link ></ p > </ div > </ template > < script > export default { name : 'ProfileEdit' , data : () => ({ reader_old : Object , changeForm : { // password: '', first_name : '' , last_name : '' , tel : '' , }, }), methods : { // async loadReaderData () { // const response = await this.axios // .get('http://127.0.0.1:8000/auth/users/me/', { // headers: { // Authorization: `Token ${sessionStorage.getItem('auth_token')}` // } // }) // this.reader_old = response.data // this.changeForm.first_name = response.data.first_name // this.changeForm.last_name = response.data.last_name // this.changeForm.tel = response.data.tel // }, async saveChanges () { for ( const [ key , value ] of Object . entries ( this . changeForm )) { if ( value === '' ) { delete this . changeForm [ key ] } } try { const response = await this . axios . patch ( 'http://127.0.0.1:8000/auth/users/me/' , this . changeForm , { headers : { Authorization : `Token ${ sessionStorage . getItem ( 'auth_token' ) } ` } }) console . log ( response ) this . $refs . changeForm . reset () await this . $router . push ({ name : 'profile' }) } catch ( e ) { console . error ( e . message ) } } } } </ script > < style > </ style > SignIn.vue < template > < div class = \"signIn\" > < h2 > \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f </ h2 > < form @ submit . prevent = \"setLogin\" ref = \"signInForm\" class = \"my-2\" > < input type = \"text\" label = \"\u041b\u043e\u0433\u0438\u043d\" placeholder = \"\u041b\u043e\u0433\u0438\u043d\" v-model = \"login\" name = \"login\" > < input label = \"\u041f\u0430\u0440\u043e\u043b\u044c\" placeholder = \"\u041f\u0430\u0440\u043e\u043b\u044c\" v-model = \"password\" name = \"password\" type = \"password\" > < button type = \"submit\" > \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f </ button > </ form > < p class = \"mt-15\" > \u0415\u0449\u0451 \u043d\u0435\u0442 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430? < br > < router-link to = \"/show/signup\" style = \"text-decoration: none; color: #4E342E\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f </ router-link ></ p > </ div > </ template > < script > /* eslint-disable */ import $ from \"jquery\" ; import axios from \"axios\" ; export default { name : \"AuthModals\" , data () { return { login : '' , password : '' , } }, methods : { setLogin () { $ . ajax ({ url : \"http://127.0.0.1:8000/auth/token/login\" , type : \"POST\" , data : { username : this . login , password : this . password }, success : ( response ) => { alert ( \"\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0447\u0442\u043e \u0412\u044b \u0441 \u043d\u0430\u043c\u0438\" ) sessionStorage . setItem ( \"auth_token\" , response . auth_token ) sessionStorage . setItem ( \"username\" , this . login ) this . $router . push ({ name : \"home\" }) }, error : ( response ) => { if ( response . status === 400 ) { alert ( \"\u041b\u043e\u0433\u0438\u043d \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0435 \u0432\u0435\u0440\u0435\u043d\" ) } } }) } } } </ script > < style > </ style > SignUp.vue < template > < div class = \"signup\" > < h2 > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f </ h2 > < form @ submit . prevent = \"signUp\" ref = \"signUpForm\" class = \"my-2\" > < input type = \"text\" label = \"\u041b\u043e\u0433\u0438\u043d\" placeholder = \"\u041b\u043e\u0433\u0438\u043d\" v-model = \"login\" name = \"login\" > < input label = \"\u041f\u0430\u0440\u043e\u043b\u044c\" placeholder = \"\u041f\u0430\u0440\u043e\u043b\u044c\" v-model = \"password\" name = \"password\" type = \"password\" > < button type = \"submit\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f </ button > </ form > < p class = \"mt-15\" > \u0423\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b? < router-link to = \"/show/signin\" style = \"text-decoration: none; color: #4E342E\" > \u0412\u043e\u0439\u0442\u0438 </ router-link ></ p > </ div > </ template > < script > /* eslint-disable */ import $ from \"jquery\" ; export default { name : 'SignUp' , data () { return { login : '' , password : '' , } }, methods : { async signUp () { console . log ( \"1\" ) $ . ajax ({ type : \"POST\" , data : { username : this . login , password : this . password }, url : \"http://127.0.0.1:8000/auth/users/\" }). done ( function () { console . log ( this . data ) alert ( \"\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e\" ) //this.$router.push({ name: 'signin' }) }); } } } </ script > < style > </ style >","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21164"},{"location":"lr4/#no2","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162"},{"location":"lr4/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c vuetify \u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 MkDocs","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lr4/#_2","text":"App.vue import Vue from 'vue' ; import VueRouter from 'vue-router' ; import SignIn from '../views/reader/SignIn.vue' import SignUp from '../views/reader/SignUp.vue' import Home from '../views/Home.vue' import Profile from '../views/reader/Profile.vue' import ProfileEdit from '../views/reader/ProfileEdit.vue' import LogOut from '../views/reader/LogOut.vue' import ParticipationView from \"@/components/ParticipationView.vue\" ; import ExpertsView from \"@/components/ExpertsView.vue\" ; import ParticipantsView from \"@/components/ParticipantsView.vue\" ; import DogRegister from \"@/views/reader/DogRegister.vue\" import DogGrade from \"@/views/reader/DogGrade.vue\" Vue . use ( VueRouter ) const routes = [ { path : '/' , name : 'home' , component : Home }, { path : '/show/signup' , name : 'signup' , component : SignUp }, { path : '/show/logout' , name : 'logout' , component : LogOut }, { path : '/show/signin' , name : 'signin' , component : SignIn }, { path : '/show/profile' , name : 'profile' , component : Profile }, { path : '/show/profile/edit' , name : 'profile_edit' , component : ProfileEdit }, { path : '/about' , name : 'about' , // route level code-splitting // this generates a separate chunk (about.[hash].js) for this route // which is lazy-loaded when the route is visited. component : () => import ( /* webpackChunkName: \"about\" */ '../views/AboutView.vue' ) }, { path : '/participation' , // \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 url-\u0430\u0434\u0440\u0435\u0441 component : ParticipationView // \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 }, { path : '/experts' , // \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 url-\u0430\u0434\u0440\u0435\u0441 component : ExpertsView // \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 }, { path : '/participants' , // \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0439 url-\u0430\u0434\u0440\u0435\u0441 component : ParticipantsView // \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 }, { path : '/show/profile/regdog' , name : 'regdog' , component : DogRegister }, { path : '/show/profile/grading' , name : 'grading' , component : DogGrade } ] const router = new VueRouter ({ mode : 'history' , base : process . env . BASE_URL , routes }) export default router router/index.js < template > < v-app > < v-app-bar app color = \"#8D6E63\" dark > < div class = \"d-flex align-center\" > < v-icon size = \"46\" > mdi-dog </ v-icon > < div class = \"text-h4\" > DogsApp </ div > </ div > < v-spacer ></ v-spacer > </ v-app-bar > < v-main > < router-view /> </ v-main > </ v-app > </ template > < script > //import Home from \"@/views/Home.vue\" export default { name : 'App' , // components: { // Home // }, data : () => ({ // }), }; </ script >","title":"\u0424\u0430\u0439\u043b\u044b"},{"location":"lr4/#views","text":"Home.vue < template > < div > < v-card elevation = \"2\" outlined class = \"my-2\" > < v-card-title > < h2 > \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0448\u043e\u0443 \u0441\u043e\u0431\u0430\u043a! </ h2 > </ v-card-title > < v-card-text > < h2 > < a href = \"/participation\" style = \"text-decoration: none; color: #4E342E\" > \u0423\u0447\u0430\u0441\u0442\u0438\u044f </ a >< br > < a href = \"/experts\" style = \"text-decoration: none; color: #4E342E\" > \u042d\u043a\u0441\u043f\u0435\u0440\u0442\u044b </ a >< br > < a href = \"/participants\" style = \"text-decoration: none; color: #4E342E\" > \u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0438 </ a > < br > < template v-if = \"this.authorized\" > < a @ click = \"goProfile\" style = \"text-decoration: none; color: #4E342E\" > \u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 </ a >< br > < a @ click = \"goLogOut\" style = \"text-decoration: none; color: #4E342E\" > \u0412\u044b\u0439\u0442\u0438 </ a >< br > </ template > < template v-else > < a @ click = \"goSignIn\" style = \"text-decoration: none; color: #4E342E\" > \u0412\u043e\u0439\u0442\u0438 </ a >< br > < router-link to = \"/show/signup\" style = \"text-decoration: none; color: #4E342E\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f </ router-link > </ template > </ h2 > </ v-card-text > </ v-card > </ div > </ template > < script > // @ is an alias to /src /* eslint-disable */ export default { name : 'Home' , data : () => ({ authorized : false }), created () { console . log ( 'hehe' + ' ' + sessionStorage . getItem ( 'auth_token' )) console . log ( 'hehe' + ' ' + sessionStorage . getItem ( 'username' )) if ( sessionStorage . getItem ( 'auth_token' )) { if ( sessionStorage . getItem ( 'auth_token' ) !== '-1' ) { this . authorized = true } } }, methods : { goProfile () { this . $router . push ({ name : 'profile' }) }, goLogOut () { this . $router . push ({ name : 'logout' }) }, goSignIn () { this . $router . push ({ name : 'signin' }) } } } </ script > DogGrade.vue < template > < div class = \"edit\" > < h3 > \u041e\u0446\u0435\u043d\u043a\u0430 \u0441\u043e\u0431\u0430\u043a\u0438 </ h3 > < v-form @ submit . prevent = \"signPart\" ref = \"editFormPart\" class = \"my-2\" > < v-row > < v-col cols = \"5\" class = \"mx-auto\" > < v-select v-model = \"editFormPart.participant\" :items = \"participants\" item-text = \"name\" item-value = \"id\" name = \"participant\" label = \"\u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a\" ></ v-select > < v-select v-model = \"editFormPart.medal\" :items = \"medals\" name = \"medal\" label = \"\u041c\u0435\u0434\u0430\u043b\u044c\" ></ v-select > < v-text-field label = \"\u0414\u0430\u0442\u0430 \u0432\u0430\u043a\u0446\u0438\u043d\u0430\u0446\u0438\u0438\" v-model = \"editFormPart.vaccinated\" name = \"vaccinated\" type = \"date\" /> < v-checkbox v-model = \"editFormPart.dismissed\" :label = \"'\u041f\u0440\u043e\u043f\u0443\u0441\u043a \u0443\u0447\u0430\u0441\u0442\u0438\u044f'\" ></ v-checkbox > < v-text-field label = \"\u041e\u0446\u0435\u043d\u043a\u0430\" v-model = \"editFormPart.final_grade\" type = 'number' name = \"final_grade\" /> < v-btn type = \"submit\" color = \"#4E342E\" dark > \u041e\u0446\u0435\u043d\u0438\u0442\u044c </ v-btn > </ v-col > </ v-row > </ v-form > < v-card > < v-card-text style = \"margin-top:1cm\" > < a @ click . prevent = \"goProfile\" style = \"text-decoration: none; color: #4E342E\" > \u041d\u0430\u0437\u0430\u0434 </ a > </ v-card-text > </ v-card > </ div > </ template > < script > import $ from \"jquery\" ; const array1 = []; import axios from \"axios\" ; export default { name : 'DogGrade' , data : () => ({ editFormPart : { medal : \"\" , vaccinated : \"\" , dismissed : \"\" , final_grade : \"\" , participant : \"\" , }, medals : [ 'g' , 's' , 'b' ], participants : array1 , }), methods : { async signPart () { console . log ( 1 ) $ . ajax ({ type : \"POST\" , data : { medal : this . editFormPart . medal , vaccinated : this . editFormPart . vaccinated , dismissed : this . editFormPart . dismissed , final_grade : this . editFormPart . final_grade , participant : this . editFormPart . participant , }, url : \"http://127.0.0.1:8000/participation/\" }). done ( function () { console . log ( this . data ) alert ( \"\u0413\u043e\u0442\u043e\u0432\u043e\" ) //this.$router.push({ name: 'participants' }) //\u0441\u0434\u0435\u043b\u0430\u0442\u044c Participants.vue }); }, goProfile () { this . $router . push ({ name : 'profile' }) } }, beforeMount : function () { this . $nextTick ( async function () { const response = await axios . get ( 'http://127.0.0.1:8000/participants/?format=json' ) for ( let part of response . data ) { array1 . push ( part ); } }) } } </ script > DogRegister.vue < template > < div class = \"edit\" > < h3 > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0441\u043e\u0431\u0430\u043a\u0438 </ h3 > < v-form @ submit . prevent = \"signDogs\" ref = \"editForm\" class = \"my-2\" > < v-row > < v-col cols = \"5\" class = \"mx-auto\" > < v-text-field label = \"\u041a\u043b\u0438\u0447\u043a\u0430\" v-model = \"editForm.name\" name = \"name\" /> < v-select v-model = \"editForm.breed\" :items = \"options\" name = \"breed\" label = \"\u041f\u043e\u0440\u043e\u0434\u0430\" ></ v-select > < v-text-field label = \"\u0412\u043e\u0437\u0440\u0430\u0441\u0442\" v-model = \"editForm.age\" name = \"age\" type = \"number\" /> < v-text-field label = \"\u0420\u043e\u0434\u043e\u0441\u043b\u043e\u0432\u043d\u0430\u044f\" v-model = \"editForm.family\" name = \"family\" /> < v-text-field label = \"\u0414\u0430\u043d\u043d\u044b\u0435 \u0445\u043e\u0437\u044f\u0438\u043d\u0430\" v-model = \"editForm.owner_data\" name = \"owner_data\" /> < v-btn type = \"submit\" color = \"#3E2723\" dark > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c </ v-btn > </ v-col > </ v-row > </ v-form > < v-card > < v-card-text style = \"margin-top:1cm\" > < a @ click . prevent = \"goProfile\" style = \"text-decoration: none; color: #4E342E\" > \u041d\u0430\u0437\u0430\u0434 </ a > </ v-card-text > </ v-card > </ div > </ template > < script > import $ from \"jquery\" ; export default { name : 'DogRegister' , data : () => ({ editForm : { //participant: Object, name : '' , breed : '' , age : '' , family : '' , owner_data : '' , //club, }, options : [ 'h' , 'b' , 't' ], //participants: }), methods : { async signDogs () { console . log ( 1 ) $ . ajax ({ type : \"POST\" , data : { name : this . editForm . name , breed : this . editForm . breed , age : this . editForm . age , family : this . editForm . family , owner_data : this . editForm . owner_data }, url : \"http://127.0.0.1:8000/participants/\" }). done ( function () { console . log ( this . data ) alert ( \"\u0421\u043e\u0431\u0430\u043a\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430\" ) //this.$router.push({ name: 'participants' }) //\u0441\u0434\u0435\u043b\u0430\u0442\u044c Participants.vue }); }, goProfile () { this . $router . push ({ name : 'profile' }) }, } } </ script > LogOut.vue < script > import axios from 'axios' /* eslint-disable */ //Vue.prototype.$axios = axios //import Vue from 'vue' export default { name : 'LogOut' , methods : { LogOut () { try { const token = sessionStorage . getItem ( 'auth_token' ) if ( token ) { const data = {} console . log ( token ) //this.axios.defaults.headers.common.Authorization = `token ${token}` //console.log(this.axios) sessionStorage . setItem ( 'auth_token' , '-1' ) //console.log('h ' + token) axios . post ( 'http://127.0.0.1:8000/auth/token/logout/' , data , { headers : { 'Authorization' : `token ${ token } ` } }). then ( response => { console . log ( 'SIGN OUT RESPONSE' , response ) // localStorage.removeItem('token') // this.$bus.$emit('logged', 'User logged out') this . $router . push ({ name : 'home' }) }) } } catch ( e ) { console . error ( 'AN API ERROR' , e ) } } }, created () { this . LogOut () } } </ script > < style scoped > </ style > Profile.vue < template > < div class = \"edit\" > < h2 > \u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 </ h2 > < h3 > \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c, {{login ()}} </ h3 > < v-card > < v-card-text style = \"margin-top:1cm\" > < div class = \"text--primary\" > \u0418\u043c\u044f: < b > {{ this.first_name }} </ b > < br > \u0424\u0430\u043c\u0438\u043b\u0438\u044f: < b > {{ this.last_name }} </ b >< br > \u0422\u0435\u043b\u0435\u0444\u043e\u043d: < b > {{ this.tel }} </ b >< br > </ div >< br >< br > < a @ click . prevent = \"goRegister\" style = \"text-decoration: none; color: #4E342E\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0431\u0430\u043a\u0443 </ a > < br > < a @ click . prevent = \"goGrade\" style = \"text-decoration: none; color: #4E342E\" > \u041e\u0446\u0435\u043d\u0438\u0442\u044c \u0441\u043e\u0431\u0430\u043a\u0443 </ a > < br > < a @ click . prevent = \"goEdit\" style = \"text-decoration: none; color: #4E342E\" > \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c </ a > < br > < a @ click . prevent = \"goHome\" style = \"text-decoration: none; color: #4E342E\" > \u041d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e </ a > </ v-card-text > </ v-card > </ div > </ template > < script > /* eslint-disable */ import $ from \"jquery\" ; export default { name : 'Profile' , data () { return { userme : Object , first_name : '' , last_name : '' , tel : '' , } }, created () { this . loadReaderData () }, methods : { async loadReaderData () { const response = await this . axios . get ( 'http://127.0.0.1:8000/auth/users/me/' , { headers : { Authorization : `Token ${ sessionStorage . getItem ( 'auth_token' ) } ` } }) this . first_name = response . data . first_name this . last_name = response . data . last_name this . tel = response . data . tel }, goHome () { this . $router . push ({ name : 'home' }) }, goRegister () { this . $router . push ({ name : 'regdog' }) }, goEdit () { this . $router . push ({ name : 'profile_edit' }) }, goGrade () { this . $router . push ({ name : 'grading' }) }, login () { return ( sessionStorage . getItem ( 'username' )) } } } </ script > < style > </ style > ProfileEdit.vue < template > < div class = \"edit\" > < h2 > \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f </ h2 > < v-form @ submit . prevent = \"saveChanges\" ref = \"changeForm\" class = \"my-2\" > < v-row > < v-col cols = \"5\" class = \"mx-auto\" > < v-text-field label = \"\u0418\u043c\u044f\" v-model = \"changeForm.first_name\" name = \"first_name\" /> < v-text-field label = \"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\" v-model = \"changeForm.last_name\" name = \"last_name\" /> < v-text-field label = \"\u0422\u0435\u043b\u0435\u0444\u043e\u043d\" v-model = \"changeForm.tel\" name = \"tel\" /> < v-btn type = \"submit\" color = \"#3E2723\" dark > \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c </ v-btn > </ v-col > </ v-row > </ v-form > < p class = \"mt-15\" >< router-link to = \"/show/profile\" style = \"text-decoration: none; color: #4E342E\" > \u041d\u0430\u0437\u0430\u0434 </ router-link ></ p > </ div > </ template > < script > export default { name : 'ProfileEdit' , data : () => ({ reader_old : Object , changeForm : { // password: '', first_name : '' , last_name : '' , tel : '' , }, }), methods : { // async loadReaderData () { // const response = await this.axios // .get('http://127.0.0.1:8000/auth/users/me/', { // headers: { // Authorization: `Token ${sessionStorage.getItem('auth_token')}` // } // }) // this.reader_old = response.data // this.changeForm.first_name = response.data.first_name // this.changeForm.last_name = response.data.last_name // this.changeForm.tel = response.data.tel // }, async saveChanges () { for ( const [ key , value ] of Object . entries ( this . changeForm )) { if ( value === '' ) { delete this . changeForm [ key ] } } try { const response = await this . axios . patch ( 'http://127.0.0.1:8000/auth/users/me/' , this . changeForm , { headers : { Authorization : `Token ${ sessionStorage . getItem ( 'auth_token' ) } ` } }) console . log ( response ) this . $refs . changeForm . reset () await this . $router . push ({ name : 'profile' }) } catch ( e ) { console . error ( e . message ) } } } } </ script > < style > </ style > SignIn.vue < template > < div class = \"signIn\" > < h2 > \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f </ h2 > < form @ submit . prevent = \"setLogin\" ref = \"signInForm\" class = \"my-2\" > < input type = \"text\" label = \"\u041b\u043e\u0433\u0438\u043d\" placeholder = \"\u041b\u043e\u0433\u0438\u043d\" v-model = \"login\" name = \"login\" > < input label = \"\u041f\u0430\u0440\u043e\u043b\u044c\" placeholder = \"\u041f\u0430\u0440\u043e\u043b\u044c\" v-model = \"password\" name = \"password\" type = \"password\" > < button type = \"submit\" > \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f </ button > </ form > < p class = \"mt-15\" > \u0415\u0449\u0451 \u043d\u0435\u0442 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430? < br > < router-link to = \"/show/signup\" style = \"text-decoration: none; color: #4E342E\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f </ router-link ></ p > </ div > </ template > < script > /* eslint-disable */ import $ from \"jquery\" ; import axios from \"axios\" ; export default { name : \"AuthModals\" , data () { return { login : '' , password : '' , } }, methods : { setLogin () { $ . ajax ({ url : \"http://127.0.0.1:8000/auth/token/login\" , type : \"POST\" , data : { username : this . login , password : this . password }, success : ( response ) => { alert ( \"\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0447\u0442\u043e \u0412\u044b \u0441 \u043d\u0430\u043c\u0438\" ) sessionStorage . setItem ( \"auth_token\" , response . auth_token ) sessionStorage . setItem ( \"username\" , this . login ) this . $router . push ({ name : \"home\" }) }, error : ( response ) => { if ( response . status === 400 ) { alert ( \"\u041b\u043e\u0433\u0438\u043d \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0435 \u0432\u0435\u0440\u0435\u043d\" ) } } }) } } } </ script > < style > </ style > SignUp.vue < template > < div class = \"signup\" > < h2 > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f </ h2 > < form @ submit . prevent = \"signUp\" ref = \"signUpForm\" class = \"my-2\" > < input type = \"text\" label = \"\u041b\u043e\u0433\u0438\u043d\" placeholder = \"\u041b\u043e\u0433\u0438\u043d\" v-model = \"login\" name = \"login\" > < input label = \"\u041f\u0430\u0440\u043e\u043b\u044c\" placeholder = \"\u041f\u0430\u0440\u043e\u043b\u044c\" v-model = \"password\" name = \"password\" type = \"password\" > < button type = \"submit\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f </ button > </ form > < p class = \"mt-15\" > \u0423\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b? < router-link to = \"/show/signin\" style = \"text-decoration: none; color: #4E342E\" > \u0412\u043e\u0439\u0442\u0438 </ router-link ></ p > </ div > </ template > < script > /* eslint-disable */ import $ from \"jquery\" ; export default { name : 'SignUp' , data () { return { login : '' , password : '' , } }, methods : { async signUp () { console . log ( \"1\" ) $ . ajax ({ type : \"POST\" , data : { username : this . login , password : this . password }, url : \"http://127.0.0.1:8000/auth/users/\" }). done ( function () { console . log ( this . data ) alert ( \"\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e\" ) //this.$router.push({ name: 'signin' }) }); } } } </ script > < style > </ style >","title":"Views"},{"location":"pr3_1/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1 Django \u0437\u0430\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.1 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. models.py - \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 class CarOwner ( AbstractUser ): id_owner = models . IntegerField ( primary_key = True ) last_name = models . CharField ( max_length = 30 , null = False ) first_name = models . CharField ( max_length = 30 , null = False ) birth_day = models . DateField ( null = True ) passport = models . IntegerField ( null = True ) address = models . CharField ( max_length = 50 , null = True , blank = True ) nationality = models . CharField ( max_length = 20 , null = True , blank = True ) class Car ( models . Model ): id_car = models . IntegerField ( primary_key = True ) state_number = models . CharField ( max_length = 15 , null = False ) mark_car = models . CharField ( max_length = 20 , null = False ) model_car = models . CharField ( max_length = 20 , null = False ) color = models . CharField ( max_length = 30 , null = False ) class Ownership ( models . Model ): id_owner_car = models . IntegerField ( primary_key = True ) id_owner = models . ForeignKey ( CarOwner , on_delete = models . CASCADE ) id_car = models . ForeignKey ( Car , on_delete = models . CASCADE ) start_date = models . DateField () end_date = models . DateField ( null = True ) class DriverLicense ( models . Model ): id_license = models . IntegerField ( primary_key = True ) id_owner = models . ForeignKey ( CarOwner , on_delete = models . CASCADE ) license_number = models . CharField ( max_length = 10 , null = False ) type = models . CharField ( max_length = 10 , null = False ) date_of_license = models . DateField () \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u0438\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0438\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 \u0421\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c \u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.2 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435): \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430): \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435): \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.3 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435: \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438: \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1"},{"location":"pr3_1/#no31","text":"Django \u0437\u0430\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435.","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1"},{"location":"pr3_1/#311","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. models.py - \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 class CarOwner ( AbstractUser ): id_owner = models . IntegerField ( primary_key = True ) last_name = models . CharField ( max_length = 30 , null = False ) first_name = models . CharField ( max_length = 30 , null = False ) birth_day = models . DateField ( null = True ) passport = models . IntegerField ( null = True ) address = models . CharField ( max_length = 50 , null = True , blank = True ) nationality = models . CharField ( max_length = 20 , null = True , blank = True ) class Car ( models . Model ): id_car = models . IntegerField ( primary_key = True ) state_number = models . CharField ( max_length = 15 , null = False ) mark_car = models . CharField ( max_length = 20 , null = False ) model_car = models . CharField ( max_length = 20 , null = False ) color = models . CharField ( max_length = 30 , null = False ) class Ownership ( models . Model ): id_owner_car = models . IntegerField ( primary_key = True ) id_owner = models . ForeignKey ( CarOwner , on_delete = models . CASCADE ) id_car = models . ForeignKey ( Car , on_delete = models . CASCADE ) start_date = models . DateField () end_date = models . DateField ( null = True ) class DriverLicense ( models . Model ): id_license = models . IntegerField ( primary_key = True ) id_owner = models . ForeignKey ( CarOwner , on_delete = models . CASCADE ) license_number = models . CharField ( max_length = 10 , null = False ) type = models . CharField ( max_length = 10 , null = False ) date_of_license = models . DateField ()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.1"},{"location":"pr3_1/#_1","text":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u0438\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0438\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 \u0421\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c \u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439"},{"location":"pr3_1/#312","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435): \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430): \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435):","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.2"},{"location":"pr3_1/#313","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435: \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438: \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3.1.3"}]}