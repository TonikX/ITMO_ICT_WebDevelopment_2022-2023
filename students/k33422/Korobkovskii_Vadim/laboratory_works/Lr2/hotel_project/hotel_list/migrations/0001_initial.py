# Generated by Django 4.1.2 on 2022-10-30 13:59

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Имя пользователя/Username')),
                ('password', models.CharField(max_length=30, verbose_name='Пароль/Password')),
                ('surname', models.CharField(blank=True, max_length=30, verbose_name='Фамилия/Surname')),
                ('name', models.CharField(max_length=30, verbose_name='Имя/Name')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Номер телефона/Phone number')),
                ('passport', models.CharField(max_length=20, verbose_name='Серия и номер пасспорта/Passport number')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта/Email address')),
                ('birthday_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения/Birthday date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=100, verbose_name='Название отеля/Hotel name')),
                ('address', models.CharField(max_length=255, verbose_name='Адресс/Address')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг/Rating')),
                ('owner_surname', models.CharField(blank=True, max_length=30, verbose_name="Фамилия владельца/Owner's surname")),
                ('owner_name', models.CharField(max_length=30, verbose_name="Имя владельца/Owner's name")),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='Описание/Description')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateField(verbose_name='Дата заселения/Check-in date')),
                ('check_out', models.DateField(verbose_name='Дата выселения/Check-out date')),
                ('price', models.PositiveIntegerField(verbose_name='Полная стоимость проживания/Full accommodation cost')),
                ('checked_in', models.BooleanField(default=False)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Гость/Guest')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel_list.hotel', verbose_name='Отель/Hotel')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер комнаты/Room number')),
                ('floor', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Этаж/Floor')),
                ('type', models.CharField(choices=[('S', 'Стандартный номер/Standard'), ('S+', 'Улучшенный номер/Superior'), ('Su', 'Номер с улучшенной планировкой/Suite'), ('F', 'Семейный номер/Family room'), ('St', 'Студия/Studio'), ('D', 'Делюкс/Deluxe'), ('HR', 'Номер для молодожёнов/Honeymoon room'), ('HS', 'Номер люкс для молодожёнов/Honeymoon suite'), ('Dpl', 'Двухэтажный номер/Duplex'), ('BR', 'Номер с балконом/Balcony room'), ('PA', 'Номер с выходом к бассейну/Pool access room'), ('B+', 'Номер бизнес-класса/Business room'), ('P', 'Президентский номер/President'), ('CR', 'Угловой номер/Corner room'), ('A', 'Аппартаменты/Apartments')], max_length=5)),
                ('persons', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество кроватей/Number of beds')),
                ('price', models.PositiveIntegerField(verbose_name='Стоимость за одну ночь/Price for one night')),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='Описание номера/Room description')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel_list.hotel', verbose_name='Отель/Hotel')),
            ],
            options={
                'unique_together': {('hotel', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_date', models.DateField(verbose_name='Дата заселения/Check-in date')),
                ('check_out_date', models.DateField(verbose_name='Дата выселения/Check-out date')),
                ('review', models.TextField(max_length=5000, verbose_name='Отзыв/Review')),
                ('rating', models.CharField(choices=[('1', 'Ужасно/Awful'), ('2', 'Плохо/Bad'), ('3', 'Удовлетворительно/Okay'), ('4', 'Хорошо/Good'), ('5', 'Отлично/Great')], max_length=1, verbose_name='Оцените ваше нахождение в отеле/Rate your stay at the hotel')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel_list.reservation')),
            ],
        ),
        migrations.AddField(
            model_name='reservation',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel_list.room', verbose_name='Номер комнаты/Room number'),
        ),
    ]
