{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b 1","title":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"#web-","text":"","title":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"#1","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b 1"},{"location":"Lr1/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1 Work 1 server.py import socket s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.bind((\"127.0.0.1\", 4245)) while True: data, addr = s.recvfrom(1024) print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 {addr}\\n\u0417\u0430\u043f\u0440\u043e\u0441: {data.decode()}\\n\") if data == b\"Hello, server\": s.sendto(b\"Hello, client\", addr) else: s.sendto(\"\u042f \u043d\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u044e...\".encode(), addr) s.close() print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b \u0440\u0430\u0431\u043e\u0442\u0443!\") client.py import socket socket_ = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_addr = ('127.0.0.1', 4245) message = input(\"\u0412\u0430\u0448\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435: \") socket_.sendto(message.encode(), server_addr) response, server_addr = socket_.recvfrom(1024) print(f'\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {response.decode()}\\n') socket_.close() Work 2 * server.py import socket import math tcp_socket_host = socket.socket(socket.AF_INET, socket.SOCK_STREAM) tcp_socket_host.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, True) tcp_socket_host.bind(('127.0.0.1', 4245)) tcp_socket_host.listen() while True: client, addr = tcp_socket_host.accept() data = [float(i) for i in client.recv(1024).decode().split(',')] a = data[0] b = data[1] c = data[2] dis = b ** 2 - 4 * a * c if dis > 0: x1 = (-b + math.sqrt(dis)) / (2 * a) x2 = (-b - math.sqrt(dis)) / (2 * a) client.send(f'x1 = {x1}\\nx2 = {x2}'.encode()) elif dis == 0: x = -b / (2 * a) client.send(f\"x = {x}\".encode()) else: client.send(\"\u041a\u043e\u0440\u043d\u0435\u0439 \u043d\u0435\u0442\".encode()) * client.py from socket import * socket = socket(AF_INET,SOCK_STREAM) socket.connect(('127.0.0.1', 4245)) print(\"\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f.\") print(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f: ax^2 + bx + c = 0\") a = float(input(\"a: \")) b = float(input(\"b: \")) c = float(input(\"c: \")) socket.send(f'{a},{b},{c}'.encode()) recv_data = socket.recv(1024) print(f'\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \\n{recv_data.decode()}') socket.close() Work 3 * sever.py import socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) server_socket.bind(('127.0.0.1', 4245)) server_socket.listen() while True: client, address = server_socket.accept() req = client.recv(1024).decode() code = open('index.html') res = 'HTTP/1.0 200 OK\\n\\n' + code.read() code.close() if req == '\u0430\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b': client.send(f'\u0410\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b: http://127.0.0.1:4245'.encode()) else: client.sendall(res.encode()) client.close() * client.py from socket import * socket = socket(AF_INET,SOCK_STREAM) socket.connect(('127.0.0.1', 4245)) socket.send('\u0430\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b'.encode()) adress = socket.recv(1024) print(adress.decode()) socket.close() Work 4 * server.py import socket import threading server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server.bind(('127.0.0.1', 4245)) server.listen() conns = [] names = [] def print_msg(message, name = '\u0421\u0435\u0440\u0432\u0435\u0440', conn_not_send = ''): for conn in conns: if conn != conn_not_send: conn.send(f'{name} \u0433\u043e\u0432\u043e\u0440\u0438\u0442 > {message.decode()}'.encode()) def control(conn): while True: try: message = conn.recv(1024) print_msg(message, names[conns.index(conn)], conn) except: index = conns.index(conn) conns.remove(conn) conn.close() nickname = names[index] print_msg(f'{nickname} \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f.'.encode()) names.remove(nickname) break def get(): while True: conn, addr = server.accept() conn.send('\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f'.encode()) name = conn.recv(1024).decode() names.append(name) conns.append(conn) conn.send('\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443!\\n'.encode()) print_msg(f\"{name} \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f!-->\".encode()) thread = threading.Thread(target=control, args=(conn,)) thread.start() get() * client.py import socket import threading nickname = input(\"\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: \") socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.connect(('127.0.0.1', 4245)) def get(): while True: try: message = socket.recv(1024).decode() if message == '\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f': socket.send(nickname.encode()) else: print(message) except: break def send(): while True: msg = input('') if msg == 'out': socket.close() break socket.send(msg.encode()) get_thread = threading.Thread(target = get) get_thread.start() send_thread = threading.Thread(target = send) send_thread.start() Work 5 * server.py import socket lessons = [ {'name': 'Python', 'desc': 'Client/Server', 'marks' : [4,5]} ] def post_func(post_msg): info = post_msg.split('&') return [info[0][7:], info[1][5:], [int(i) for i in info[2][6:].split('%2C')]] def get(): html = '<ol>' for lesson in lessons: html += '<li>' html += f'<h1>Lesson: {lesson[\"name\"]}</h1>' for mark in lesson['marks']: html += f'<p>grade: {mark}</p>' html += '</li>' html += '</ol>' return html def add(): form = \"\"\" <form action=\"/\" method=\"post\"> <P>Lesson: </p> <input type=\"text\" name=\"lesson\" value=\"math\"/> <P>Description: </p> <input type=\"text\" name=\"desc\" value=\"numbers\"/> <P>Grades: </p> <input type=\"text\" name=\"marks\" value=\"5,5,5\"/> <br/> <input type=\"submit\" value=\"Add lesson\"/> </form>\"\"\" return form def start_server(): server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server.bind(('127.0.0.1', 4245)) server.listen() while True: client, addr = server.accept() with client: request = client.recv(1024).decode() method = request.split(' ')[0] message = request.split(' ')[1][1:-1] setting = 'HTTP/1.1 200 OK\\r\\nContent-Type: text.html; charset=UTF-8\\r\\n\\r\\n' html = '<html><head><title>Website</title></head><body>' html += \"\"\" <form method=\"get\"> <input type=\"submit\" formaction=\"add\" value=\"Add\" /> <input type=\"submit\" formaction=\"get\" value=\"Show\" /> </form> \"\"\" if method == 'GET': if message == 'get': html += get() elif message == 'add': html += add() else: post = post_func(request.split(' ')[-1].split('\\r\\n\\r\\n')[1]) lessons.append({'name': post[0], 'desc': post[1], 'marks' : post[2]}) html += \"</body></html>\" client.send(setting.encode('utf-8') + html.encode('utf-8')) start_server();","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161"},{"location":"Lr1/#1","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1"},{"location":"Lr1/#work-1","text":"server.py import socket s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.bind((\"127.0.0.1\", 4245)) while True: data, addr = s.recvfrom(1024) print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 {addr}\\n\u0417\u0430\u043f\u0440\u043e\u0441: {data.decode()}\\n\") if data == b\"Hello, server\": s.sendto(b\"Hello, client\", addr) else: s.sendto(\"\u042f \u043d\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u044e...\".encode(), addr) s.close() print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b \u0440\u0430\u0431\u043e\u0442\u0443!\") client.py import socket socket_ = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_addr = ('127.0.0.1', 4245) message = input(\"\u0412\u0430\u0448\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435: \") socket_.sendto(message.encode(), server_addr) response, server_addr = socket_.recvfrom(1024) print(f'\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {response.decode()}\\n') socket_.close()","title":"Work 1"},{"location":"Lr1/#work-2","text":"* server.py import socket import math tcp_socket_host = socket.socket(socket.AF_INET, socket.SOCK_STREAM) tcp_socket_host.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, True) tcp_socket_host.bind(('127.0.0.1', 4245)) tcp_socket_host.listen() while True: client, addr = tcp_socket_host.accept() data = [float(i) for i in client.recv(1024).decode().split(',')] a = data[0] b = data[1] c = data[2] dis = b ** 2 - 4 * a * c if dis > 0: x1 = (-b + math.sqrt(dis)) / (2 * a) x2 = (-b - math.sqrt(dis)) / (2 * a) client.send(f'x1 = {x1}\\nx2 = {x2}'.encode()) elif dis == 0: x = -b / (2 * a) client.send(f\"x = {x}\".encode()) else: client.send(\"\u041a\u043e\u0440\u043d\u0435\u0439 \u043d\u0435\u0442\".encode()) * client.py from socket import * socket = socket(AF_INET,SOCK_STREAM) socket.connect(('127.0.0.1', 4245)) print(\"\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f.\") print(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f: ax^2 + bx + c = 0\") a = float(input(\"a: \")) b = float(input(\"b: \")) c = float(input(\"c: \")) socket.send(f'{a},{b},{c}'.encode()) recv_data = socket.recv(1024) print(f'\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \\n{recv_data.decode()}') socket.close()","title":"Work 2"},{"location":"Lr1/#work-3","text":"* sever.py import socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) server_socket.bind(('127.0.0.1', 4245)) server_socket.listen() while True: client, address = server_socket.accept() req = client.recv(1024).decode() code = open('index.html') res = 'HTTP/1.0 200 OK\\n\\n' + code.read() code.close() if req == '\u0430\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b': client.send(f'\u0410\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b: http://127.0.0.1:4245'.encode()) else: client.sendall(res.encode()) client.close() * client.py from socket import * socket = socket(AF_INET,SOCK_STREAM) socket.connect(('127.0.0.1', 4245)) socket.send('\u0430\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b'.encode()) adress = socket.recv(1024) print(adress.decode()) socket.close()","title":"Work 3"},{"location":"Lr1/#work-4","text":"* server.py import socket import threading server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server.bind(('127.0.0.1', 4245)) server.listen() conns = [] names = [] def print_msg(message, name = '\u0421\u0435\u0440\u0432\u0435\u0440', conn_not_send = ''): for conn in conns: if conn != conn_not_send: conn.send(f'{name} \u0433\u043e\u0432\u043e\u0440\u0438\u0442 > {message.decode()}'.encode()) def control(conn): while True: try: message = conn.recv(1024) print_msg(message, names[conns.index(conn)], conn) except: index = conns.index(conn) conns.remove(conn) conn.close() nickname = names[index] print_msg(f'{nickname} \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f.'.encode()) names.remove(nickname) break def get(): while True: conn, addr = server.accept() conn.send('\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f'.encode()) name = conn.recv(1024).decode() names.append(name) conns.append(conn) conn.send('\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443!\\n'.encode()) print_msg(f\"{name} \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f!-->\".encode()) thread = threading.Thread(target=control, args=(conn,)) thread.start() get() * client.py import socket import threading nickname = input(\"\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: \") socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.connect(('127.0.0.1', 4245)) def get(): while True: try: message = socket.recv(1024).decode() if message == '\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f': socket.send(nickname.encode()) else: print(message) except: break def send(): while True: msg = input('') if msg == 'out': socket.close() break socket.send(msg.encode()) get_thread = threading.Thread(target = get) get_thread.start() send_thread = threading.Thread(target = send) send_thread.start()","title":"Work 4"},{"location":"Lr1/#work-5","text":"* server.py import socket lessons = [ {'name': 'Python', 'desc': 'Client/Server', 'marks' : [4,5]} ] def post_func(post_msg): info = post_msg.split('&') return [info[0][7:], info[1][5:], [int(i) for i in info[2][6:].split('%2C')]] def get(): html = '<ol>' for lesson in lessons: html += '<li>' html += f'<h1>Lesson: {lesson[\"name\"]}</h1>' for mark in lesson['marks']: html += f'<p>grade: {mark}</p>' html += '</li>' html += '</ol>' return html def add(): form = \"\"\" <form action=\"/\" method=\"post\"> <P>Lesson: </p> <input type=\"text\" name=\"lesson\" value=\"math\"/> <P>Description: </p> <input type=\"text\" name=\"desc\" value=\"numbers\"/> <P>Grades: </p> <input type=\"text\" name=\"marks\" value=\"5,5,5\"/> <br/> <input type=\"submit\" value=\"Add lesson\"/> </form>\"\"\" return form def start_server(): server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server.bind(('127.0.0.1', 4245)) server.listen() while True: client, addr = server.accept() with client: request = client.recv(1024).decode() method = request.split(' ')[0] message = request.split(' ')[1][1:-1] setting = 'HTTP/1.1 200 OK\\r\\nContent-Type: text.html; charset=UTF-8\\r\\n\\r\\n' html = '<html><head><title>Website</title></head><body>' html += \"\"\" <form method=\"get\"> <input type=\"submit\" formaction=\"add\" value=\"Add\" /> <input type=\"submit\" formaction=\"get\" value=\"Show\" /> </form> \"\"\" if method == 'GET': if message == 'get': html += get() elif message == 'add': html += add() else: post = post_func(request.split(' ')[-1].split('\\r\\n\\r\\n')[1]) lessons.append({'name': post[0], 'desc': post[1], 'marks' : post[2]}) html += \"</body></html>\" client.send(setting.encode('utf-8') + html.encode('utf-8')) start_server();","title":"Work 5"},{"location":"about/","text":"","title":"About"}]}